[{"name":"AD","description":"com.isakaro.kwik.ui.utils.KwikCountry.AD","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-a-d/index.html","searchKeys":["AD","AD","com.isakaro.kwik.ui.utils.KwikCountry.AD"]},{"name":"AE","description":"com.isakaro.kwik.ui.utils.KwikCountry.AE","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-a-e/index.html","searchKeys":["AE","AE","com.isakaro.kwik.ui.utils.KwikCountry.AE"]},{"name":"AF","description":"com.isakaro.kwik.ui.utils.KwikCountry.AF","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-a-f/index.html","searchKeys":["AF","AF","com.isakaro.kwik.ui.utils.KwikCountry.AF"]},{"name":"AG","description":"com.isakaro.kwik.ui.utils.KwikCountry.AG","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-a-g/index.html","searchKeys":["AG","AG","com.isakaro.kwik.ui.utils.KwikCountry.AG"]},{"name":"AI","description":"com.isakaro.kwik.ui.utils.KwikCountry.AI","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-a-i/index.html","searchKeys":["AI","AI","com.isakaro.kwik.ui.utils.KwikCountry.AI"]},{"name":"AL","description":"com.isakaro.kwik.ui.utils.KwikCountry.AL","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-a-l/index.html","searchKeys":["AL","AL","com.isakaro.kwik.ui.utils.KwikCountry.AL"]},{"name":"AM","description":"com.isakaro.kwik.ui.utils.KwikCountry.AM","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-a-m/index.html","searchKeys":["AM","AM","com.isakaro.kwik.ui.utils.KwikCountry.AM"]},{"name":"AN","description":"com.isakaro.kwik.ui.utils.KwikCountry.AN","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-a-n/index.html","searchKeys":["AN","AN","com.isakaro.kwik.ui.utils.KwikCountry.AN"]},{"name":"AO","description":"com.isakaro.kwik.ui.utils.KwikCountry.AO","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-a-o/index.html","searchKeys":["AO","AO","com.isakaro.kwik.ui.utils.KwikCountry.AO"]},{"name":"APPLE","description":"com.isakaro.kwik.ui.button.KwikSocialPlatform.APPLE","location":"kwik/com.isakaro.kwik.ui.button/-kwik-social-platform/-a-p-p-l-e/index.html","searchKeys":["APPLE","APPLE","com.isakaro.kwik.ui.button.KwikSocialPlatform.APPLE"]},{"name":"AQ","description":"com.isakaro.kwik.ui.utils.KwikCountry.AQ","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-a-q/index.html","searchKeys":["AQ","AQ","com.isakaro.kwik.ui.utils.KwikCountry.AQ"]},{"name":"AR","description":"com.isakaro.kwik.ui.utils.KwikCountry.AR","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-a-r/index.html","searchKeys":["AR","AR","com.isakaro.kwik.ui.utils.KwikCountry.AR"]},{"name":"AS","description":"com.isakaro.kwik.ui.utils.KwikCountry.AS","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-a-s/index.html","searchKeys":["AS","AS","com.isakaro.kwik.ui.utils.KwikCountry.AS"]},{"name":"AT","description":"com.isakaro.kwik.ui.utils.KwikCountry.AT","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-a-t/index.html","searchKeys":["AT","AT","com.isakaro.kwik.ui.utils.KwikCountry.AT"]},{"name":"AU","description":"com.isakaro.kwik.ui.utils.KwikCountry.AU","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-a-u/index.html","searchKeys":["AU","AU","com.isakaro.kwik.ui.utils.KwikCountry.AU"]},{"name":"AW","description":"com.isakaro.kwik.ui.utils.KwikCountry.AW","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-a-w/index.html","searchKeys":["AW","AW","com.isakaro.kwik.ui.utils.KwikCountry.AW"]},{"name":"AX","description":"com.isakaro.kwik.ui.utils.KwikCountry.AX","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-a-x/index.html","searchKeys":["AX","AX","com.isakaro.kwik.ui.utils.KwikCountry.AX"]},{"name":"AZ","description":"com.isakaro.kwik.ui.utils.KwikCountry.AZ","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-a-z/index.html","searchKeys":["AZ","AZ","com.isakaro.kwik.ui.utils.KwikCountry.AZ"]},{"name":"BA","description":"com.isakaro.kwik.ui.utils.KwikCountry.BA","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-b-a/index.html","searchKeys":["BA","BA","com.isakaro.kwik.ui.utils.KwikCountry.BA"]},{"name":"BB","description":"com.isakaro.kwik.ui.utils.KwikCountry.BB","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-b-b/index.html","searchKeys":["BB","BB","com.isakaro.kwik.ui.utils.KwikCountry.BB"]},{"name":"BD","description":"com.isakaro.kwik.ui.utils.KwikCountry.BD","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-b-d/index.html","searchKeys":["BD","BD","com.isakaro.kwik.ui.utils.KwikCountry.BD"]},{"name":"BE","description":"com.isakaro.kwik.ui.utils.KwikCountry.BE","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-b-e/index.html","searchKeys":["BE","BE","com.isakaro.kwik.ui.utils.KwikCountry.BE"]},{"name":"BF","description":"com.isakaro.kwik.ui.utils.KwikCountry.BF","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-b-f/index.html","searchKeys":["BF","BF","com.isakaro.kwik.ui.utils.KwikCountry.BF"]},{"name":"BG","description":"com.isakaro.kwik.ui.utils.KwikCountry.BG","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-b-g/index.html","searchKeys":["BG","BG","com.isakaro.kwik.ui.utils.KwikCountry.BG"]},{"name":"BH","description":"com.isakaro.kwik.ui.utils.KwikCountry.BH","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-b-h/index.html","searchKeys":["BH","BH","com.isakaro.kwik.ui.utils.KwikCountry.BH"]},{"name":"BI","description":"com.isakaro.kwik.ui.utils.KwikCountry.BI","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-b-i/index.html","searchKeys":["BI","BI","com.isakaro.kwik.ui.utils.KwikCountry.BI"]},{"name":"BJ","description":"com.isakaro.kwik.ui.utils.KwikCountry.BJ","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-b-j/index.html","searchKeys":["BJ","BJ","com.isakaro.kwik.ui.utils.KwikCountry.BJ"]},{"name":"BM","description":"com.isakaro.kwik.ui.utils.KwikCountry.BM","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-b-m/index.html","searchKeys":["BM","BM","com.isakaro.kwik.ui.utils.KwikCountry.BM"]},{"name":"BN","description":"com.isakaro.kwik.ui.utils.KwikCountry.BN","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-b-n/index.html","searchKeys":["BN","BN","com.isakaro.kwik.ui.utils.KwikCountry.BN"]},{"name":"BO","description":"com.isakaro.kwik.ui.utils.KwikCountry.BO","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-b-o/index.html","searchKeys":["BO","BO","com.isakaro.kwik.ui.utils.KwikCountry.BO"]},{"name":"BR","description":"com.isakaro.kwik.ui.utils.KwikCountry.BR","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-b-r/index.html","searchKeys":["BR","BR","com.isakaro.kwik.ui.utils.KwikCountry.BR"]},{"name":"BS","description":"com.isakaro.kwik.ui.utils.KwikCountry.BS","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-b-s/index.html","searchKeys":["BS","BS","com.isakaro.kwik.ui.utils.KwikCountry.BS"]},{"name":"BT","description":"com.isakaro.kwik.ui.utils.KwikCountry.BT","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-b-t/index.html","searchKeys":["BT","BT","com.isakaro.kwik.ui.utils.KwikCountry.BT"]},{"name":"BV","description":"com.isakaro.kwik.ui.utils.KwikCountry.BV","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-b-v/index.html","searchKeys":["BV","BV","com.isakaro.kwik.ui.utils.KwikCountry.BV"]},{"name":"BW","description":"com.isakaro.kwik.ui.utils.KwikCountry.BW","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-b-w/index.html","searchKeys":["BW","BW","com.isakaro.kwik.ui.utils.KwikCountry.BW"]},{"name":"BY","description":"com.isakaro.kwik.ui.utils.KwikCountry.BY","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-b-y/index.html","searchKeys":["BY","BY","com.isakaro.kwik.ui.utils.KwikCountry.BY"]},{"name":"BZ","description":"com.isakaro.kwik.ui.utils.KwikCountry.BZ","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-b-z/index.html","searchKeys":["BZ","BZ","com.isakaro.kwik.ui.utils.KwikCountry.BZ"]},{"name":"CA","description":"com.isakaro.kwik.ui.utils.KwikCountry.CA","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-c-a/index.html","searchKeys":["CA","CA","com.isakaro.kwik.ui.utils.KwikCountry.CA"]},{"name":"CC","description":"com.isakaro.kwik.ui.utils.KwikCountry.CC","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-c-c/index.html","searchKeys":["CC","CC","com.isakaro.kwik.ui.utils.KwikCountry.CC"]},{"name":"CD","description":"com.isakaro.kwik.ui.utils.KwikCountry.CD","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-c-d/index.html","searchKeys":["CD","CD","com.isakaro.kwik.ui.utils.KwikCountry.CD"]},{"name":"CF","description":"com.isakaro.kwik.ui.utils.KwikCountry.CF","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-c-f/index.html","searchKeys":["CF","CF","com.isakaro.kwik.ui.utils.KwikCountry.CF"]},{"name":"CG","description":"com.isakaro.kwik.ui.utils.KwikCountry.CG","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-c-g/index.html","searchKeys":["CG","CG","com.isakaro.kwik.ui.utils.KwikCountry.CG"]},{"name":"CH","description":"com.isakaro.kwik.ui.utils.KwikCountry.CH","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-c-h/index.html","searchKeys":["CH","CH","com.isakaro.kwik.ui.utils.KwikCountry.CH"]},{"name":"CHAR","description":"com.isakaro.kwik.ui.form.KwikPasswordRequirementType.CHAR","location":"kwik/com.isakaro.kwik.ui.form/-kwik-password-requirement-type/-c-h-a-r/index.html","searchKeys":["CHAR","CHAR","com.isakaro.kwik.ui.form.KwikPasswordRequirementType.CHAR"]},{"name":"CIRCULAR","description":"com.isakaro.kwik.ui.button.KwikButtonLoadingStyle.CIRCULAR","location":"kwik/com.isakaro.kwik.ui.button/-kwik-button-loading-style/-c-i-r-c-u-l-a-r/index.html","searchKeys":["CIRCULAR","CIRCULAR","com.isakaro.kwik.ui.button.KwikButtonLoadingStyle.CIRCULAR"]},{"name":"CK","description":"com.isakaro.kwik.ui.utils.KwikCountry.CK","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-c-k/index.html","searchKeys":["CK","CK","com.isakaro.kwik.ui.utils.KwikCountry.CK"]},{"name":"CL","description":"com.isakaro.kwik.ui.utils.KwikCountry.CL","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-c-l/index.html","searchKeys":["CL","CL","com.isakaro.kwik.ui.utils.KwikCountry.CL"]},{"name":"CM","description":"com.isakaro.kwik.ui.utils.KwikCountry.CM","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-c-m/index.html","searchKeys":["CM","CM","com.isakaro.kwik.ui.utils.KwikCountry.CM"]},{"name":"CN","description":"com.isakaro.kwik.ui.utils.KwikCountry.CN","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-c-n/index.html","searchKeys":["CN","CN","com.isakaro.kwik.ui.utils.KwikCountry.CN"]},{"name":"CO","description":"com.isakaro.kwik.ui.utils.KwikCountry.CO","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-c-o/index.html","searchKeys":["CO","CO","com.isakaro.kwik.ui.utils.KwikCountry.CO"]},{"name":"CR","description":"com.isakaro.kwik.ui.utils.KwikCountry.CR","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-c-r/index.html","searchKeys":["CR","CR","com.isakaro.kwik.ui.utils.KwikCountry.CR"]},{"name":"CU","description":"com.isakaro.kwik.ui.utils.KwikCountry.CU","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-c-u/index.html","searchKeys":["CU","CU","com.isakaro.kwik.ui.utils.KwikCountry.CU"]},{"name":"CV","description":"com.isakaro.kwik.ui.utils.KwikCountry.CV","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-c-v/index.html","searchKeys":["CV","CV","com.isakaro.kwik.ui.utils.KwikCountry.CV"]},{"name":"CX","description":"com.isakaro.kwik.ui.utils.KwikCountry.CX","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-c-x/index.html","searchKeys":["CX","CX","com.isakaro.kwik.ui.utils.KwikCountry.CX"]},{"name":"CY","description":"com.isakaro.kwik.ui.utils.KwikCountry.CY","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-c-y/index.html","searchKeys":["CY","CY","com.isakaro.kwik.ui.utils.KwikCountry.CY"]},{"name":"CZ","description":"com.isakaro.kwik.ui.utils.KwikCountry.CZ","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-c-z/index.html","searchKeys":["CZ","CZ","com.isakaro.kwik.ui.utils.KwikCountry.CZ"]},{"name":"DE","description":"com.isakaro.kwik.ui.utils.KwikCountry.DE","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-d-e/index.html","searchKeys":["DE","DE","com.isakaro.kwik.ui.utils.KwikCountry.DE"]},{"name":"DJ","description":"com.isakaro.kwik.ui.utils.KwikCountry.DJ","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-d-j/index.html","searchKeys":["DJ","DJ","com.isakaro.kwik.ui.utils.KwikCountry.DJ"]},{"name":"DK","description":"com.isakaro.kwik.ui.utils.KwikCountry.DK","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-d-k/index.html","searchKeys":["DK","DK","com.isakaro.kwik.ui.utils.KwikCountry.DK"]},{"name":"DM","description":"com.isakaro.kwik.ui.utils.KwikCountry.DM","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-d-m/index.html","searchKeys":["DM","DM","com.isakaro.kwik.ui.utils.KwikCountry.DM"]},{"name":"DO","description":"com.isakaro.kwik.ui.utils.KwikCountry.DO","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-d-o/index.html","searchKeys":["DO","DO","com.isakaro.kwik.ui.utils.KwikCountry.DO"]},{"name":"DZ","description":"com.isakaro.kwik.ui.utils.KwikCountry.DZ","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-d-z/index.html","searchKeys":["DZ","DZ","com.isakaro.kwik.ui.utils.KwikCountry.DZ"]},{"name":"EC","description":"com.isakaro.kwik.ui.utils.KwikCountry.EC","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-e-c/index.html","searchKeys":["EC","EC","com.isakaro.kwik.ui.utils.KwikCountry.EC"]},{"name":"EE","description":"com.isakaro.kwik.ui.utils.KwikCountry.EE","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-e-e/index.html","searchKeys":["EE","EE","com.isakaro.kwik.ui.utils.KwikCountry.EE"]},{"name":"EG","description":"com.isakaro.kwik.ui.utils.KwikCountry.EG","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-e-g/index.html","searchKeys":["EG","EG","com.isakaro.kwik.ui.utils.KwikCountry.EG"]},{"name":"EH","description":"com.isakaro.kwik.ui.utils.KwikCountry.EH","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-e-h/index.html","searchKeys":["EH","EH","com.isakaro.kwik.ui.utils.KwikCountry.EH"]},{"name":"ER","description":"com.isakaro.kwik.ui.utils.KwikCountry.ER","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-e-r/index.html","searchKeys":["ER","ER","com.isakaro.kwik.ui.utils.KwikCountry.ER"]},{"name":"ERROR","description":"com.isakaro.kwik.ui.image.ImageLoaderState.ERROR","location":"kwik/com.isakaro.kwik.ui.image/-image-loader-state/-e-r-r-o-r/index.html","searchKeys":["ERROR","ERROR","com.isakaro.kwik.ui.image.ImageLoaderState.ERROR"]},{"name":"ERROR","description":"com.isakaro.kwik.ui.toast.KwikToastType.ERROR","location":"kwik/com.isakaro.kwik.ui.toast/-kwik-toast-type/-e-r-r-o-r/index.html","searchKeys":["ERROR","ERROR","com.isakaro.kwik.ui.toast.KwikToastType.ERROR"]},{"name":"ES","description":"com.isakaro.kwik.ui.utils.KwikCountry.ES","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-e-s/index.html","searchKeys":["ES","ES","com.isakaro.kwik.ui.utils.KwikCountry.ES"]},{"name":"ET","description":"com.isakaro.kwik.ui.utils.KwikCountry.ET","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-e-t/index.html","searchKeys":["ET","ET","com.isakaro.kwik.ui.utils.KwikCountry.ET"]},{"name":"FACEBOOK","description":"com.isakaro.kwik.ui.button.KwikSocialPlatform.FACEBOOK","location":"kwik/com.isakaro.kwik.ui.button/-kwik-social-platform/-f-a-c-e-b-o-o-k/index.html","searchKeys":["FACEBOOK","FACEBOOK","com.isakaro.kwik.ui.button.KwikSocialPlatform.FACEBOOK"]},{"name":"FI","description":"com.isakaro.kwik.ui.utils.KwikCountry.FI","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-f-i/index.html","searchKeys":["FI","FI","com.isakaro.kwik.ui.utils.KwikCountry.FI"]},{"name":"FJ","description":"com.isakaro.kwik.ui.utils.KwikCountry.FJ","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-f-j/index.html","searchKeys":["FJ","FJ","com.isakaro.kwik.ui.utils.KwikCountry.FJ"]},{"name":"FK","description":"com.isakaro.kwik.ui.utils.KwikCountry.FK","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-f-k/index.html","searchKeys":["FK","FK","com.isakaro.kwik.ui.utils.KwikCountry.FK"]},{"name":"FM","description":"com.isakaro.kwik.ui.utils.KwikCountry.FM","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-f-m/index.html","searchKeys":["FM","FM","com.isakaro.kwik.ui.utils.KwikCountry.FM"]},{"name":"FO","description":"com.isakaro.kwik.ui.utils.KwikCountry.FO","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-f-o/index.html","searchKeys":["FO","FO","com.isakaro.kwik.ui.utils.KwikCountry.FO"]},{"name":"FR","description":"com.isakaro.kwik.ui.utils.KwikCountry.FR","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-f-r/index.html","searchKeys":["FR","FR","com.isakaro.kwik.ui.utils.KwikCountry.FR"]},{"name":"GA","description":"com.isakaro.kwik.ui.utils.KwikCountry.GA","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-g-a/index.html","searchKeys":["GA","GA","com.isakaro.kwik.ui.utils.KwikCountry.GA"]},{"name":"GB","description":"com.isakaro.kwik.ui.utils.KwikCountry.GB","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-g-b/index.html","searchKeys":["GB","GB","com.isakaro.kwik.ui.utils.KwikCountry.GB"]},{"name":"GD","description":"com.isakaro.kwik.ui.utils.KwikCountry.GD","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-g-d/index.html","searchKeys":["GD","GD","com.isakaro.kwik.ui.utils.KwikCountry.GD"]},{"name":"GE","description":"com.isakaro.kwik.ui.utils.KwikCountry.GE","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-g-e/index.html","searchKeys":["GE","GE","com.isakaro.kwik.ui.utils.KwikCountry.GE"]},{"name":"GF","description":"com.isakaro.kwik.ui.utils.KwikCountry.GF","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-g-f/index.html","searchKeys":["GF","GF","com.isakaro.kwik.ui.utils.KwikCountry.GF"]},{"name":"GG","description":"com.isakaro.kwik.ui.utils.KwikCountry.GG","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-g-g/index.html","searchKeys":["GG","GG","com.isakaro.kwik.ui.utils.KwikCountry.GG"]},{"name":"GH","description":"com.isakaro.kwik.ui.utils.KwikCountry.GH","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-g-h/index.html","searchKeys":["GH","GH","com.isakaro.kwik.ui.utils.KwikCountry.GH"]},{"name":"GI","description":"com.isakaro.kwik.ui.utils.KwikCountry.GI","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-g-i/index.html","searchKeys":["GI","GI","com.isakaro.kwik.ui.utils.KwikCountry.GI"]},{"name":"GL","description":"com.isakaro.kwik.ui.utils.KwikCountry.GL","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-g-l/index.html","searchKeys":["GL","GL","com.isakaro.kwik.ui.utils.KwikCountry.GL"]},{"name":"GM","description":"com.isakaro.kwik.ui.utils.KwikCountry.GM","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-g-m/index.html","searchKeys":["GM","GM","com.isakaro.kwik.ui.utils.KwikCountry.GM"]},{"name":"GN","description":"com.isakaro.kwik.ui.utils.KwikCountry.GN","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-g-n/index.html","searchKeys":["GN","GN","com.isakaro.kwik.ui.utils.KwikCountry.GN"]},{"name":"GOOGLE","description":"com.isakaro.kwik.ui.button.KwikSocialPlatform.GOOGLE","location":"kwik/com.isakaro.kwik.ui.button/-kwik-social-platform/-g-o-o-g-l-e/index.html","searchKeys":["GOOGLE","GOOGLE","com.isakaro.kwik.ui.button.KwikSocialPlatform.GOOGLE"]},{"name":"GP","description":"com.isakaro.kwik.ui.utils.KwikCountry.GP","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-g-p/index.html","searchKeys":["GP","GP","com.isakaro.kwik.ui.utils.KwikCountry.GP"]},{"name":"GQ","description":"com.isakaro.kwik.ui.utils.KwikCountry.GQ","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-g-q/index.html","searchKeys":["GQ","GQ","com.isakaro.kwik.ui.utils.KwikCountry.GQ"]},{"name":"GR","description":"com.isakaro.kwik.ui.utils.KwikCountry.GR","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-g-r/index.html","searchKeys":["GR","GR","com.isakaro.kwik.ui.utils.KwikCountry.GR"]},{"name":"GT","description":"com.isakaro.kwik.ui.utils.KwikCountry.GT","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-g-t/index.html","searchKeys":["GT","GT","com.isakaro.kwik.ui.utils.KwikCountry.GT"]},{"name":"GU","description":"com.isakaro.kwik.ui.utils.KwikCountry.GU","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-g-u/index.html","searchKeys":["GU","GU","com.isakaro.kwik.ui.utils.KwikCountry.GU"]},{"name":"GW","description":"com.isakaro.kwik.ui.utils.KwikCountry.GW","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-g-w/index.html","searchKeys":["GW","GW","com.isakaro.kwik.ui.utils.KwikCountry.GW"]},{"name":"GY","description":"com.isakaro.kwik.ui.utils.KwikCountry.GY","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-g-y/index.html","searchKeys":["GY","GY","com.isakaro.kwik.ui.utils.KwikCountry.GY"]},{"name":"HK","description":"com.isakaro.kwik.ui.utils.KwikCountry.HK","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-h-k/index.html","searchKeys":["HK","HK","com.isakaro.kwik.ui.utils.KwikCountry.HK"]},{"name":"HM","description":"com.isakaro.kwik.ui.utils.KwikCountry.HM","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-h-m/index.html","searchKeys":["HM","HM","com.isakaro.kwik.ui.utils.KwikCountry.HM"]},{"name":"HN","description":"com.isakaro.kwik.ui.utils.KwikCountry.HN","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-h-n/index.html","searchKeys":["HN","HN","com.isakaro.kwik.ui.utils.KwikCountry.HN"]},{"name":"HR","description":"com.isakaro.kwik.ui.utils.KwikCountry.HR","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-h-r/index.html","searchKeys":["HR","HR","com.isakaro.kwik.ui.utils.KwikCountry.HR"]},{"name":"HT","description":"com.isakaro.kwik.ui.utils.KwikCountry.HT","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-h-t/index.html","searchKeys":["HT","HT","com.isakaro.kwik.ui.utils.KwikCountry.HT"]},{"name":"HU","description":"com.isakaro.kwik.ui.utils.KwikCountry.HU","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-h-u/index.html","searchKeys":["HU","HU","com.isakaro.kwik.ui.utils.KwikCountry.HU"]},{"name":"Hybrid","description":"com.isakaro.kwik.ui.date.KwikDatePickerMode.Hybrid","location":"kwik/com.isakaro.kwik.ui.date/-kwik-date-picker-mode/-hybrid/index.html","searchKeys":["Hybrid","Hybrid","com.isakaro.kwik.ui.date.KwikDatePickerMode.Hybrid"]},{"name":"ID","description":"com.isakaro.kwik.ui.utils.KwikCountry.ID","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-i-d/index.html","searchKeys":["ID","ID","com.isakaro.kwik.ui.utils.KwikCountry.ID"]},{"name":"IE","description":"com.isakaro.kwik.ui.utils.KwikCountry.IE","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-i-e/index.html","searchKeys":["IE","IE","com.isakaro.kwik.ui.utils.KwikCountry.IE"]},{"name":"IL","description":"com.isakaro.kwik.ui.utils.KwikCountry.IL","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-i-l/index.html","searchKeys":["IL","IL","com.isakaro.kwik.ui.utils.KwikCountry.IL"]},{"name":"IM","description":"com.isakaro.kwik.ui.utils.KwikCountry.IM","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-i-m/index.html","searchKeys":["IM","IM","com.isakaro.kwik.ui.utils.KwikCountry.IM"]},{"name":"IN","description":"com.isakaro.kwik.ui.utils.KwikCountry.IN","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-i-n/index.html","searchKeys":["IN","IN","com.isakaro.kwik.ui.utils.KwikCountry.IN"]},{"name":"IO","description":"com.isakaro.kwik.ui.utils.KwikCountry.IO","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-i-o/index.html","searchKeys":["IO","IO","com.isakaro.kwik.ui.utils.KwikCountry.IO"]},{"name":"IQ","description":"com.isakaro.kwik.ui.utils.KwikCountry.IQ","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-i-q/index.html","searchKeys":["IQ","IQ","com.isakaro.kwik.ui.utils.KwikCountry.IQ"]},{"name":"IR","description":"com.isakaro.kwik.ui.utils.KwikCountry.IR","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-i-r/index.html","searchKeys":["IR","IR","com.isakaro.kwik.ui.utils.KwikCountry.IR"]},{"name":"IS","description":"com.isakaro.kwik.ui.utils.KwikCountry.IS","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-i-s/index.html","searchKeys":["IS","IS","com.isakaro.kwik.ui.utils.KwikCountry.IS"]},{"name":"IT","description":"com.isakaro.kwik.ui.utils.KwikCountry.IT","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-i-t/index.html","searchKeys":["IT","IT","com.isakaro.kwik.ui.utils.KwikCountry.IT"]},{"name":"Input","description":"com.isakaro.kwik.ui.date.KwikDatePickerMode.Input","location":"kwik/com.isakaro.kwik.ui.date/-kwik-date-picker-mode/-input/index.html","searchKeys":["Input","Input","com.isakaro.kwik.ui.date.KwikDatePickerMode.Input"]},{"name":"JE","description":"com.isakaro.kwik.ui.utils.KwikCountry.JE","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-j-e/index.html","searchKeys":["JE","JE","com.isakaro.kwik.ui.utils.KwikCountry.JE"]},{"name":"JM","description":"com.isakaro.kwik.ui.utils.KwikCountry.JM","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-j-m/index.html","searchKeys":["JM","JM","com.isakaro.kwik.ui.utils.KwikCountry.JM"]},{"name":"JO","description":"com.isakaro.kwik.ui.utils.KwikCountry.JO","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-j-o/index.html","searchKeys":["JO","JO","com.isakaro.kwik.ui.utils.KwikCountry.JO"]},{"name":"JP","description":"com.isakaro.kwik.ui.utils.KwikCountry.JP","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-j-p/index.html","searchKeys":["JP","JP","com.isakaro.kwik.ui.utils.KwikCountry.JP"]},{"name":"KE","description":"com.isakaro.kwik.ui.utils.KwikCountry.KE","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-k-e/index.html","searchKeys":["KE","KE","com.isakaro.kwik.ui.utils.KwikCountry.KE"]},{"name":"KG","description":"com.isakaro.kwik.ui.utils.KwikCountry.KG","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-k-g/index.html","searchKeys":["KG","KG","com.isakaro.kwik.ui.utils.KwikCountry.KG"]},{"name":"KH","description":"com.isakaro.kwik.ui.utils.KwikCountry.KH","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-k-h/index.html","searchKeys":["KH","KH","com.isakaro.kwik.ui.utils.KwikCountry.KH"]},{"name":"KI","description":"com.isakaro.kwik.ui.utils.KwikCountry.KI","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-k-i/index.html","searchKeys":["KI","KI","com.isakaro.kwik.ui.utils.KwikCountry.KI"]},{"name":"KM","description":"com.isakaro.kwik.ui.utils.KwikCountry.KM","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-k-m/index.html","searchKeys":["KM","KM","com.isakaro.kwik.ui.utils.KwikCountry.KM"]},{"name":"KN","description":"com.isakaro.kwik.ui.utils.KwikCountry.KN","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-k-n/index.html","searchKeys":["KN","KN","com.isakaro.kwik.ui.utils.KwikCountry.KN"]},{"name":"KP","description":"com.isakaro.kwik.ui.utils.KwikCountry.KP","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-k-p/index.html","searchKeys":["KP","KP","com.isakaro.kwik.ui.utils.KwikCountry.KP"]},{"name":"KR","description":"com.isakaro.kwik.ui.utils.KwikCountry.KR","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-k-r/index.html","searchKeys":["KR","KR","com.isakaro.kwik.ui.utils.KwikCountry.KR"]},{"name":"KW","description":"com.isakaro.kwik.ui.utils.KwikCountry.KW","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-k-w/index.html","searchKeys":["KW","KW","com.isakaro.kwik.ui.utils.KwikCountry.KW"]},{"name":"KY","description":"com.isakaro.kwik.ui.utils.KwikCountry.KY","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-k-y/index.html","searchKeys":["KY","KY","com.isakaro.kwik.ui.utils.KwikCountry.KY"]},{"name":"KZ","description":"com.isakaro.kwik.ui.utils.KwikCountry.KZ","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-k-z/index.html","searchKeys":["KZ","KZ","com.isakaro.kwik.ui.utils.KwikCountry.KZ"]},{"name":"LA","description":"com.isakaro.kwik.ui.utils.KwikCountry.LA","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-l-a/index.html","searchKeys":["LA","LA","com.isakaro.kwik.ui.utils.KwikCountry.LA"]},{"name":"LB","description":"com.isakaro.kwik.ui.utils.KwikCountry.LB","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-l-b/index.html","searchKeys":["LB","LB","com.isakaro.kwik.ui.utils.KwikCountry.LB"]},{"name":"LC","description":"com.isakaro.kwik.ui.utils.KwikCountry.LC","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-l-c/index.html","searchKeys":["LC","LC","com.isakaro.kwik.ui.utils.KwikCountry.LC"]},{"name":"LENGTH","description":"com.isakaro.kwik.ui.form.KwikPasswordRequirementType.LENGTH","location":"kwik/com.isakaro.kwik.ui.form/-kwik-password-requirement-type/-l-e-n-g-t-h/index.html","searchKeys":["LENGTH","LENGTH","com.isakaro.kwik.ui.form.KwikPasswordRequirementType.LENGTH"]},{"name":"LI","description":"com.isakaro.kwik.ui.utils.KwikCountry.LI","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-l-i/index.html","searchKeys":["LI","LI","com.isakaro.kwik.ui.utils.KwikCountry.LI"]},{"name":"LINEAR","description":"com.isakaro.kwik.ui.button.KwikButtonLoadingStyle.LINEAR","location":"kwik/com.isakaro.kwik.ui.button/-kwik-button-loading-style/-l-i-n-e-a-r/index.html","searchKeys":["LINEAR","LINEAR","com.isakaro.kwik.ui.button.KwikButtonLoadingStyle.LINEAR"]},{"name":"LK","description":"com.isakaro.kwik.ui.utils.KwikCountry.LK","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-l-k/index.html","searchKeys":["LK","LK","com.isakaro.kwik.ui.utils.KwikCountry.LK"]},{"name":"LOADING","description":"com.isakaro.kwik.ui.image.ImageLoaderState.LOADING","location":"kwik/com.isakaro.kwik.ui.image/-image-loader-state/-l-o-a-d-i-n-g/index.html","searchKeys":["LOADING","LOADING","com.isakaro.kwik.ui.image.ImageLoaderState.LOADING"]},{"name":"LR","description":"com.isakaro.kwik.ui.utils.KwikCountry.LR","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-l-r/index.html","searchKeys":["LR","LR","com.isakaro.kwik.ui.utils.KwikCountry.LR"]},{"name":"LS","description":"com.isakaro.kwik.ui.utils.KwikCountry.LS","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-l-s/index.html","searchKeys":["LS","LS","com.isakaro.kwik.ui.utils.KwikCountry.LS"]},{"name":"LT","description":"com.isakaro.kwik.ui.utils.KwikCountry.LT","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-l-t/index.html","searchKeys":["LT","LT","com.isakaro.kwik.ui.utils.KwikCountry.LT"]},{"name":"LU","description":"com.isakaro.kwik.ui.utils.KwikCountry.LU","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-l-u/index.html","searchKeys":["LU","LU","com.isakaro.kwik.ui.utils.KwikCountry.LU"]},{"name":"LV","description":"com.isakaro.kwik.ui.utils.KwikCountry.LV","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-l-v/index.html","searchKeys":["LV","LV","com.isakaro.kwik.ui.utils.KwikCountry.LV"]},{"name":"LY","description":"com.isakaro.kwik.ui.utils.KwikCountry.LY","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-l-y/index.html","searchKeys":["LY","LY","com.isakaro.kwik.ui.utils.KwikCountry.LY"]},{"name":"MA","description":"com.isakaro.kwik.ui.utils.KwikCountry.MA","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-m-a/index.html","searchKeys":["MA","MA","com.isakaro.kwik.ui.utils.KwikCountry.MA"]},{"name":"MC","description":"com.isakaro.kwik.ui.utils.KwikCountry.MC","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-m-c/index.html","searchKeys":["MC","MC","com.isakaro.kwik.ui.utils.KwikCountry.MC"]},{"name":"MD","description":"com.isakaro.kwik.ui.utils.KwikCountry.MD","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-m-d/index.html","searchKeys":["MD","MD","com.isakaro.kwik.ui.utils.KwikCountry.MD"]},{"name":"ME","description":"com.isakaro.kwik.ui.utils.KwikCountry.ME","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-m-e/index.html","searchKeys":["ME","ME","com.isakaro.kwik.ui.utils.KwikCountry.ME"]},{"name":"MG","description":"com.isakaro.kwik.ui.utils.KwikCountry.MG","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-m-g/index.html","searchKeys":["MG","MG","com.isakaro.kwik.ui.utils.KwikCountry.MG"]},{"name":"MH","description":"com.isakaro.kwik.ui.utils.KwikCountry.MH","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-m-h/index.html","searchKeys":["MH","MH","com.isakaro.kwik.ui.utils.KwikCountry.MH"]},{"name":"MK","description":"com.isakaro.kwik.ui.utils.KwikCountry.MK","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-m-k/index.html","searchKeys":["MK","MK","com.isakaro.kwik.ui.utils.KwikCountry.MK"]},{"name":"ML","description":"com.isakaro.kwik.ui.utils.KwikCountry.ML","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-m-l/index.html","searchKeys":["ML","ML","com.isakaro.kwik.ui.utils.KwikCountry.ML"]},{"name":"MM","description":"com.isakaro.kwik.ui.utils.KwikCountry.MM","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-m-m/index.html","searchKeys":["MM","MM","com.isakaro.kwik.ui.utils.KwikCountry.MM"]},{"name":"MN","description":"com.isakaro.kwik.ui.utils.KwikCountry.MN","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-m-n/index.html","searchKeys":["MN","MN","com.isakaro.kwik.ui.utils.KwikCountry.MN"]},{"name":"MO","description":"com.isakaro.kwik.ui.utils.KwikCountry.MO","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-m-o/index.html","searchKeys":["MO","MO","com.isakaro.kwik.ui.utils.KwikCountry.MO"]},{"name":"MP","description":"com.isakaro.kwik.ui.utils.KwikCountry.MP","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-m-p/index.html","searchKeys":["MP","MP","com.isakaro.kwik.ui.utils.KwikCountry.MP"]},{"name":"MQ","description":"com.isakaro.kwik.ui.utils.KwikCountry.MQ","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-m-q/index.html","searchKeys":["MQ","MQ","com.isakaro.kwik.ui.utils.KwikCountry.MQ"]},{"name":"MR","description":"com.isakaro.kwik.ui.utils.KwikCountry.MR","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-m-r/index.html","searchKeys":["MR","MR","com.isakaro.kwik.ui.utils.KwikCountry.MR"]},{"name":"MS","description":"com.isakaro.kwik.ui.utils.KwikCountry.MS","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-m-s/index.html","searchKeys":["MS","MS","com.isakaro.kwik.ui.utils.KwikCountry.MS"]},{"name":"MT","description":"com.isakaro.kwik.ui.utils.KwikCountry.MT","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-m-t/index.html","searchKeys":["MT","MT","com.isakaro.kwik.ui.utils.KwikCountry.MT"]},{"name":"MU","description":"com.isakaro.kwik.ui.utils.KwikCountry.MU","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-m-u/index.html","searchKeys":["MU","MU","com.isakaro.kwik.ui.utils.KwikCountry.MU"]},{"name":"MV","description":"com.isakaro.kwik.ui.utils.KwikCountry.MV","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-m-v/index.html","searchKeys":["MV","MV","com.isakaro.kwik.ui.utils.KwikCountry.MV"]},{"name":"MW","description":"com.isakaro.kwik.ui.utils.KwikCountry.MW","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-m-w/index.html","searchKeys":["MW","MW","com.isakaro.kwik.ui.utils.KwikCountry.MW"]},{"name":"MX","description":"com.isakaro.kwik.ui.utils.KwikCountry.MX","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-m-x/index.html","searchKeys":["MX","MX","com.isakaro.kwik.ui.utils.KwikCountry.MX"]},{"name":"MY","description":"com.isakaro.kwik.ui.utils.KwikCountry.MY","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-m-y/index.html","searchKeys":["MY","MY","com.isakaro.kwik.ui.utils.KwikCountry.MY"]},{"name":"MZ","description":"com.isakaro.kwik.ui.utils.KwikCountry.MZ","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-m-z/index.html","searchKeys":["MZ","MZ","com.isakaro.kwik.ui.utils.KwikCountry.MZ"]},{"name":"NA","description":"com.isakaro.kwik.ui.utils.KwikCountry.NA","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-n-a/index.html","searchKeys":["NA","NA","com.isakaro.kwik.ui.utils.KwikCountry.NA"]},{"name":"NC","description":"com.isakaro.kwik.ui.utils.KwikCountry.NC","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-n-c/index.html","searchKeys":["NC","NC","com.isakaro.kwik.ui.utils.KwikCountry.NC"]},{"name":"NE","description":"com.isakaro.kwik.ui.utils.KwikCountry.NE","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-n-e/index.html","searchKeys":["NE","NE","com.isakaro.kwik.ui.utils.KwikCountry.NE"]},{"name":"NEUTRAL","description":"com.isakaro.kwik.ui.toast.KwikToastType.NEUTRAL","location":"kwik/com.isakaro.kwik.ui.toast/-kwik-toast-type/-n-e-u-t-r-a-l/index.html","searchKeys":["NEUTRAL","NEUTRAL","com.isakaro.kwik.ui.toast.KwikToastType.NEUTRAL"]},{"name":"NF","description":"com.isakaro.kwik.ui.utils.KwikCountry.NF","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-n-f/index.html","searchKeys":["NF","NF","com.isakaro.kwik.ui.utils.KwikCountry.NF"]},{"name":"NG","description":"com.isakaro.kwik.ui.utils.KwikCountry.NG","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-n-g/index.html","searchKeys":["NG","NG","com.isakaro.kwik.ui.utils.KwikCountry.NG"]},{"name":"NI","description":"com.isakaro.kwik.ui.utils.KwikCountry.NI","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-n-i/index.html","searchKeys":["NI","NI","com.isakaro.kwik.ui.utils.KwikCountry.NI"]},{"name":"NL","description":"com.isakaro.kwik.ui.utils.KwikCountry.NL","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-n-l/index.html","searchKeys":["NL","NL","com.isakaro.kwik.ui.utils.KwikCountry.NL"]},{"name":"NO","description":"com.isakaro.kwik.ui.utils.KwikCountry.NO","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-n-o/index.html","searchKeys":["NO","NO","com.isakaro.kwik.ui.utils.KwikCountry.NO"]},{"name":"NP","description":"com.isakaro.kwik.ui.utils.KwikCountry.NP","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-n-p/index.html","searchKeys":["NP","NP","com.isakaro.kwik.ui.utils.KwikCountry.NP"]},{"name":"NR","description":"com.isakaro.kwik.ui.utils.KwikCountry.NR","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-n-r/index.html","searchKeys":["NR","NR","com.isakaro.kwik.ui.utils.KwikCountry.NR"]},{"name":"NU","description":"com.isakaro.kwik.ui.utils.KwikCountry.NU","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-n-u/index.html","searchKeys":["NU","NU","com.isakaro.kwik.ui.utils.KwikCountry.NU"]},{"name":"NUMBER","description":"com.isakaro.kwik.ui.form.KwikPasswordRequirementType.NUMBER","location":"kwik/com.isakaro.kwik.ui.form/-kwik-password-requirement-type/-n-u-m-b-e-r/index.html","searchKeys":["NUMBER","NUMBER","com.isakaro.kwik.ui.form.KwikPasswordRequirementType.NUMBER"]},{"name":"NZ","description":"com.isakaro.kwik.ui.utils.KwikCountry.NZ","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-n-z/index.html","searchKeys":["NZ","NZ","com.isakaro.kwik.ui.utils.KwikCountry.NZ"]},{"name":"OM","description":"com.isakaro.kwik.ui.utils.KwikCountry.OM","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-o-m/index.html","searchKeys":["OM","OM","com.isakaro.kwik.ui.utils.KwikCountry.OM"]},{"name":"PA","description":"com.isakaro.kwik.ui.utils.KwikCountry.PA","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-p-a/index.html","searchKeys":["PA","PA","com.isakaro.kwik.ui.utils.KwikCountry.PA"]},{"name":"PE","description":"com.isakaro.kwik.ui.utils.KwikCountry.PE","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-p-e/index.html","searchKeys":["PE","PE","com.isakaro.kwik.ui.utils.KwikCountry.PE"]},{"name":"PF","description":"com.isakaro.kwik.ui.utils.KwikCountry.PF","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-p-f/index.html","searchKeys":["PF","PF","com.isakaro.kwik.ui.utils.KwikCountry.PF"]},{"name":"PG","description":"com.isakaro.kwik.ui.utils.KwikCountry.PG","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-p-g/index.html","searchKeys":["PG","PG","com.isakaro.kwik.ui.utils.KwikCountry.PG"]},{"name":"PH","description":"com.isakaro.kwik.ui.utils.KwikCountry.PH","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-p-h/index.html","searchKeys":["PH","PH","com.isakaro.kwik.ui.utils.KwikCountry.PH"]},{"name":"PK","description":"com.isakaro.kwik.ui.utils.KwikCountry.PK","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-p-k/index.html","searchKeys":["PK","PK","com.isakaro.kwik.ui.utils.KwikCountry.PK"]},{"name":"PL","description":"com.isakaro.kwik.ui.utils.KwikCountry.PL","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-p-l/index.html","searchKeys":["PL","PL","com.isakaro.kwik.ui.utils.KwikCountry.PL"]},{"name":"PM","description":"com.isakaro.kwik.ui.utils.KwikCountry.PM","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-p-m/index.html","searchKeys":["PM","PM","com.isakaro.kwik.ui.utils.KwikCountry.PM"]},{"name":"PN","description":"com.isakaro.kwik.ui.utils.KwikCountry.PN","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-p-n/index.html","searchKeys":["PN","PN","com.isakaro.kwik.ui.utils.KwikCountry.PN"]},{"name":"PR","description":"com.isakaro.kwik.ui.utils.KwikCountry.PR","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-p-r/index.html","searchKeys":["PR","PR","com.isakaro.kwik.ui.utils.KwikCountry.PR"]},{"name":"PS","description":"com.isakaro.kwik.ui.utils.KwikCountry.PS","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-p-s/index.html","searchKeys":["PS","PS","com.isakaro.kwik.ui.utils.KwikCountry.PS"]},{"name":"PT","description":"com.isakaro.kwik.ui.utils.KwikCountry.PT","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-p-t/index.html","searchKeys":["PT","PT","com.isakaro.kwik.ui.utils.KwikCountry.PT"]},{"name":"PW","description":"com.isakaro.kwik.ui.utils.KwikCountry.PW","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-p-w/index.html","searchKeys":["PW","PW","com.isakaro.kwik.ui.utils.KwikCountry.PW"]},{"name":"PY","description":"com.isakaro.kwik.ui.utils.KwikCountry.PY","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-p-y/index.html","searchKeys":["PY","PY","com.isakaro.kwik.ui.utils.KwikCountry.PY"]},{"name":"Picker","description":"com.isakaro.kwik.ui.date.KwikDatePickerMode.Picker","location":"kwik/com.isakaro.kwik.ui.date/-kwik-date-picker-mode/-picker/index.html","searchKeys":["Picker","Picker","com.isakaro.kwik.ui.date.KwikDatePickerMode.Picker"]},{"name":"QA","description":"com.isakaro.kwik.ui.utils.KwikCountry.QA","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-q-a/index.html","searchKeys":["QA","QA","com.isakaro.kwik.ui.utils.KwikCountry.QA"]},{"name":"RE","description":"com.isakaro.kwik.ui.utils.KwikCountry.RE","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-r-e/index.html","searchKeys":["RE","RE","com.isakaro.kwik.ui.utils.KwikCountry.RE"]},{"name":"RO","description":"com.isakaro.kwik.ui.utils.KwikCountry.RO","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-r-o/index.html","searchKeys":["RO","RO","com.isakaro.kwik.ui.utils.KwikCountry.RO"]},{"name":"RS","description":"com.isakaro.kwik.ui.utils.KwikCountry.RS","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-r-s/index.html","searchKeys":["RS","RS","com.isakaro.kwik.ui.utils.KwikCountry.RS"]},{"name":"RU","description":"com.isakaro.kwik.ui.utils.KwikCountry.RU","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-r-u/index.html","searchKeys":["RU","RU","com.isakaro.kwik.ui.utils.KwikCountry.RU"]},{"name":"RW","description":"com.isakaro.kwik.ui.utils.KwikCountry.RW","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-r-w/index.html","searchKeys":["RW","RW","com.isakaro.kwik.ui.utils.KwikCountry.RW"]},{"name":"SA","description":"com.isakaro.kwik.ui.utils.KwikCountry.SA","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-s-a/index.html","searchKeys":["SA","SA","com.isakaro.kwik.ui.utils.KwikCountry.SA"]},{"name":"SB","description":"com.isakaro.kwik.ui.utils.KwikCountry.SB","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-s-b/index.html","searchKeys":["SB","SB","com.isakaro.kwik.ui.utils.KwikCountry.SB"]},{"name":"SC","description":"com.isakaro.kwik.ui.utils.KwikCountry.SC","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-s-c/index.html","searchKeys":["SC","SC","com.isakaro.kwik.ui.utils.KwikCountry.SC"]},{"name":"SD","description":"com.isakaro.kwik.ui.utils.KwikCountry.SD","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-s-d/index.html","searchKeys":["SD","SD","com.isakaro.kwik.ui.utils.KwikCountry.SD"]},{"name":"SE","description":"com.isakaro.kwik.ui.utils.KwikCountry.SE","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-s-e/index.html","searchKeys":["SE","SE","com.isakaro.kwik.ui.utils.KwikCountry.SE"]},{"name":"SG","description":"com.isakaro.kwik.ui.utils.KwikCountry.SG","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-s-g/index.html","searchKeys":["SG","SG","com.isakaro.kwik.ui.utils.KwikCountry.SG"]},{"name":"SH","description":"com.isakaro.kwik.ui.utils.KwikCountry.SH","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-s-h/index.html","searchKeys":["SH","SH","com.isakaro.kwik.ui.utils.KwikCountry.SH"]},{"name":"SI","description":"com.isakaro.kwik.ui.utils.KwikCountry.SI","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-s-i/index.html","searchKeys":["SI","SI","com.isakaro.kwik.ui.utils.KwikCountry.SI"]},{"name":"SK","description":"com.isakaro.kwik.ui.utils.KwikCountry.SK","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-s-k/index.html","searchKeys":["SK","SK","com.isakaro.kwik.ui.utils.KwikCountry.SK"]},{"name":"SL","description":"com.isakaro.kwik.ui.utils.KwikCountry.SL","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-s-l/index.html","searchKeys":["SL","SL","com.isakaro.kwik.ui.utils.KwikCountry.SL"]},{"name":"SM","description":"com.isakaro.kwik.ui.utils.KwikCountry.SM","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-s-m/index.html","searchKeys":["SM","SM","com.isakaro.kwik.ui.utils.KwikCountry.SM"]},{"name":"SN","description":"com.isakaro.kwik.ui.utils.KwikCountry.SN","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-s-n/index.html","searchKeys":["SN","SN","com.isakaro.kwik.ui.utils.KwikCountry.SN"]},{"name":"SO","description":"com.isakaro.kwik.ui.utils.KwikCountry.SO","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-s-o/index.html","searchKeys":["SO","SO","com.isakaro.kwik.ui.utils.KwikCountry.SO"]},{"name":"SR","description":"com.isakaro.kwik.ui.utils.KwikCountry.SR","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-s-r/index.html","searchKeys":["SR","SR","com.isakaro.kwik.ui.utils.KwikCountry.SR"]},{"name":"SS","description":"com.isakaro.kwik.ui.utils.KwikCountry.SS","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-s-s/index.html","searchKeys":["SS","SS","com.isakaro.kwik.ui.utils.KwikCountry.SS"]},{"name":"ST","description":"com.isakaro.kwik.ui.utils.KwikCountry.ST","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-s-t/index.html","searchKeys":["ST","ST","com.isakaro.kwik.ui.utils.KwikCountry.ST"]},{"name":"SUCCESS","description":"com.isakaro.kwik.ui.image.ImageLoaderState.SUCCESS","location":"kwik/com.isakaro.kwik.ui.image/-image-loader-state/-s-u-c-c-e-s-s/index.html","searchKeys":["SUCCESS","SUCCESS","com.isakaro.kwik.ui.image.ImageLoaderState.SUCCESS"]},{"name":"SUCCESS","description":"com.isakaro.kwik.ui.toast.KwikToastType.SUCCESS","location":"kwik/com.isakaro.kwik.ui.toast/-kwik-toast-type/-s-u-c-c-e-s-s/index.html","searchKeys":["SUCCESS","SUCCESS","com.isakaro.kwik.ui.toast.KwikToastType.SUCCESS"]},{"name":"SV","description":"com.isakaro.kwik.ui.utils.KwikCountry.SV","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-s-v/index.html","searchKeys":["SV","SV","com.isakaro.kwik.ui.utils.KwikCountry.SV"]},{"name":"SY","description":"com.isakaro.kwik.ui.utils.KwikCountry.SY","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-s-y/index.html","searchKeys":["SY","SY","com.isakaro.kwik.ui.utils.KwikCountry.SY"]},{"name":"SZ","description":"com.isakaro.kwik.ui.utils.KwikCountry.SZ","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-s-z/index.html","searchKeys":["SZ","SZ","com.isakaro.kwik.ui.utils.KwikCountry.SZ"]},{"name":"TC","description":"com.isakaro.kwik.ui.utils.KwikCountry.TC","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-t-c/index.html","searchKeys":["TC","TC","com.isakaro.kwik.ui.utils.KwikCountry.TC"]},{"name":"TD","description":"com.isakaro.kwik.ui.utils.KwikCountry.TD","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-t-d/index.html","searchKeys":["TD","TD","com.isakaro.kwik.ui.utils.KwikCountry.TD"]},{"name":"TF","description":"com.isakaro.kwik.ui.utils.KwikCountry.TF","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-t-f/index.html","searchKeys":["TF","TF","com.isakaro.kwik.ui.utils.KwikCountry.TF"]},{"name":"TG","description":"com.isakaro.kwik.ui.utils.KwikCountry.TG","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-t-g/index.html","searchKeys":["TG","TG","com.isakaro.kwik.ui.utils.KwikCountry.TG"]},{"name":"TH","description":"com.isakaro.kwik.ui.utils.KwikCountry.TH","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-t-h/index.html","searchKeys":["TH","TH","com.isakaro.kwik.ui.utils.KwikCountry.TH"]},{"name":"TJ","description":"com.isakaro.kwik.ui.utils.KwikCountry.TJ","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-t-j/index.html","searchKeys":["TJ","TJ","com.isakaro.kwik.ui.utils.KwikCountry.TJ"]},{"name":"TK","description":"com.isakaro.kwik.ui.utils.KwikCountry.TK","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-t-k/index.html","searchKeys":["TK","TK","com.isakaro.kwik.ui.utils.KwikCountry.TK"]},{"name":"TL","description":"com.isakaro.kwik.ui.utils.KwikCountry.TL","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-t-l/index.html","searchKeys":["TL","TL","com.isakaro.kwik.ui.utils.KwikCountry.TL"]},{"name":"TM","description":"com.isakaro.kwik.ui.utils.KwikCountry.TM","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-t-m/index.html","searchKeys":["TM","TM","com.isakaro.kwik.ui.utils.KwikCountry.TM"]},{"name":"TN","description":"com.isakaro.kwik.ui.utils.KwikCountry.TN","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-t-n/index.html","searchKeys":["TN","TN","com.isakaro.kwik.ui.utils.KwikCountry.TN"]},{"name":"TO","description":"com.isakaro.kwik.ui.utils.KwikCountry.TO","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-t-o/index.html","searchKeys":["TO","TO","com.isakaro.kwik.ui.utils.KwikCountry.TO"]},{"name":"TR","description":"com.isakaro.kwik.ui.utils.KwikCountry.TR","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-t-r/index.html","searchKeys":["TR","TR","com.isakaro.kwik.ui.utils.KwikCountry.TR"]},{"name":"TT","description":"com.isakaro.kwik.ui.utils.KwikCountry.TT","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-t-t/index.html","searchKeys":["TT","TT","com.isakaro.kwik.ui.utils.KwikCountry.TT"]},{"name":"TV","description":"com.isakaro.kwik.ui.utils.KwikCountry.TV","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-t-v/index.html","searchKeys":["TV","TV","com.isakaro.kwik.ui.utils.KwikCountry.TV"]},{"name":"TW","description":"com.isakaro.kwik.ui.utils.KwikCountry.TW","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-t-w/index.html","searchKeys":["TW","TW","com.isakaro.kwik.ui.utils.KwikCountry.TW"]},{"name":"TZ","description":"com.isakaro.kwik.ui.utils.KwikCountry.TZ","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-t-z/index.html","searchKeys":["TZ","TZ","com.isakaro.kwik.ui.utils.KwikCountry.TZ"]},{"name":"UA","description":"com.isakaro.kwik.ui.utils.KwikCountry.UA","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-u-a/index.html","searchKeys":["UA","UA","com.isakaro.kwik.ui.utils.KwikCountry.UA"]},{"name":"UG","description":"com.isakaro.kwik.ui.utils.KwikCountry.UG","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-u-g/index.html","searchKeys":["UG","UG","com.isakaro.kwik.ui.utils.KwikCountry.UG"]},{"name":"US","description":"com.isakaro.kwik.ui.utils.KwikCountry.US","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-u-s/index.html","searchKeys":["US","US","com.isakaro.kwik.ui.utils.KwikCountry.US"]},{"name":"UY","description":"com.isakaro.kwik.ui.utils.KwikCountry.UY","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-u-y/index.html","searchKeys":["UY","UY","com.isakaro.kwik.ui.utils.KwikCountry.UY"]},{"name":"UZ","description":"com.isakaro.kwik.ui.utils.KwikCountry.UZ","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-u-z/index.html","searchKeys":["UZ","UZ","com.isakaro.kwik.ui.utils.KwikCountry.UZ"]},{"name":"VA","description":"com.isakaro.kwik.ui.utils.KwikCountry.VA","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-v-a/index.html","searchKeys":["VA","VA","com.isakaro.kwik.ui.utils.KwikCountry.VA"]},{"name":"VC","description":"com.isakaro.kwik.ui.utils.KwikCountry.VC","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-v-c/index.html","searchKeys":["VC","VC","com.isakaro.kwik.ui.utils.KwikCountry.VC"]},{"name":"VE","description":"com.isakaro.kwik.ui.utils.KwikCountry.VE","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-v-e/index.html","searchKeys":["VE","VE","com.isakaro.kwik.ui.utils.KwikCountry.VE"]},{"name":"VG","description":"com.isakaro.kwik.ui.utils.KwikCountry.VG","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-v-g/index.html","searchKeys":["VG","VG","com.isakaro.kwik.ui.utils.KwikCountry.VG"]},{"name":"VI","description":"com.isakaro.kwik.ui.utils.KwikCountry.VI","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-v-i/index.html","searchKeys":["VI","VI","com.isakaro.kwik.ui.utils.KwikCountry.VI"]},{"name":"VN","description":"com.isakaro.kwik.ui.utils.KwikCountry.VN","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-v-n/index.html","searchKeys":["VN","VN","com.isakaro.kwik.ui.utils.KwikCountry.VN"]},{"name":"VU","description":"com.isakaro.kwik.ui.utils.KwikCountry.VU","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-v-u/index.html","searchKeys":["VU","VU","com.isakaro.kwik.ui.utils.KwikCountry.VU"]},{"name":"WARNING","description":"com.isakaro.kwik.ui.toast.KwikToastType.WARNING","location":"kwik/com.isakaro.kwik.ui.toast/-kwik-toast-type/-w-a-r-n-i-n-g/index.html","searchKeys":["WARNING","WARNING","com.isakaro.kwik.ui.toast.KwikToastType.WARNING"]},{"name":"WF","description":"com.isakaro.kwik.ui.utils.KwikCountry.WF","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-w-f/index.html","searchKeys":["WF","WF","com.isakaro.kwik.ui.utils.KwikCountry.WF"]},{"name":"WS","description":"com.isakaro.kwik.ui.utils.KwikCountry.WS","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-w-s/index.html","searchKeys":["WS","WS","com.isakaro.kwik.ui.utils.KwikCountry.WS"]},{"name":"YE","description":"com.isakaro.kwik.ui.utils.KwikCountry.YE","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-y-e/index.html","searchKeys":["YE","YE","com.isakaro.kwik.ui.utils.KwikCountry.YE"]},{"name":"YT","description":"com.isakaro.kwik.ui.utils.KwikCountry.YT","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-y-t/index.html","searchKeys":["YT","YT","com.isakaro.kwik.ui.utils.KwikCountry.YT"]},{"name":"ZA","description":"com.isakaro.kwik.ui.utils.KwikCountry.ZA","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-z-a/index.html","searchKeys":["ZA","ZA","com.isakaro.kwik.ui.utils.KwikCountry.ZA"]},{"name":"ZM","description":"com.isakaro.kwik.ui.utils.KwikCountry.ZM","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-z-m/index.html","searchKeys":["ZM","ZM","com.isakaro.kwik.ui.utils.KwikCountry.ZM"]},{"name":"ZW","description":"com.isakaro.kwik.ui.utils.KwikCountry.ZW","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/-z-w/index.html","searchKeys":["ZW","ZW","com.isakaro.kwik.ui.utils.KwikCountry.ZW"]},{"name":"class KwikBiometricActivity : FragmentActivity","description":"com.isakaro.kwik.ui.biometrics.KwikBiometricActivity","location":"kwik/com.isakaro.kwik.ui.biometrics/-kwik-biometric-activity/index.html","searchKeys":["KwikBiometricActivity","class KwikBiometricActivity : FragmentActivity","com.isakaro.kwik.ui.biometrics.KwikBiometricActivity"]},{"name":"class KwikBiometricsAuthenticationContract : ActivityResultContract<KwikBiometricPromptParams, Int> ","description":"com.isakaro.kwik.ui.biometrics.KwikBiometricsAuthenticationContract","location":"kwik/com.isakaro.kwik.ui.biometrics/-kwik-biometrics-authentication-contract/index.html","searchKeys":["KwikBiometricsAuthenticationContract","class KwikBiometricsAuthenticationContract : ActivityResultContract<KwikBiometricPromptParams, Int> ","com.isakaro.kwik.ui.biometrics.KwikBiometricsAuthenticationContract"]},{"name":"class KwikNetworkUtils(context: Context, coroutineScope: CoroutineScope = CoroutineScope(Dispatchers.Default))","description":"com.isakaro.kwik.ui.utils.KwikNetworkUtils","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-network-utils/index.html","searchKeys":["KwikNetworkUtils","class KwikNetworkUtils(context: Context, coroutineScope: CoroutineScope = CoroutineScope(Dispatchers.Default))","com.isakaro.kwik.ui.utils.KwikNetworkUtils"]},{"name":"const val BIOMETRICS_LEVEL: String","description":"com.isakaro.kwik.ui.biometrics.KwikBiometrics.BIOMETRICS_LEVEL","location":"kwik/com.isakaro.kwik.ui.biometrics/-kwik-biometrics/-b-i-o-m-e-t-r-i-c-s_-l-e-v-e-l.html","searchKeys":["BIOMETRICS_LEVEL","const val BIOMETRICS_LEVEL: String","com.isakaro.kwik.ui.biometrics.KwikBiometrics.BIOMETRICS_LEVEL"]},{"name":"const val CANCEL: String","description":"com.isakaro.kwik.ui.biometrics.KwikBiometrics.CANCEL","location":"kwik/com.isakaro.kwik.ui.biometrics/-kwik-biometrics/-c-a-n-c-e-l.html","searchKeys":["CANCEL","const val CANCEL: String","com.isakaro.kwik.ui.biometrics.KwikBiometrics.CANCEL"]},{"name":"const val CANCELED: Int = 0","description":"com.isakaro.kwik.ui.biometrics.KwikBiometricsResult.CANCELED","location":"kwik/com.isakaro.kwik.ui.biometrics/-kwik-biometrics-result/-c-a-n-c-e-l-e-d.html","searchKeys":["CANCELED","const val CANCELED: Int = 0","com.isakaro.kwik.ui.biometrics.KwikBiometricsResult.CANCELED"]},{"name":"const val ERROR: Int = 400","description":"com.isakaro.kwik.ui.biometrics.KwikBiometricsResult.ERROR","location":"kwik/com.isakaro.kwik.ui.biometrics/-kwik-biometrics-result/-e-r-r-o-r.html","searchKeys":["ERROR","const val ERROR: Int = 400","com.isakaro.kwik.ui.biometrics.KwikBiometricsResult.ERROR"]},{"name":"const val FAILED: Int = 401","description":"com.isakaro.kwik.ui.biometrics.KwikBiometricsResult.FAILED","location":"kwik/com.isakaro.kwik.ui.biometrics/-kwik-biometrics-result/-f-a-i-l-e-d.html","searchKeys":["FAILED","const val FAILED: Int = 401","com.isakaro.kwik.ui.biometrics.KwikBiometricsResult.FAILED"]},{"name":"const val NOT_SET: Int = 404","description":"com.isakaro.kwik.ui.biometrics.KwikBiometricsResult.NOT_SET","location":"kwik/com.isakaro.kwik.ui.biometrics/-kwik-biometrics-result/-n-o-t_-s-e-t.html","searchKeys":["NOT_SET","const val NOT_SET: Int = 404","com.isakaro.kwik.ui.biometrics.KwikBiometricsResult.NOT_SET"]},{"name":"const val SUBTITLE: String","description":"com.isakaro.kwik.ui.biometrics.KwikBiometrics.SUBTITLE","location":"kwik/com.isakaro.kwik.ui.biometrics/-kwik-biometrics/-s-u-b-t-i-t-l-e.html","searchKeys":["SUBTITLE","const val SUBTITLE: String","com.isakaro.kwik.ui.biometrics.KwikBiometrics.SUBTITLE"]},{"name":"const val SUCCESS: Int","description":"com.isakaro.kwik.ui.biometrics.KwikBiometricsResult.SUCCESS","location":"kwik/com.isakaro.kwik.ui.biometrics/-kwik-biometrics-result/-s-u-c-c-e-s-s.html","searchKeys":["SUCCESS","const val SUCCESS: Int","com.isakaro.kwik.ui.biometrics.KwikBiometricsResult.SUCCESS"]},{"name":"const val TITLE: String","description":"com.isakaro.kwik.ui.biometrics.KwikBiometrics.TITLE","location":"kwik/com.isakaro.kwik.ui.biometrics/-kwik-biometrics/-t-i-t-l-e.html","searchKeys":["TITLE","const val TITLE: String","com.isakaro.kwik.ui.biometrics.KwikBiometrics.TITLE"]},{"name":"constructor()","description":"com.isakaro.kwik.ui.biometrics.KwikBiometricActivity.KwikBiometricActivity","location":"kwik/com.isakaro.kwik.ui.biometrics/-kwik-biometric-activity/-kwik-biometric-activity.html","searchKeys":["KwikBiometricActivity","constructor()","com.isakaro.kwik.ui.biometrics.KwikBiometricActivity.KwikBiometricActivity"]},{"name":"constructor()","description":"com.isakaro.kwik.ui.biometrics.KwikBiometricsAuthenticationContract.KwikBiometricsAuthenticationContract","location":"kwik/com.isakaro.kwik.ui.biometrics/-kwik-biometrics-authentication-contract/-kwik-biometrics-authentication-contract.html","searchKeys":["KwikBiometricsAuthenticationContract","constructor()","com.isakaro.kwik.ui.biometrics.KwikBiometricsAuthenticationContract.KwikBiometricsAuthenticationContract"]},{"name":"constructor()","description":"com.isakaro.kwik.ui.utils.KwikNetworkUtils.NetworkCallback.NetworkCallback","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-network-utils/-network-callback/-network-callback.html","searchKeys":["NetworkCallback","constructor()","com.isakaro.kwik.ui.utils.KwikNetworkUtils.NetworkCallback.NetworkCallback"]},{"name":"constructor(action: KwikDropdownItem)","description":"com.isakaro.kwik.ui.dropdown.KwikDropdownItemActionState.Data.Data","location":"kwik/com.isakaro.kwik.ui.dropdown/-kwik-dropdown-item-action-state/-data/-data.html","searchKeys":["Data","constructor(action: KwikDropdownItem)","com.isakaro.kwik.ui.dropdown.KwikDropdownItemActionState.Data.Data"]},{"name":"constructor(action: KwikListItemAction)","description":"com.isakaro.kwik.ui.list.KwikListItemActionState.Data.Data","location":"kwik/com.isakaro.kwik.ui.list/-kwik-list-item-action-state/-data/-data.html","searchKeys":["Data","constructor(action: KwikListItemAction)","com.isakaro.kwik.ui.list.KwikListItemActionState.Data.Data"]},{"name":"constructor(colSpan: Int = 1, rowSpan: Int = 1, colPosition: Int, rowPosition: Int, onClick: () -> Unit, content: () -> Unit)","description":"com.isakaro.kwik.ui.grid.KwikDiv.KwikDiv","location":"kwik/com.isakaro.kwik.ui.grid/-kwik-div/-kwik-div.html","searchKeys":["KwikDiv","constructor(colSpan: Int = 1, rowSpan: Int = 1, colPosition: Int, rowPosition: Int, onClick: () -> Unit, content: () -> Unit)","com.isakaro.kwik.ui.grid.KwikDiv.KwikDiv"]},{"name":"constructor(context: Context, coroutineScope: CoroutineScope = CoroutineScope(Dispatchers.Default))","description":"com.isakaro.kwik.ui.utils.KwikNetworkUtils.KwikNetworkUtils","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-network-utils/-kwik-network-utils.html","searchKeys":["KwikNetworkUtils","constructor(context: Context, coroutineScope: CoroutineScope = CoroutineScope(Dispatchers.Default))","com.isakaro.kwik.ui.utils.KwikNetworkUtils.KwikNetworkUtils"]},{"name":"constructor(description: String, requirementMet: Boolean, visible: Boolean = true)","description":"com.isakaro.kwik.ui.form.PasswordRequirement.PasswordRequirement","location":"kwik/com.isakaro.kwik.ui.form/-password-requirement/-password-requirement.html","searchKeys":["PasswordRequirement","constructor(description: String, requirementMet: Boolean, visible: Boolean = true)","com.isakaro.kwik.ui.form.PasswordRequirement.PasswordRequirement"]},{"name":"constructor(height: Float = 4.0f, width: Float = 0.8f, horizontalPadding: Float = 0.0f, verticalPadding: Float = 0.0f, borderRadius: Float = 4.0f)","description":"com.isakaro.kwik.ui.tabs.KwikIndicatorProps.KwikIndicatorProps","location":"kwik/com.isakaro.kwik.ui.tabs/-kwik-indicator-props/-kwik-indicator-props.html","searchKeys":["KwikIndicatorProps","constructor(height: Float = 4.0f, width: Float = 0.8f, horizontalPadding: Float = 0.0f, verticalPadding: Float = 0.0f, borderRadius: Float = 4.0f)","com.isakaro.kwik.ui.tabs.KwikIndicatorProps.KwikIndicatorProps"]},{"name":"constructor(id: Any = Any(), title: String? = null, description: String? = null, icon: Any? = null, accentColor: Color? = null, onClick: (KwikTimelineEntry) -> Unit = {}, content: () -> Unit? = null)","description":"com.isakaro.kwik.ui.timeline.KwikTimelineEntry.KwikTimelineEntry","location":"kwik/com.isakaro.kwik.ui.timeline/-kwik-timeline-entry/-kwik-timeline-entry.html","searchKeys":["KwikTimelineEntry","constructor(id: Any = Any(), title: String? = null, description: String? = null, icon: Any? = null, accentColor: Color? = null, onClick: (KwikTimelineEntry) -> Unit = {}, content: () -> Unit? = null)","com.isakaro.kwik.ui.timeline.KwikTimelineEntry.KwikTimelineEntry"]},{"name":"constructor(id: Any, label: String, quantity: Int = 1, minQuantity: Int = 1, maxQuantity: Int = 100)","description":"com.isakaro.kwik.ui.inputfields.KwikTagsInputItem.KwikTagsInputItem","location":"kwik/com.isakaro.kwik.ui.inputfields/-kwik-tags-input-item/-kwik-tags-input-item.html","searchKeys":["KwikTagsInputItem","constructor(id: Any, label: String, quantity: Int = 1, minQuantity: Int = 1, maxQuantity: Int = 100)","com.isakaro.kwik.ui.inputfields.KwikTagsInputItem.KwikTagsInputItem"]},{"name":"constructor(id: UUID = UUID.randomUUID())","description":"com.isakaro.kwik.ui.dropdown.KwikDropdownItemActionState.Divider.Divider","location":"kwik/com.isakaro.kwik.ui.dropdown/-kwik-dropdown-item-action-state/-divider/-divider.html","searchKeys":["Divider","constructor(id: UUID = UUID.randomUUID())","com.isakaro.kwik.ui.dropdown.KwikDropdownItemActionState.Divider.Divider"]},{"name":"constructor(id: UUID = UUID.randomUUID())","description":"com.isakaro.kwik.ui.dropdown.KwikDropdownItemActionState.Space.Space","location":"kwik/com.isakaro.kwik.ui.dropdown/-kwik-dropdown-item-action-state/-space/-space.html","searchKeys":["Space","constructor(id: UUID = UUID.randomUUID())","com.isakaro.kwik.ui.dropdown.KwikDropdownItemActionState.Space.Space"]},{"name":"constructor(id: UUID = UUID.randomUUID())","description":"com.isakaro.kwik.ui.list.KwikListItemActionState.Space.Space","location":"kwik/com.isakaro.kwik.ui.list/-kwik-list-item-action-state/-space/-space.html","searchKeys":["Space","constructor(id: UUID = UUID.randomUUID())","com.isakaro.kwik.ui.list.KwikListItemActionState.Space.Space"]},{"name":"constructor(id: UUID = UUID.randomUUID(), message: String = \"\", type: KwikToastType = KwikToastType.NEUTRAL, isVisible: Boolean = false, duration: Long = 4000, backgroundColor: Color = Color.Unspecified)","description":"com.isakaro.kwik.ui.toast.KwikToastState.KwikToastState","location":"kwik/com.isakaro.kwik.ui.toast/-kwik-toast-state/-kwik-toast-state.html","searchKeys":["KwikToastState","constructor(id: UUID = UUID.randomUUID(), message: String = \"\", type: KwikToastType = KwikToastType.NEUTRAL, isVisible: Boolean = false, duration: Long = 4000, backgroundColor: Color = Color.Unspecified)","com.isakaro.kwik.ui.toast.KwikToastState.KwikToastState"]},{"name":"constructor(id: UUID = UUID.randomUUID(), text: () -> Unit, onClick: () -> Unit, enabled: Boolean = true, leadingIcon: () -> Unit? = null, trailingIcon: () -> Unit? = null, divider: Boolean = false)","description":"com.isakaro.kwik.ui.dropdown.KwikDropdownItem.KwikDropdownItem","location":"kwik/com.isakaro.kwik.ui.dropdown/-kwik-dropdown-item/-kwik-dropdown-item.html","searchKeys":["KwikDropdownItem","constructor(id: UUID = UUID.randomUUID(), text: () -> Unit, onClick: () -> Unit, enabled: Boolean = true, leadingIcon: () -> Unit? = null, trailingIcon: () -> Unit? = null, divider: Boolean = false)","com.isakaro.kwik.ui.dropdown.KwikDropdownItem.KwikDropdownItem"]},{"name":"constructor(id: UUID = UUID.randomUUID(), title: String, description: String = \"\", icon: Any? = null, tint: Color? = null, action: () -> Unit = {})","description":"com.isakaro.kwik.ui.list.KwikListItemAction.KwikListItemAction","location":"kwik/com.isakaro.kwik.ui.list/-kwik-list-item-action/-kwik-list-item-action.html","searchKeys":["KwikListItemAction","constructor(id: UUID = UUID.randomUUID(), title: String, description: String = \"\", icon: Any? = null, tint: Color? = null, action: () -> Unit = {})","com.isakaro.kwik.ui.list.KwikListItemAction.KwikListItemAction"]},{"name":"constructor(itemCount: Int, initialIndex: Int = 0, currentIndex: Int = initialIndex, loop: Boolean = false)","description":"com.isakaro.kwik.ui.carousel.KwikCarouselState.KwikCarouselState","location":"kwik/com.isakaro.kwik.ui.carousel/-kwik-carousel-state/-kwik-carousel-state.html","searchKeys":["KwikCarouselState","constructor(itemCount: Int, initialIndex: Int = 0, currentIndex: Int = initialIndex, loop: Boolean = false)","com.isakaro.kwik.ui.carousel.KwikCarouselState.KwikCarouselState"]},{"name":"constructor(label: String, value: T)","description":"com.isakaro.kwik.ui.button.KwikToggleGroupOption.KwikToggleGroupOption","location":"kwik/com.isakaro.kwik.ui.button/-kwik-toggle-group-option/-kwik-toggle-group-option.html","searchKeys":["KwikToggleGroupOption","constructor(label: String, value: T)","com.isakaro.kwik.ui.button.KwikToggleGroupOption.KwikToggleGroupOption"]},{"name":"constructor(label: String, value: T)","description":"com.isakaro.kwik.ui.radio.KwikRadioItem.KwikRadioItem","location":"kwik/com.isakaro.kwik.ui.radio/-kwik-radio-item/-kwik-radio-item.html","searchKeys":["KwikRadioItem","constructor(label: String, value: T)","com.isakaro.kwik.ui.radio.KwikRadioItem.KwikRadioItem"]},{"name":"constructor(label: String, value: T, id: UUID = UUID.randomUUID())","description":"com.isakaro.kwik.ui.filterchip.KwikFilterChipOption.KwikFilterChipOption","location":"kwik/com.isakaro.kwik.ui.filterchip/-kwik-filter-chip-option/-kwik-filter-chip-option.html","searchKeys":["KwikFilterChipOption","constructor(label: String, value: T, id: UUID = UUID.randomUUID())","com.isakaro.kwik.ui.filterchip.KwikFilterChipOption.KwikFilterChipOption"]},{"name":"constructor(minYear: Int = 1965, maxYear: Int = Calendar.getInstance().get(Calendar.YEAR))","description":"com.isakaro.kwik.ui.date.KwikYearsData.KwikYearsData","location":"kwik/com.isakaro.kwik.ui.date/-kwik-years-data/-kwik-years-data.html","searchKeys":["KwikYearsData","constructor(minYear: Int = 1965, maxYear: Int = Calendar.getInstance().get(Calendar.YEAR))","com.isakaro.kwik.ui.date.KwikYearsData.KwikYearsData"]},{"name":"constructor(name: String, code: KwikCountry, dialingCode: String, flag: Int, tags: List<String> = listOf())","description":"com.isakaro.kwik.ui.utils.KwikCountryInfo.KwikCountryInfo","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country-info/-kwik-country-info.html","searchKeys":["KwikCountryInfo","constructor(name: String, code: KwikCountry, dialingCode: String, flag: Int, tags: List<String> = listOf())","com.isakaro.kwik.ui.utils.KwikCountryInfo.KwikCountryInfo"]},{"name":"constructor(name: String, value: String, domain: String, path: String = \"/\", expires: String = (30 * 24 * 60 * 60).toString())","description":"com.isakaro.kwik.ui.webview.KwikCookie.KwikCookie","location":"kwik/com.isakaro.kwik.ui.webview/-kwik-cookie/-kwik-cookie.html","searchKeys":["KwikCookie","constructor(name: String, value: String, domain: String, path: String = \"/\", expires: String = (30 * 24 * 60 * 60).toString())","com.isakaro.kwik.ui.webview.KwikCookie.KwikCookie"]},{"name":"constructor(permission: String, rationaleMessage: String)","description":"com.isakaro.kwik.ui.permissions.KwikPermissionDto.KwikPermissionDto","location":"kwik/com.isakaro.kwik.ui.permissions/-kwik-permission-dto/-kwik-permission-dto.html","searchKeys":["KwikPermissionDto","constructor(permission: String, rationaleMessage: String)","com.isakaro.kwik.ui.permissions.KwikPermissionDto.KwikPermissionDto"]},{"name":"constructor(state: KwikPermissionRequestState, id: UUID = UUID.randomUUID())","description":"com.isakaro.kwik.ui.permissions.KwikPermissionRequest.KwikPermissionRequest","location":"kwik/com.isakaro.kwik.ui.permissions/-kwik-permission-request/-kwik-permission-request.html","searchKeys":["KwikPermissionRequest","constructor(state: KwikPermissionRequestState, id: UUID = UUID.randomUUID())","com.isakaro.kwik.ui.permissions.KwikPermissionRequest.KwikPermissionRequest"]},{"name":"constructor(steps: List<String>, currentStep: Int = 0, isComplete: Boolean = false)","description":"com.isakaro.kwik.ui.stepper.KwikStepperState.KwikStepperState","location":"kwik/com.isakaro.kwik.ui.stepper/-kwik-stepper-state/-kwik-stepper-state.html","searchKeys":["KwikStepperState","constructor(steps: List<String>, currentStep: Int = 0, isComplete: Boolean = false)","com.isakaro.kwik.ui.stepper.KwikStepperState.KwikStepperState"]},{"name":"constructor(title: String = \"Authentication Required\", subtitle: String = \"Verify your identity\", cancelText: String = \"Cancel\", biometricsLevel: Int = BiometricManager.Authenticators.BIOMETRIC_STRONG or BiometricManager.Authenticators.BIOMETRIC_WEAK or BiometricManager.Authenticators.DEVICE_CREDENTIAL)","description":"com.isakaro.kwik.ui.biometrics.KwikBiometricPromptParams.KwikBiometricPromptParams","location":"kwik/com.isakaro.kwik.ui.biometrics/-kwik-biometric-prompt-params/-kwik-biometric-prompt-params.html","searchKeys":["KwikBiometricPromptParams","constructor(title: String = \"Authentication Required\", subtitle: String = \"Verify your identity\", cancelText: String = \"Cancel\", biometricsLevel: Int = BiometricManager.Authenticators.BIOMETRIC_STRONG or BiometricManager.Authenticators.BIOMETRIC_WEAK or BiometricManager.Authenticators.DEVICE_CREDENTIAL)","com.isakaro.kwik.ui.biometrics.KwikBiometricPromptParams.KwikBiometricPromptParams"]},{"name":"constructor(title: String)","description":"com.isakaro.kwik.ui.dropdown.KwikDropdownItemActionState.Header.Header","location":"kwik/com.isakaro.kwik.ui.dropdown/-kwik-dropdown-item-action-state/-header/-header.html","searchKeys":["Header","constructor(title: String)","com.isakaro.kwik.ui.dropdown.KwikDropdownItemActionState.Header.Header"]},{"name":"constructor(title: String)","description":"com.isakaro.kwik.ui.list.KwikListItemActionState.Header.Header","location":"kwik/com.isakaro.kwik.ui.list/-kwik-list-item-action-state/-header/-header.html","searchKeys":["Header","constructor(title: String)","com.isakaro.kwik.ui.list.KwikListItemActionState.Header.Header"]},{"name":"constructor(title: String, content: String, hasError: Boolean = false)","description":"com.isakaro.kwik.ui.accordion.KwikAccordionItem.KwikAccordionItem","location":"kwik/com.isakaro.kwik.ui.accordion/-kwik-accordion-item/-kwik-accordion-item.html","searchKeys":["KwikAccordionItem","constructor(title: String, content: String, hasError: Boolean = false)","com.isakaro.kwik.ui.accordion.KwikAccordionItem.KwikAccordionItem"]},{"name":"constructor(title: String? = null, counter: Int = 0, icon: Any? = null, content: () -> Unit)","description":"com.isakaro.kwik.ui.tabs.KwikTabItem.KwikTabItem","location":"kwik/com.isakaro.kwik.ui.tabs/-kwik-tab-item/-kwik-tab-item.html","searchKeys":["KwikTabItem","constructor(title: String? = null, counter: Int = 0, icon: Any? = null, content: () -> Unit)","com.isakaro.kwik.ui.tabs.KwikTabItem.KwikTabItem"]},{"name":"constructor(userAgent: String = \"Kwik-Android-WebView\", cookies: List<KwikCookie> = emptyList(), debug: Boolean = false, javaScriptEnabled: Boolean = true, domStorageEnabled: Boolean = true, allowFileAccess: Boolean = true, allowContentAccess: Boolean = true, allowFileAccessFromFileURLs: Boolean = false, allowUniversalAccessFromFileURLs: Boolean = false, javaScriptCanOpenWindowsAutomatically: Boolean = true, supportMultipleWindows: Boolean = true)","description":"com.isakaro.kwik.ui.webview.KwikWebViewSettings.KwikWebViewSettings","location":"kwik/com.isakaro.kwik.ui.webview/-kwik-web-view-settings/-kwik-web-view-settings.html","searchKeys":["KwikWebViewSettings","constructor(userAgent: String = \"Kwik-Android-WebView\", cookies: List<KwikCookie> = emptyList(), debug: Boolean = false, javaScriptEnabled: Boolean = true, domStorageEnabled: Boolean = true, allowFileAccess: Boolean = true, allowContentAccess: Boolean = true, allowFileAccessFromFileURLs: Boolean = false, allowUniversalAccessFromFileURLs: Boolean = false, javaScriptCanOpenWindowsAutomatically: Boolean = true, supportMultipleWindows: Boolean = true)","com.isakaro.kwik.ui.webview.KwikWebViewSettings.KwikWebViewSettings"]},{"name":"data class Data(val action: KwikDropdownItem) : KwikDropdownItemActionState","description":"com.isakaro.kwik.ui.dropdown.KwikDropdownItemActionState.Data","location":"kwik/com.isakaro.kwik.ui.dropdown/-kwik-dropdown-item-action-state/-data/index.html","searchKeys":["Data","data class Data(val action: KwikDropdownItem) : KwikDropdownItemActionState","com.isakaro.kwik.ui.dropdown.KwikDropdownItemActionState.Data"]},{"name":"data class Data(val action: KwikListItemAction) : KwikListItemActionState","description":"com.isakaro.kwik.ui.list.KwikListItemActionState.Data","location":"kwik/com.isakaro.kwik.ui.list/-kwik-list-item-action-state/-data/index.html","searchKeys":["Data","data class Data(val action: KwikListItemAction) : KwikListItemActionState","com.isakaro.kwik.ui.list.KwikListItemActionState.Data"]},{"name":"data class Divider(val id: UUID = UUID.randomUUID()) : KwikDropdownItemActionState","description":"com.isakaro.kwik.ui.dropdown.KwikDropdownItemActionState.Divider","location":"kwik/com.isakaro.kwik.ui.dropdown/-kwik-dropdown-item-action-state/-divider/index.html","searchKeys":["Divider","data class Divider(val id: UUID = UUID.randomUUID()) : KwikDropdownItemActionState","com.isakaro.kwik.ui.dropdown.KwikDropdownItemActionState.Divider"]},{"name":"data class Header(val title: String) : KwikDropdownItemActionState","description":"com.isakaro.kwik.ui.dropdown.KwikDropdownItemActionState.Header","location":"kwik/com.isakaro.kwik.ui.dropdown/-kwik-dropdown-item-action-state/-header/index.html","searchKeys":["Header","data class Header(val title: String) : KwikDropdownItemActionState","com.isakaro.kwik.ui.dropdown.KwikDropdownItemActionState.Header"]},{"name":"data class Header(val title: String) : KwikListItemActionState","description":"com.isakaro.kwik.ui.list.KwikListItemActionState.Header","location":"kwik/com.isakaro.kwik.ui.list/-kwik-list-item-action-state/-header/index.html","searchKeys":["Header","data class Header(val title: String) : KwikListItemActionState","com.isakaro.kwik.ui.list.KwikListItemActionState.Header"]},{"name":"data class KwikAccordionItem(val title: String, val content: String, val hasError: Boolean = false)","description":"com.isakaro.kwik.ui.accordion.KwikAccordionItem","location":"kwik/com.isakaro.kwik.ui.accordion/-kwik-accordion-item/index.html","searchKeys":["KwikAccordionItem","data class KwikAccordionItem(val title: String, val content: String, val hasError: Boolean = false)","com.isakaro.kwik.ui.accordion.KwikAccordionItem"]},{"name":"data class KwikBiometricPromptParams(val title: String = \"Authentication Required\", val subtitle: String = \"Verify your identity\", val cancelText: String = \"Cancel\", val biometricsLevel: Int = BiometricManager.Authenticators.BIOMETRIC_STRONG or BiometricManager.Authenticators.BIOMETRIC_WEAK or BiometricManager.Authenticators.DEVICE_CREDENTIAL)","description":"com.isakaro.kwik.ui.biometrics.KwikBiometricPromptParams","location":"kwik/com.isakaro.kwik.ui.biometrics/-kwik-biometric-prompt-params/index.html","searchKeys":["KwikBiometricPromptParams","data class KwikBiometricPromptParams(val title: String = \"Authentication Required\", val subtitle: String = \"Verify your identity\", val cancelText: String = \"Cancel\", val biometricsLevel: Int = BiometricManager.Authenticators.BIOMETRIC_STRONG or BiometricManager.Authenticators.BIOMETRIC_WEAK or BiometricManager.Authenticators.DEVICE_CREDENTIAL)","com.isakaro.kwik.ui.biometrics.KwikBiometricPromptParams"]},{"name":"data class KwikCarouselState(val itemCount: Int, var initialIndex: Int = 0, var currentIndex: Int = initialIndex, var loop: Boolean = false)","description":"com.isakaro.kwik.ui.carousel.KwikCarouselState","location":"kwik/com.isakaro.kwik.ui.carousel/-kwik-carousel-state/index.html","searchKeys":["KwikCarouselState","data class KwikCarouselState(val itemCount: Int, var initialIndex: Int = 0, var currentIndex: Int = initialIndex, var loop: Boolean = false)","com.isakaro.kwik.ui.carousel.KwikCarouselState"]},{"name":"data class KwikCookie(val name: String, val value: String, val domain: String, val path: String = \"/\", val expires: String = (30 * 24 * 60 * 60).toString())","description":"com.isakaro.kwik.ui.webview.KwikCookie","location":"kwik/com.isakaro.kwik.ui.webview/-kwik-cookie/index.html","searchKeys":["KwikCookie","data class KwikCookie(val name: String, val value: String, val domain: String, val path: String = \"/\", val expires: String = (30 * 24 * 60 * 60).toString())","com.isakaro.kwik.ui.webview.KwikCookie"]},{"name":"data class KwikCountryInfo(val name: String, val code: KwikCountry, val dialingCode: String, val flag: Int, val tags: List<String> = listOf())","description":"com.isakaro.kwik.ui.utils.KwikCountryInfo","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country-info/index.html","searchKeys":["KwikCountryInfo","data class KwikCountryInfo(val name: String, val code: KwikCountry, val dialingCode: String, val flag: Int, val tags: List<String> = listOf())","com.isakaro.kwik.ui.utils.KwikCountryInfo"]},{"name":"data class KwikDiv(val colSpan: Int = 1, val rowSpan: Int = 1, val colPosition: Int, val rowPosition: Int, val onClick: () -> Unit, val content: () -> Unit)","description":"com.isakaro.kwik.ui.grid.KwikDiv","location":"kwik/com.isakaro.kwik.ui.grid/-kwik-div/index.html","searchKeys":["KwikDiv","data class KwikDiv(val colSpan: Int = 1, val rowSpan: Int = 1, val colPosition: Int, val rowPosition: Int, val onClick: () -> Unit, val content: () -> Unit)","com.isakaro.kwik.ui.grid.KwikDiv"]},{"name":"data class KwikDropdownItem(val id: UUID = UUID.randomUUID(), val text: () -> Unit, val onClick: () -> Unit, val enabled: Boolean = true, val leadingIcon: () -> Unit? = null, val trailingIcon: () -> Unit? = null, val divider: Boolean = false)","description":"com.isakaro.kwik.ui.dropdown.KwikDropdownItem","location":"kwik/com.isakaro.kwik.ui.dropdown/-kwik-dropdown-item/index.html","searchKeys":["KwikDropdownItem","data class KwikDropdownItem(val id: UUID = UUID.randomUUID(), val text: () -> Unit, val onClick: () -> Unit, val enabled: Boolean = true, val leadingIcon: () -> Unit? = null, val trailingIcon: () -> Unit? = null, val divider: Boolean = false)","com.isakaro.kwik.ui.dropdown.KwikDropdownItem"]},{"name":"data class KwikFilterChipOption<T>(val label: String, val value: T, val id: UUID = UUID.randomUUID()) : Serializable","description":"com.isakaro.kwik.ui.filterchip.KwikFilterChipOption","location":"kwik/com.isakaro.kwik.ui.filterchip/-kwik-filter-chip-option/index.html","searchKeys":["KwikFilterChipOption","data class KwikFilterChipOption<T>(val label: String, val value: T, val id: UUID = UUID.randomUUID()) : Serializable","com.isakaro.kwik.ui.filterchip.KwikFilterChipOption"]},{"name":"data class KwikIndicatorProps(val height: Float = 4.0f, val width: Float = 0.8f, val horizontalPadding: Float = 0.0f, val verticalPadding: Float = 0.0f, val borderRadius: Float = 4.0f)","description":"com.isakaro.kwik.ui.tabs.KwikIndicatorProps","location":"kwik/com.isakaro.kwik.ui.tabs/-kwik-indicator-props/index.html","searchKeys":["KwikIndicatorProps","data class KwikIndicatorProps(val height: Float = 4.0f, val width: Float = 0.8f, val horizontalPadding: Float = 0.0f, val verticalPadding: Float = 0.0f, val borderRadius: Float = 4.0f)","com.isakaro.kwik.ui.tabs.KwikIndicatorProps"]},{"name":"data class KwikListItemAction(val id: UUID = UUID.randomUUID(), val title: String, val description: String = \"\", val icon: Any? = null, val tint: Color? = null, val action: () -> Unit = {})","description":"com.isakaro.kwik.ui.list.KwikListItemAction","location":"kwik/com.isakaro.kwik.ui.list/-kwik-list-item-action/index.html","searchKeys":["KwikListItemAction","data class KwikListItemAction(val id: UUID = UUID.randomUUID(), val title: String, val description: String = \"\", val icon: Any? = null, val tint: Color? = null, val action: () -> Unit = {})","com.isakaro.kwik.ui.list.KwikListItemAction"]},{"name":"data class KwikPermissionDto(val permission: String, val rationaleMessage: String)","description":"com.isakaro.kwik.ui.permissions.KwikPermissionDto","location":"kwik/com.isakaro.kwik.ui.permissions/-kwik-permission-dto/index.html","searchKeys":["KwikPermissionDto","data class KwikPermissionDto(val permission: String, val rationaleMessage: String)","com.isakaro.kwik.ui.permissions.KwikPermissionDto"]},{"name":"data class KwikPermissionRequest(val state: KwikPermissionRequestState, val id: UUID = UUID.randomUUID())","description":"com.isakaro.kwik.ui.permissions.KwikPermissionRequest","location":"kwik/com.isakaro.kwik.ui.permissions/-kwik-permission-request/index.html","searchKeys":["KwikPermissionRequest","data class KwikPermissionRequest(val state: KwikPermissionRequestState, val id: UUID = UUID.randomUUID())","com.isakaro.kwik.ui.permissions.KwikPermissionRequest"]},{"name":"data class KwikRadioItem<T>(val label: String, val value: T)","description":"com.isakaro.kwik.ui.radio.KwikRadioItem","location":"kwik/com.isakaro.kwik.ui.radio/-kwik-radio-item/index.html","searchKeys":["KwikRadioItem","data class KwikRadioItem<T>(val label: String, val value: T)","com.isakaro.kwik.ui.radio.KwikRadioItem"]},{"name":"data class KwikStepperState(val steps: List<String>, var currentStep: Int = 0, var isComplete: Boolean = false)","description":"com.isakaro.kwik.ui.stepper.KwikStepperState","location":"kwik/com.isakaro.kwik.ui.stepper/-kwik-stepper-state/index.html","searchKeys":["KwikStepperState","data class KwikStepperState(val steps: List<String>, var currentStep: Int = 0, var isComplete: Boolean = false)","com.isakaro.kwik.ui.stepper.KwikStepperState"]},{"name":"data class KwikTabItem(val title: String? = null, val counter: Int = 0, val icon: Any? = null, val content: () -> Unit)","description":"com.isakaro.kwik.ui.tabs.KwikTabItem","location":"kwik/com.isakaro.kwik.ui.tabs/-kwik-tab-item/index.html","searchKeys":["KwikTabItem","data class KwikTabItem(val title: String? = null, val counter: Int = 0, val icon: Any? = null, val content: () -> Unit)","com.isakaro.kwik.ui.tabs.KwikTabItem"]},{"name":"data class KwikTagsInputItem(val id: Any, val label: String, val quantity: Int = 1, val minQuantity: Int = 1, val maxQuantity: Int = 100)","description":"com.isakaro.kwik.ui.inputfields.KwikTagsInputItem","location":"kwik/com.isakaro.kwik.ui.inputfields/-kwik-tags-input-item/index.html","searchKeys":["KwikTagsInputItem","data class KwikTagsInputItem(val id: Any, val label: String, val quantity: Int = 1, val minQuantity: Int = 1, val maxQuantity: Int = 100)","com.isakaro.kwik.ui.inputfields.KwikTagsInputItem"]},{"name":"data class KwikTimelineEntry(val id: Any = Any(), val title: String? = null, val description: String? = null, val icon: Any? = null, val accentColor: Color? = null, val onClick: (KwikTimelineEntry) -> Unit = {}, val content: () -> Unit? = null)","description":"com.isakaro.kwik.ui.timeline.KwikTimelineEntry","location":"kwik/com.isakaro.kwik.ui.timeline/-kwik-timeline-entry/index.html","searchKeys":["KwikTimelineEntry","data class KwikTimelineEntry(val id: Any = Any(), val title: String? = null, val description: String? = null, val icon: Any? = null, val accentColor: Color? = null, val onClick: (KwikTimelineEntry) -> Unit = {}, val content: () -> Unit? = null)","com.isakaro.kwik.ui.timeline.KwikTimelineEntry"]},{"name":"data class KwikToastState(val id: UUID = UUID.randomUUID(), val message: String = \"\", val type: KwikToastType = KwikToastType.NEUTRAL, val isVisible: Boolean = false, val duration: Long = 4000, val backgroundColor: Color = Color.Unspecified)","description":"com.isakaro.kwik.ui.toast.KwikToastState","location":"kwik/com.isakaro.kwik.ui.toast/-kwik-toast-state/index.html","searchKeys":["KwikToastState","data class KwikToastState(val id: UUID = UUID.randomUUID(), val message: String = \"\", val type: KwikToastType = KwikToastType.NEUTRAL, val isVisible: Boolean = false, val duration: Long = 4000, val backgroundColor: Color = Color.Unspecified)","com.isakaro.kwik.ui.toast.KwikToastState"]},{"name":"data class KwikToggleGroupOption<T>(val label: String, val value: T)","description":"com.isakaro.kwik.ui.button.KwikToggleGroupOption","location":"kwik/com.isakaro.kwik.ui.button/-kwik-toggle-group-option/index.html","searchKeys":["KwikToggleGroupOption","data class KwikToggleGroupOption<T>(val label: String, val value: T)","com.isakaro.kwik.ui.button.KwikToggleGroupOption"]},{"name":"data class KwikWebViewSettings(val userAgent: String = \"Kwik-Android-WebView\", val cookies: List<KwikCookie> = emptyList(), val debug: Boolean = false, val javaScriptEnabled: Boolean = true, val domStorageEnabled: Boolean = true, val allowFileAccess: Boolean = true, val allowContentAccess: Boolean = true, val allowFileAccessFromFileURLs: Boolean = false, val allowUniversalAccessFromFileURLs: Boolean = false, val javaScriptCanOpenWindowsAutomatically: Boolean = true, val supportMultipleWindows: Boolean = true)","description":"com.isakaro.kwik.ui.webview.KwikWebViewSettings","location":"kwik/com.isakaro.kwik.ui.webview/-kwik-web-view-settings/index.html","searchKeys":["KwikWebViewSettings","data class KwikWebViewSettings(val userAgent: String = \"Kwik-Android-WebView\", val cookies: List<KwikCookie> = emptyList(), val debug: Boolean = false, val javaScriptEnabled: Boolean = true, val domStorageEnabled: Boolean = true, val allowFileAccess: Boolean = true, val allowContentAccess: Boolean = true, val allowFileAccessFromFileURLs: Boolean = false, val allowUniversalAccessFromFileURLs: Boolean = false, val javaScriptCanOpenWindowsAutomatically: Boolean = true, val supportMultipleWindows: Boolean = true)","com.isakaro.kwik.ui.webview.KwikWebViewSettings"]},{"name":"data class KwikYearsData(val minYear: Int = 1965, val maxYear: Int = Calendar.getInstance().get(Calendar.YEAR))","description":"com.isakaro.kwik.ui.date.KwikYearsData","location":"kwik/com.isakaro.kwik.ui.date/-kwik-years-data/index.html","searchKeys":["KwikYearsData","data class KwikYearsData(val minYear: Int = 1965, val maxYear: Int = Calendar.getInstance().get(Calendar.YEAR))","com.isakaro.kwik.ui.date.KwikYearsData"]},{"name":"data class PasswordRequirement(val description: String, var requirementMet: Boolean, var visible: Boolean = true)","description":"com.isakaro.kwik.ui.form.PasswordRequirement","location":"kwik/com.isakaro.kwik.ui.form/-password-requirement/index.html","searchKeys":["PasswordRequirement","data class PasswordRequirement(val description: String, var requirementMet: Boolean, var visible: Boolean = true)","com.isakaro.kwik.ui.form.PasswordRequirement"]},{"name":"data class Space(val id: UUID = UUID.randomUUID()) : KwikDropdownItemActionState","description":"com.isakaro.kwik.ui.dropdown.KwikDropdownItemActionState.Space","location":"kwik/com.isakaro.kwik.ui.dropdown/-kwik-dropdown-item-action-state/-space/index.html","searchKeys":["Space","data class Space(val id: UUID = UUID.randomUUID()) : KwikDropdownItemActionState","com.isakaro.kwik.ui.dropdown.KwikDropdownItemActionState.Space"]},{"name":"data class Space(val id: UUID = UUID.randomUUID()) : KwikListItemActionState","description":"com.isakaro.kwik.ui.list.KwikListItemActionState.Space","location":"kwik/com.isakaro.kwik.ui.list/-kwik-list-item-action-state/-space/index.html","searchKeys":["Space","data class Space(val id: UUID = UUID.randomUUID()) : KwikListItemActionState","com.isakaro.kwik.ui.list.KwikListItemActionState.Space"]},{"name":"data object Available : KwikNetworkUtils.NetworkState","description":"com.isakaro.kwik.ui.utils.KwikNetworkUtils.NetworkState.Available","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-network-utils/-network-state/-available/index.html","searchKeys":["Available","data object Available : KwikNetworkUtils.NetworkState","com.isakaro.kwik.ui.utils.KwikNetworkUtils.NetworkState.Available"]},{"name":"data object Denied : KwikPermissionRequestState","description":"com.isakaro.kwik.ui.permissions.KwikPermissionRequestState.Denied","location":"kwik/com.isakaro.kwik.ui.permissions/-kwik-permission-request-state/-denied/index.html","searchKeys":["Denied","data object Denied : KwikPermissionRequestState","com.isakaro.kwik.ui.permissions.KwikPermissionRequestState.Denied"]},{"name":"data object Granted : KwikPermissionRequestState","description":"com.isakaro.kwik.ui.permissions.KwikPermissionRequestState.Granted","location":"kwik/com.isakaro.kwik.ui.permissions/-kwik-permission-request-state/-granted/index.html","searchKeys":["Granted","data object Granted : KwikPermissionRequestState","com.isakaro.kwik.ui.permissions.KwikPermissionRequestState.Granted"]},{"name":"data object Initializing : KwikNetworkUtils.NetworkState","description":"com.isakaro.kwik.ui.utils.KwikNetworkUtils.NetworkState.Initializing","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-network-utils/-network-state/-initializing/index.html","searchKeys":["Initializing","data object Initializing : KwikNetworkUtils.NetworkState","com.isakaro.kwik.ui.utils.KwikNetworkUtils.NetworkState.Initializing"]},{"name":"data object Reconnecting : KwikNetworkUtils.NetworkState","description":"com.isakaro.kwik.ui.utils.KwikNetworkUtils.NetworkState.Reconnecting","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-network-utils/-network-state/-reconnecting/index.html","searchKeys":["Reconnecting","data object Reconnecting : KwikNetworkUtils.NetworkState","com.isakaro.kwik.ui.utils.KwikNetworkUtils.NetworkState.Reconnecting"]},{"name":"data object Requesting : KwikPermissionRequestState","description":"com.isakaro.kwik.ui.permissions.KwikPermissionRequestState.Requesting","location":"kwik/com.isakaro.kwik.ui.permissions/-kwik-permission-request-state/-requesting/index.html","searchKeys":["Requesting","data object Requesting : KwikPermissionRequestState","com.isakaro.kwik.ui.permissions.KwikPermissionRequestState.Requesting"]},{"name":"data object ShowRationale : KwikPermissionRequestState","description":"com.isakaro.kwik.ui.permissions.KwikPermissionRequestState.ShowRationale","location":"kwik/com.isakaro.kwik.ui.permissions/-kwik-permission-request-state/-show-rationale/index.html","searchKeys":["ShowRationale","data object ShowRationale : KwikPermissionRequestState","com.isakaro.kwik.ui.permissions.KwikPermissionRequestState.ShowRationale"]},{"name":"data object Unavailable : KwikNetworkUtils.NetworkState","description":"com.isakaro.kwik.ui.utils.KwikNetworkUtils.NetworkState.Unavailable","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-network-utils/-network-state/-unavailable/index.html","searchKeys":["Unavailable","data object Unavailable : KwikNetworkUtils.NetworkState","com.isakaro.kwik.ui.utils.KwikNetworkUtils.NetworkState.Unavailable"]},{"name":"enum ImageLoaderState : Enum<ImageLoaderState> ","description":"com.isakaro.kwik.ui.image.ImageLoaderState","location":"kwik/com.isakaro.kwik.ui.image/-image-loader-state/index.html","searchKeys":["ImageLoaderState","enum ImageLoaderState : Enum<ImageLoaderState> ","com.isakaro.kwik.ui.image.ImageLoaderState"]},{"name":"enum KwikButtonLoadingStyle : Enum<KwikButtonLoadingStyle> ","description":"com.isakaro.kwik.ui.button.KwikButtonLoadingStyle","location":"kwik/com.isakaro.kwik.ui.button/-kwik-button-loading-style/index.html","searchKeys":["KwikButtonLoadingStyle","enum KwikButtonLoadingStyle : Enum<KwikButtonLoadingStyle> ","com.isakaro.kwik.ui.button.KwikButtonLoadingStyle"]},{"name":"enum KwikCountry : Enum<KwikCountry> ","description":"com.isakaro.kwik.ui.utils.KwikCountry","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/index.html","searchKeys":["KwikCountry","enum KwikCountry : Enum<KwikCountry> ","com.isakaro.kwik.ui.utils.KwikCountry"]},{"name":"enum KwikDatePickerMode : Enum<KwikDatePickerMode> ","description":"com.isakaro.kwik.ui.date.KwikDatePickerMode","location":"kwik/com.isakaro.kwik.ui.date/-kwik-date-picker-mode/index.html","searchKeys":["KwikDatePickerMode","enum KwikDatePickerMode : Enum<KwikDatePickerMode> ","com.isakaro.kwik.ui.date.KwikDatePickerMode"]},{"name":"enum KwikPasswordRequirementType : Enum<KwikPasswordRequirementType> ","description":"com.isakaro.kwik.ui.form.KwikPasswordRequirementType","location":"kwik/com.isakaro.kwik.ui.form/-kwik-password-requirement-type/index.html","searchKeys":["KwikPasswordRequirementType","enum KwikPasswordRequirementType : Enum<KwikPasswordRequirementType> ","com.isakaro.kwik.ui.form.KwikPasswordRequirementType"]},{"name":"enum KwikSocialPlatform : Enum<KwikSocialPlatform> ","description":"com.isakaro.kwik.ui.button.KwikSocialPlatform","location":"kwik/com.isakaro.kwik.ui.button/-kwik-social-platform/index.html","searchKeys":["KwikSocialPlatform","enum KwikSocialPlatform : Enum<KwikSocialPlatform> ","com.isakaro.kwik.ui.button.KwikSocialPlatform"]},{"name":"enum KwikToastType : Enum<KwikToastType> ","description":"com.isakaro.kwik.ui.toast.KwikToastType","location":"kwik/com.isakaro.kwik.ui.toast/-kwik-toast-type/index.html","searchKeys":["KwikToastType","enum KwikToastType : Enum<KwikToastType> ","com.isakaro.kwik.ui.toast.KwikToastType"]},{"name":"fun <T> ColumnScope.KwikRadioButtonGroup(options: List<KwikRadioItem<T>>, initialSelectedValue: T? = null, onOptionSelected: (KwikRadioItem<T>) -> Unit)","description":"com.isakaro.kwik.ui.radio.KwikRadioButtonGroup","location":"kwik/com.isakaro.kwik.ui.radio/-kwik-radio-button-group.html","searchKeys":["KwikRadioButtonGroup","fun <T> ColumnScope.KwikRadioButtonGroup(options: List<KwikRadioItem<T>>, initialSelectedValue: T? = null, onOptionSelected: (KwikRadioItem<T>) -> Unit)","com.isakaro.kwik.ui.radio.KwikRadioButtonGroup"]},{"name":"fun <T> KwikAccordionGroup(allowMultipleExpanded: Boolean = true, initialExpandedIndices: List<Int> = emptyList(), items: List<T>, titleProvider: (T) -> String, headerIconProvider: (T) -> Int?? = null, containerColor: Color = MaterialTheme.colorScheme.surface, elevation: Int = 8, headerTextColor: Color = MaterialTheme.colorScheme.onSurface, errorProvider: (T) -> Boolean? = null, errorIcon: Int? = null, content: (T) -> Unit)","description":"com.isakaro.kwik.ui.accordion.KwikAccordionGroup","location":"kwik/com.isakaro.kwik.ui.accordion/-kwik-accordion-group.html","searchKeys":["KwikAccordionGroup","fun <T> KwikAccordionGroup(allowMultipleExpanded: Boolean = true, initialExpandedIndices: List<Int> = emptyList(), items: List<T>, titleProvider: (T) -> String, headerIconProvider: (T) -> Int?? = null, containerColor: Color = MaterialTheme.colorScheme.surface, elevation: Int = 8, headerTextColor: Color = MaterialTheme.colorScheme.onSurface, errorProvider: (T) -> Boolean? = null, errorIcon: Int? = null, content: (T) -> Unit)","com.isakaro.kwik.ui.accordion.KwikAccordionGroup"]},{"name":"fun <T> KwikFilterChips(filters: List<KwikFilterChipOption<T>>, preSelection: Set<T> = mutableSetOf(), filtersUpdated: (List<T>) -> Unit, multiSelection: Boolean = false, selectedContainerColor: Color = MaterialTheme.colorScheme.primary, unselectedContainerColor: Color = if(isSystemInDarkTheme()) Color.DarkGray else Color.LightGray, selectedContentColor: Color = Color.White, unselectedContentColor: Color = if(isSystemInDarkTheme()) Color.White else Color.Black, border: BorderStroke = BorderStroke(\n        width = 0.dp,\n        color = Color.Transparent\n    ), shape: Shape = MaterialTheme.shapes.medium, showCheckedIcon: Boolean = false, flowLayout: Boolean = false, flowLayoutVerticalArrangement: Int = 0, flowLayoutHorizontalArrangement: Int = 2)","description":"com.isakaro.kwik.ui.filterchip.KwikFilterChips","location":"kwik/com.isakaro.kwik.ui.filterchip/-kwik-filter-chips.html","searchKeys":["KwikFilterChips","fun <T> KwikFilterChips(filters: List<KwikFilterChipOption<T>>, preSelection: Set<T> = mutableSetOf(), filtersUpdated: (List<T>) -> Unit, multiSelection: Boolean = false, selectedContainerColor: Color = MaterialTheme.colorScheme.primary, unselectedContainerColor: Color = if(isSystemInDarkTheme()) Color.DarkGray else Color.LightGray, selectedContentColor: Color = Color.White, unselectedContentColor: Color = if(isSystemInDarkTheme()) Color.White else Color.Black, border: BorderStroke = BorderStroke(\n        width = 0.dp,\n        color = Color.Transparent\n    ), shape: Shape = MaterialTheme.shapes.medium, showCheckedIcon: Boolean = false, flowLayout: Boolean = false, flowLayoutVerticalArrangement: Int = 0, flowLayoutHorizontalArrangement: Int = 2)","com.isakaro.kwik.ui.filterchip.KwikFilterChips"]},{"name":"fun <T> KwikToggleGroup(modifier: Modifier = Modifier, options: List<KwikToggleGroupOption<T>>, selectedOption: T, onOptionSelected: (T) -> Unit, elevation: CardElevation = CardDefaults.cardElevation(defaultElevation = 2.dp), shape: Shape = MaterialTheme.shapes.medium, selectedOptionColor: Color = MaterialTheme.colorScheme.primary, selectedOptionShape: Shape = MaterialTheme.shapes.small, selectedOptionTextColor: Color = Color.White, unselectedOptionTextColor: Color = Color.Gray, containerColor: Color = MaterialTheme.colorScheme.surface)","description":"com.isakaro.kwik.ui.button.KwikToggleGroup","location":"kwik/com.isakaro.kwik.ui.button/-kwik-toggle-group.html","searchKeys":["KwikToggleGroup","fun <T> KwikToggleGroup(modifier: Modifier = Modifier, options: List<KwikToggleGroupOption<T>>, selectedOption: T, onOptionSelected: (T) -> Unit, elevation: CardElevation = CardDefaults.cardElevation(defaultElevation = 2.dp), shape: Shape = MaterialTheme.shapes.medium, selectedOptionColor: Color = MaterialTheme.colorScheme.primary, selectedOptionShape: Shape = MaterialTheme.shapes.small, selectedOptionTextColor: Color = Color.White, unselectedOptionTextColor: Color = Color.Gray, containerColor: Color = MaterialTheme.colorScheme.surface)","com.isakaro.kwik.ui.button.KwikToggleGroup"]},{"name":"fun BodyLarge(modifier: Modifier = Modifier, text: Any, color: Color = MaterialTheme.colorScheme.onSurface, fontWeight: FontWeight? = null, textAlign: TextAlign = TextAlign.Start, fontStyle: FontStyle? = null, maxLines: Int = Int.MAX_VALUE, overflow: TextOverflow = TextOverflow.Ellipsis)","description":"com.isakaro.kwik.ui.text.KwikText.BodyLarge","location":"kwik/com.isakaro.kwik.ui.text/-kwik-text/-body-large.html","searchKeys":["BodyLarge","fun BodyLarge(modifier: Modifier = Modifier, text: Any, color: Color = MaterialTheme.colorScheme.onSurface, fontWeight: FontWeight? = null, textAlign: TextAlign = TextAlign.Start, fontStyle: FontStyle? = null, maxLines: Int = Int.MAX_VALUE, overflow: TextOverflow = TextOverflow.Ellipsis)","com.isakaro.kwik.ui.text.KwikText.BodyLarge"]},{"name":"fun BodyMedium(modifier: Modifier = Modifier, text: Any, color: Color = MaterialTheme.colorScheme.onSurface, fontWeight: FontWeight? = null, textAlign: TextAlign = TextAlign.Start, fontStyle: FontStyle? = null, maxLines: Int = Int.MAX_VALUE, overflow: TextOverflow = TextOverflow.Ellipsis)","description":"com.isakaro.kwik.ui.text.KwikText.BodyMedium","location":"kwik/com.isakaro.kwik.ui.text/-kwik-text/-body-medium.html","searchKeys":["BodyMedium","fun BodyMedium(modifier: Modifier = Modifier, text: Any, color: Color = MaterialTheme.colorScheme.onSurface, fontWeight: FontWeight? = null, textAlign: TextAlign = TextAlign.Start, fontStyle: FontStyle? = null, maxLines: Int = Int.MAX_VALUE, overflow: TextOverflow = TextOverflow.Ellipsis)","com.isakaro.kwik.ui.text.KwikText.BodyMedium"]},{"name":"fun BodySmall(modifier: Modifier = Modifier, text: Any, color: Color = MaterialTheme.colorScheme.onSurface, fontWeight: FontWeight? = null, textAlign: TextAlign = TextAlign.Start, fontStyle: FontStyle? = null, maxLines: Int = Int.MAX_VALUE, overflow: TextOverflow = TextOverflow.Ellipsis)","description":"com.isakaro.kwik.ui.text.KwikText.BodySmall","location":"kwik/com.isakaro.kwik.ui.text/-kwik-text/-body-small.html","searchKeys":["BodySmall","fun BodySmall(modifier: Modifier = Modifier, text: Any, color: Color = MaterialTheme.colorScheme.onSurface, fontWeight: FontWeight? = null, textAlign: TextAlign = TextAlign.Start, fontStyle: FontStyle? = null, maxLines: Int = Int.MAX_VALUE, overflow: TextOverflow = TextOverflow.Ellipsis)","com.isakaro.kwik.ui.text.KwikText.BodySmall"]},{"name":"fun BoxWithConstraintsScope.KwikImageGrid(photos: List<Any>, total: Int, onClick: (Any) -> Unit = {})","description":"com.isakaro.kwik.ui.image.KwikImageGrid","location":"kwik/com.isakaro.kwik.ui.image/-kwik-image-grid.html","searchKeys":["KwikImageGrid","fun BoxWithConstraintsScope.KwikImageGrid(photos: List<Any>, total: Int, onClick: (Any) -> Unit = {})","com.isakaro.kwik.ui.image.KwikImageGrid"]},{"name":"fun ConfirmDialog(modifier: Modifier = Modifier, open: Boolean, title: String? = null, cancellable: Boolean = true, shape: Shape = MaterialTheme.shapes.medium, onConfirm: () -> Unit, onCancel: () -> Unit = {}, dismiss: () -> Unit, isLoading: Boolean = false, confirmButtonVisible: Boolean = true, confirmColor: Color = MaterialTheme.colorScheme.primary, confirmText: String? = null, cancelText: String? = null, content: () -> Unit)","description":"com.isakaro.kwik.ui.dialog.KwikDialog.ConfirmDialog","location":"kwik/com.isakaro.kwik.ui.dialog/-kwik-dialog/-confirm-dialog.html","searchKeys":["ConfirmDialog","fun ConfirmDialog(modifier: Modifier = Modifier, open: Boolean, title: String? = null, cancellable: Boolean = true, shape: Shape = MaterialTheme.shapes.medium, onConfirm: () -> Unit, onCancel: () -> Unit = {}, dismiss: () -> Unit, isLoading: Boolean = false, confirmButtonVisible: Boolean = true, confirmColor: Color = MaterialTheme.colorScheme.primary, confirmText: String? = null, cancelText: String? = null, content: () -> Unit)","com.isakaro.kwik.ui.dialog.KwikDialog.ConfirmDialog"]},{"name":"fun ContentDialog(modifier: Modifier = Modifier, open: Boolean, title: String? = null, cancellable: Boolean = true, withCloseIcon: Boolean = false, shape: Shape = MaterialTheme.shapes.medium, dismiss: () -> Unit, content: () -> Unit)","description":"com.isakaro.kwik.ui.dialog.KwikDialog.ContentDialog","location":"kwik/com.isakaro.kwik.ui.dialog/-kwik-dialog/-content-dialog.html","searchKeys":["ContentDialog","fun ContentDialog(modifier: Modifier = Modifier, open: Boolean, title: String? = null, cancellable: Boolean = true, withCloseIcon: Boolean = false, shape: Shape = MaterialTheme.shapes.medium, dismiss: () -> Unit, content: () -> Unit)","com.isakaro.kwik.ui.dialog.KwikDialog.ContentDialog"]},{"name":"fun Context.countryCode(): KwikCountry","description":"com.isakaro.kwik.ui.utils.countryCode","location":"kwik/com.isakaro.kwik.ui.utils/country-code.html","searchKeys":["countryCode","fun Context.countryCode(): KwikCountry","com.isakaro.kwik.ui.utils.countryCode"]},{"name":"fun Context.isPermissionGranted(vararg permission: String): Boolean","description":"com.isakaro.kwik.ui.utils.isPermissionGranted","location":"kwik/com.isakaro.kwik.ui.utils/is-permission-granted.html","searchKeys":["isPermissionGranted","fun Context.isPermissionGranted(vararg permission: String): Boolean","com.isakaro.kwik.ui.utils.isPermissionGranted"]},{"name":"fun DisplayLarge(modifier: Modifier = Modifier, text: Any, color: Color = MaterialTheme.colorScheme.onSurface, fontWeight: FontWeight? = null, fontStyle: FontStyle? = null, textAlign: TextAlign = TextAlign.Start, maxLines: Int = Int.MAX_VALUE, overflow: TextOverflow = TextOverflow.Ellipsis)","description":"com.isakaro.kwik.ui.text.KwikText.DisplayLarge","location":"kwik/com.isakaro.kwik.ui.text/-kwik-text/-display-large.html","searchKeys":["DisplayLarge","fun DisplayLarge(modifier: Modifier = Modifier, text: Any, color: Color = MaterialTheme.colorScheme.onSurface, fontWeight: FontWeight? = null, fontStyle: FontStyle? = null, textAlign: TextAlign = TextAlign.Start, maxLines: Int = Int.MAX_VALUE, overflow: TextOverflow = TextOverflow.Ellipsis)","com.isakaro.kwik.ui.text.KwikText.DisplayLarge"]},{"name":"fun DisplayMedium(modifier: Modifier = Modifier, text: Any, color: Color = MaterialTheme.colorScheme.onSurface, fontWeight: FontWeight? = null, textAlign: TextAlign = TextAlign.Start, fontStyle: FontStyle? = null, maxLines: Int = Int.MAX_VALUE, overflow: TextOverflow = TextOverflow.Ellipsis)","description":"com.isakaro.kwik.ui.text.KwikText.DisplayMedium","location":"kwik/com.isakaro.kwik.ui.text/-kwik-text/-display-medium.html","searchKeys":["DisplayMedium","fun DisplayMedium(modifier: Modifier = Modifier, text: Any, color: Color = MaterialTheme.colorScheme.onSurface, fontWeight: FontWeight? = null, textAlign: TextAlign = TextAlign.Start, fontStyle: FontStyle? = null, maxLines: Int = Int.MAX_VALUE, overflow: TextOverflow = TextOverflow.Ellipsis)","com.isakaro.kwik.ui.text.KwikText.DisplayMedium"]},{"name":"fun DisplaySmall(modifier: Modifier = Modifier, text: Any, color: Color = MaterialTheme.colorScheme.onSurface, fontWeight: FontWeight? = null, textAlign: TextAlign = TextAlign.Start, fontStyle: FontStyle? = null, maxLines: Int = Int.MAX_VALUE, overflow: TextOverflow = TextOverflow.Ellipsis)","description":"com.isakaro.kwik.ui.text.KwikText.DisplaySmall","location":"kwik/com.isakaro.kwik.ui.text/-kwik-text/-display-small.html","searchKeys":["DisplaySmall","fun DisplaySmall(modifier: Modifier = Modifier, text: Any, color: Color = MaterialTheme.colorScheme.onSurface, fontWeight: FontWeight? = null, textAlign: TextAlign = TextAlign.Start, fontStyle: FontStyle? = null, maxLines: Int = Int.MAX_VALUE, overflow: TextOverflow = TextOverflow.Ellipsis)","com.isakaro.kwik.ui.text.KwikText.DisplaySmall"]},{"name":"fun GalleryDialog(open: Boolean, title: String? = null, cancellable: Boolean = true, dismiss: () -> Unit, content: () -> Unit)","description":"com.isakaro.kwik.ui.dialog.KwikDialog.GalleryDialog","location":"kwik/com.isakaro.kwik.ui.dialog/-kwik-dialog/-gallery-dialog.html","searchKeys":["GalleryDialog","fun GalleryDialog(open: Boolean, title: String? = null, cancellable: Boolean = true, dismiss: () -> Unit, content: () -> Unit)","com.isakaro.kwik.ui.dialog.KwikDialog.GalleryDialog"]},{"name":"fun HeadlineLarge(modifier: Modifier = Modifier, text: Any, color: Color = MaterialTheme.colorScheme.onSurface, fontWeight: FontWeight? = null, textAlign: TextAlign = TextAlign.Start, fontStyle: FontStyle? = null, maxLines: Int = Int.MAX_VALUE, overflow: TextOverflow = TextOverflow.Ellipsis)","description":"com.isakaro.kwik.ui.text.KwikText.HeadlineLarge","location":"kwik/com.isakaro.kwik.ui.text/-kwik-text/-headline-large.html","searchKeys":["HeadlineLarge","fun HeadlineLarge(modifier: Modifier = Modifier, text: Any, color: Color = MaterialTheme.colorScheme.onSurface, fontWeight: FontWeight? = null, textAlign: TextAlign = TextAlign.Start, fontStyle: FontStyle? = null, maxLines: Int = Int.MAX_VALUE, overflow: TextOverflow = TextOverflow.Ellipsis)","com.isakaro.kwik.ui.text.KwikText.HeadlineLarge"]},{"name":"fun HeadlineMedium(modifier: Modifier = Modifier, text: Any, color: Color = MaterialTheme.colorScheme.onSurface, fontWeight: FontWeight? = null, textAlign: TextAlign = TextAlign.Start, fontStyle: FontStyle? = null, maxLines: Int = Int.MAX_VALUE, overflow: TextOverflow = TextOverflow.Ellipsis)","description":"com.isakaro.kwik.ui.text.KwikText.HeadlineMedium","location":"kwik/com.isakaro.kwik.ui.text/-kwik-text/-headline-medium.html","searchKeys":["HeadlineMedium","fun HeadlineMedium(modifier: Modifier = Modifier, text: Any, color: Color = MaterialTheme.colorScheme.onSurface, fontWeight: FontWeight? = null, textAlign: TextAlign = TextAlign.Start, fontStyle: FontStyle? = null, maxLines: Int = Int.MAX_VALUE, overflow: TextOverflow = TextOverflow.Ellipsis)","com.isakaro.kwik.ui.text.KwikText.HeadlineMedium"]},{"name":"fun HeadlineSmall(modifier: Modifier = Modifier, text: Any, color: Color = MaterialTheme.colorScheme.onSurface, fontWeight: FontWeight? = null, textAlign: TextAlign = TextAlign.Start, fontStyle: FontStyle? = null, maxLines: Int = Int.MAX_VALUE, overflow: TextOverflow = TextOverflow.Ellipsis)","description":"com.isakaro.kwik.ui.text.KwikText.HeadlineSmall","location":"kwik/com.isakaro.kwik.ui.text/-kwik-text/-headline-small.html","searchKeys":["HeadlineSmall","fun HeadlineSmall(modifier: Modifier = Modifier, text: Any, color: Color = MaterialTheme.colorScheme.onSurface, fontWeight: FontWeight? = null, textAlign: TextAlign = TextAlign.Start, fontStyle: FontStyle? = null, maxLines: Int = Int.MAX_VALUE, overflow: TextOverflow = TextOverflow.Ellipsis)","com.isakaro.kwik.ui.text.KwikText.HeadlineSmall"]},{"name":"fun KwikAccordion(title: String, headerIcon: Int? = null, containerColor: Color = MaterialTheme.colorScheme.surface, elevation: Int = 8, expanded: Boolean, headerTextColor: Color = MaterialTheme.colorScheme.onSurface, isError: Boolean = false, errorIcon: Int? = null, onExpandedChange: (Boolean) -> Unit, content: () -> Unit)","description":"com.isakaro.kwik.ui.accordion.KwikAccordion","location":"kwik/com.isakaro.kwik.ui.accordion/-kwik-accordion.html","searchKeys":["KwikAccordion","fun KwikAccordion(title: String, headerIcon: Int? = null, containerColor: Color = MaterialTheme.colorScheme.surface, elevation: Int = 8, expanded: Boolean, headerTextColor: Color = MaterialTheme.colorScheme.onSurface, isError: Boolean = false, errorIcon: Int? = null, onExpandedChange: (Boolean) -> Unit, content: () -> Unit)","com.isakaro.kwik.ui.accordion.KwikAccordion"]},{"name":"fun KwikAvatar(modifier: Modifier = Modifier, shape: Shape = CircleShape, url: Any)","description":"com.isakaro.kwik.ui.avatar.KwikAvatar","location":"kwik/com.isakaro.kwik.ui.avatar/-kwik-avatar.html","searchKeys":["KwikAvatar","fun KwikAvatar(modifier: Modifier = Modifier, shape: Shape = CircleShape, url: Any)","com.isakaro.kwik.ui.avatar.KwikAvatar"]},{"name":"fun KwikBottomTabs(modifier: Modifier = Modifier, shape: Shape = MaterialTheme.shapes.medium, tabs: List<KwikTabItem>, pagerState: PagerState, elevation: Int = 0, containerColor: Color = MaterialTheme.colorScheme.surface, selectedContentColor: Color = MaterialTheme.colorScheme.primary, unselectedContentColor: Color = Color.Gray)","description":"com.isakaro.kwik.ui.tabs.KwikBottomTabs","location":"kwik/com.isakaro.kwik.ui.tabs/-kwik-bottom-tabs.html","searchKeys":["KwikBottomTabs","fun KwikBottomTabs(modifier: Modifier = Modifier, shape: Shape = MaterialTheme.shapes.medium, tabs: List<KwikTabItem>, pagerState: PagerState, elevation: Int = 0, containerColor: Color = MaterialTheme.colorScheme.surface, selectedContentColor: Color = MaterialTheme.colorScheme.primary, unselectedContentColor: Color = Color.Gray)","com.isakaro.kwik.ui.tabs.KwikBottomTabs"]},{"name":"fun KwikButton(modifier: Modifier = Modifier, text: Any, isLoading: Boolean = false, loadingText: String = \"\", outlined: Boolean = false, leadingIcon: Any? = null, trailingIcon: Any? = null, containerColor: Color = MaterialTheme.colorScheme.primary, tintIcon: Boolean = true, enabled: Boolean = true, fontStyle: TextStyle = MaterialTheme.typography.titleSmall, kwikButtonLoadingStyle: KwikButtonLoadingStyle = KwikButtonLoadingStyle.CIRCULAR, shape: Shape = MaterialTheme.shapes.medium, border: BorderStroke? = null, contentPadding: PaddingValues = PaddingValues(2.dp), onClick: () -> Unit = {})","description":"com.isakaro.kwik.ui.button.KwikButton","location":"kwik/com.isakaro.kwik.ui.button/-kwik-button.html","searchKeys":["KwikButton","fun KwikButton(modifier: Modifier = Modifier, text: Any, isLoading: Boolean = false, loadingText: String = \"\", outlined: Boolean = false, leadingIcon: Any? = null, trailingIcon: Any? = null, containerColor: Color = MaterialTheme.colorScheme.primary, tintIcon: Boolean = true, enabled: Boolean = true, fontStyle: TextStyle = MaterialTheme.typography.titleSmall, kwikButtonLoadingStyle: KwikButtonLoadingStyle = KwikButtonLoadingStyle.CIRCULAR, shape: Shape = MaterialTheme.shapes.medium, border: BorderStroke? = null, contentPadding: PaddingValues = PaddingValues(2.dp), onClick: () -> Unit = {})","com.isakaro.kwik.ui.button.KwikButton"]},{"name":"fun KwikButtonPreview()","description":"com.isakaro.kwik.ui.button.KwikButtonPreview","location":"kwik/com.isakaro.kwik.ui.button/-kwik-button-preview.html","searchKeys":["KwikButtonPreview","fun KwikButtonPreview()","com.isakaro.kwik.ui.button.KwikButtonPreview"]},{"name":"fun KwikButtonWithLeadingIconPreview()","description":"com.isakaro.kwik.ui.button.KwikButtonWithLeadingIconPreview","location":"kwik/com.isakaro.kwik.ui.button/-kwik-button-with-leading-icon-preview.html","searchKeys":["KwikButtonWithLeadingIconPreview","fun KwikButtonWithLeadingIconPreview()","com.isakaro.kwik.ui.button.KwikButtonWithLeadingIconPreview"]},{"name":"fun KwikButtonWithTrailingIconPreview()","description":"com.isakaro.kwik.ui.button.KwikButtonWithTrailingIconPreview","location":"kwik/com.isakaro.kwik.ui.button/-kwik-button-with-trailing-icon-preview.html","searchKeys":["KwikButtonWithTrailingIconPreview","fun KwikButtonWithTrailingIconPreview()","com.isakaro.kwik.ui.button.KwikButtonWithTrailingIconPreview"]},{"name":"fun KwikCard(modifier: Modifier = Modifier, containerColor: Color = MaterialTheme.colorScheme.surface, shape: Shape = MaterialTheme.shapes.medium, elevation: CardElevation = CardDefaults.cardElevation(defaultElevation = 2.dp), onClick: () -> Unit = {}, content: () -> Unit)","description":"com.isakaro.kwik.ui.card.KwikCard","location":"kwik/com.isakaro.kwik.ui.card/-kwik-card.html","searchKeys":["KwikCard","fun KwikCard(modifier: Modifier = Modifier, containerColor: Color = MaterialTheme.colorScheme.surface, shape: Shape = MaterialTheme.shapes.medium, elevation: CardElevation = CardDefaults.cardElevation(defaultElevation = 2.dp), onClick: () -> Unit = {}, content: () -> Unit)","com.isakaro.kwik.ui.card.KwikCard"]},{"name":"fun KwikCarousel(modifier: Modifier = Modifier, state: MutableState<KwikCarouselState>, shape: Shape = MaterialTheme.shapes.medium, initialIndex: Int = 0, showIndicators: Boolean = true, selectedIndicatorColor: Color = Color.White, unselectedIndicatorColor: Color = MaterialTheme.colorScheme.onSurface.copy(alpha = 0.5f), indicatorContainerColor: Color = MaterialTheme.colorScheme.surface.copy(alpha = 0.5f), showNavigation: Boolean = true, userScrollEnabled: Boolean = true, showCounter: Boolean = false, autoPlay: Boolean = false, autoPlayDelay: Long = 3000, onPageIndexChange: (Int) -> Unit = {}, prevButton: () -> Unit? = null, nextButton: () -> Unit? = null, contentBuilder: (page: Int) -> Unit)","description":"com.isakaro.kwik.ui.carousel.KwikCarousel","location":"kwik/com.isakaro.kwik.ui.carousel/-kwik-carousel.html","searchKeys":["KwikCarousel","fun KwikCarousel(modifier: Modifier = Modifier, state: MutableState<KwikCarouselState>, shape: Shape = MaterialTheme.shapes.medium, initialIndex: Int = 0, showIndicators: Boolean = true, selectedIndicatorColor: Color = Color.White, unselectedIndicatorColor: Color = MaterialTheme.colorScheme.onSurface.copy(alpha = 0.5f), indicatorContainerColor: Color = MaterialTheme.colorScheme.surface.copy(alpha = 0.5f), showNavigation: Boolean = true, userScrollEnabled: Boolean = true, showCounter: Boolean = false, autoPlay: Boolean = false, autoPlayDelay: Long = 3000, onPageIndexChange: (Int) -> Unit = {}, prevButton: () -> Unit? = null, nextButton: () -> Unit? = null, contentBuilder: (page: Int) -> Unit)","com.isakaro.kwik.ui.carousel.KwikCarousel"]},{"name":"fun KwikCenterColumn(modifier: Modifier = Modifier, content: () -> Unit)","description":"com.isakaro.kwik.ui.helpers.KwikCenterColumn","location":"kwik/com.isakaro.kwik.ui.helpers/-kwik-center-column.html","searchKeys":["KwikCenterColumn","fun KwikCenterColumn(modifier: Modifier = Modifier, content: () -> Unit)","com.isakaro.kwik.ui.helpers.KwikCenterColumn"]},{"name":"fun KwikCheckBox(checked: Boolean, text: String? = null, colors: CheckboxColors = CheckboxDefaults.colors(\n        checkedColor = MaterialTheme.colorScheme.primary,\n        uncheckedColor = Color.Gray,\n        checkmarkColor = Color.White,\n        disabledUncheckedColor = Color.White\n    ), contentColor: Color = MaterialTheme.colorScheme.onSurface, onCheckedChange: (Boolean) -> Unit)","description":"com.isakaro.kwik.ui.checkbox.KwikCheckBox","location":"kwik/com.isakaro.kwik.ui.checkbox/-kwik-check-box.html","searchKeys":["KwikCheckBox","fun KwikCheckBox(checked: Boolean, text: String? = null, colors: CheckboxColors = CheckboxDefaults.colors(\n        checkedColor = MaterialTheme.colorScheme.primary,\n        uncheckedColor = Color.Gray,\n        checkmarkColor = Color.White,\n        disabledUncheckedColor = Color.White\n    ), contentColor: Color = MaterialTheme.colorScheme.onSurface, onCheckedChange: (Boolean) -> Unit)","com.isakaro.kwik.ui.checkbox.KwikCheckBox"]},{"name":"fun KwikChip(text: String, isSelected: Boolean = false, onClick: () -> Unit = {}, onLongPress: (Boolean) -> Unit = {}, selectedContainerColor: Color = MaterialTheme.colorScheme.surface, unselectedContainerColor: Color = if(isSystemInDarkTheme()) Color.DarkGray else Color.LightGray, selectedContentColor: Color = Color.White, unselectedContentColor: Color = if(isSystemInDarkTheme()) Color.White else Color.Black, border: BorderStroke? = null, shape: Shape = MaterialTheme.shapes.extraLarge, leadingIcon: () -> Unit?)","description":"com.isakaro.kwik.ui.filterchip.KwikChip","location":"kwik/com.isakaro.kwik.ui.filterchip/-kwik-chip.html","searchKeys":["KwikChip","fun KwikChip(text: String, isSelected: Boolean = false, onClick: () -> Unit = {}, onLongPress: (Boolean) -> Unit = {}, selectedContainerColor: Color = MaterialTheme.colorScheme.surface, unselectedContainerColor: Color = if(isSystemInDarkTheme()) Color.DarkGray else Color.LightGray, selectedContentColor: Color = Color.White, unselectedContentColor: Color = if(isSystemInDarkTheme()) Color.White else Color.Black, border: BorderStroke? = null, shape: Shape = MaterialTheme.shapes.extraLarge, leadingIcon: () -> Unit?)","com.isakaro.kwik.ui.filterchip.KwikChip"]},{"name":"fun KwikCircularLoading(modifier: Modifier = Modifier, color: Color = MaterialTheme.colorScheme.primary, trackColor: Color = Color.Transparent)","description":"com.isakaro.kwik.ui.loading.KwikCircularLoading","location":"kwik/com.isakaro.kwik.ui.loading/-kwik-circular-loading.html","searchKeys":["KwikCircularLoading","fun KwikCircularLoading(modifier: Modifier = Modifier, color: Color = MaterialTheme.colorScheme.primary, trackColor: Color = Color.Transparent)","com.isakaro.kwik.ui.loading.KwikCircularLoading"]},{"name":"fun KwikClassicStepper(state: MutableState<KwikStepperState>, modifier: Modifier = Modifier, activeStepColor: Color = MaterialTheme.colorScheme.primary)","description":"com.isakaro.kwik.ui.stepper.KwikClassicStepper","location":"kwik/com.isakaro.kwik.ui.stepper/-kwik-classic-stepper.html","searchKeys":["KwikClassicStepper","fun KwikClassicStepper(state: MutableState<KwikStepperState>, modifier: Modifier = Modifier, activeStepColor: Color = MaterialTheme.colorScheme.primary)","com.isakaro.kwik.ui.stepper.KwikClassicStepper"]},{"name":"fun KwikComposableLifeCycle(onResume: () -> Unit = {}, onPause: () -> Unit = {}, onStarted: () -> Unit = {})","description":"com.isakaro.kwik.ui.lifecycle.KwikComposableLifeCycle","location":"kwik/com.isakaro.kwik.ui.lifecycle/-kwik-composable-life-cycle.html","searchKeys":["KwikComposableLifeCycle","fun KwikComposableLifeCycle(onResume: () -> Unit = {}, onPause: () -> Unit = {}, onStarted: () -> Unit = {})","com.isakaro.kwik.ui.lifecycle.KwikComposableLifeCycle"]},{"name":"fun KwikCountDownTimer(minutes: Int, seconds: Int, onTimeUpdate: (String) -> Unit, onTimerFinished: () -> Unit)","description":"com.isakaro.kwik.ui.countdown.KwikCountDownTimer","location":"kwik/com.isakaro.kwik.ui.countdown/-kwik-count-down-timer.html","searchKeys":["KwikCountDownTimer","fun KwikCountDownTimer(minutes: Int, seconds: Int, onTimeUpdate: (String) -> Unit, onTimerFinished: () -> Unit)","com.isakaro.kwik.ui.countdown.KwikCountDownTimer"]},{"name":"fun KwikCountDownTimer(timeMillis: Long, onTimeUpdate: (String) -> Unit, onTimerFinished: () -> Unit)","description":"com.isakaro.kwik.ui.countdown.KwikCountDownTimer","location":"kwik/com.isakaro.kwik.ui.countdown/-kwik-count-down-timer.html","searchKeys":["KwikCountDownTimer","fun KwikCountDownTimer(timeMillis: Long, onTimeUpdate: (String) -> Unit, onTimerFinished: () -> Unit)","com.isakaro.kwik.ui.countdown.KwikCountDownTimer"]},{"name":"fun KwikCounter(modifier: Modifier = Modifier, label: String? = null, initialValue: Int = 0, minValue: Int = 0, maxValue: Int = 99, disabled: Boolean = false, borderColor: Color = Color.Gray, borderStroke: Int = 0, onValueChange: (Int) -> Unit)","description":"com.isakaro.kwik.ui.counter.KwikCounter","location":"kwik/com.isakaro.kwik.ui.counter/-kwik-counter.html","searchKeys":["KwikCounter","fun KwikCounter(modifier: Modifier = Modifier, label: String? = null, initialValue: Int = 0, minValue: Int = 0, maxValue: Int = 99, disabled: Boolean = false, borderColor: Color = Color.Gray, borderStroke: Int = 0, onValueChange: (Int) -> Unit)","com.isakaro.kwik.ui.counter.KwikCounter"]},{"name":"fun KwikCountryCodeButton(modifier: Modifier = Modifier, showFlags: Boolean = false, showCountryCode: Boolean = false, showDialingCode: Boolean = true, country: KwikCountryInfo?, enabled: Boolean = true, shape: Shape = MaterialTheme.shapes.medium, onClick: () -> Unit)","description":"com.isakaro.kwik.ui.countrypicker.KwikCountryCodeButton","location":"kwik/com.isakaro.kwik.ui.countrypicker/-kwik-country-code-button.html","searchKeys":["KwikCountryCodeButton","fun KwikCountryCodeButton(modifier: Modifier = Modifier, showFlags: Boolean = false, showCountryCode: Boolean = false, showDialingCode: Boolean = true, country: KwikCountryInfo?, enabled: Boolean = true, shape: Shape = MaterialTheme.shapes.medium, onClick: () -> Unit)","com.isakaro.kwik.ui.countrypicker.KwikCountryCodeButton"]},{"name":"fun KwikCountryCodeItem(country: KwikCountryInfo, showFlags: Boolean = true, onClick: () -> Unit)","description":"com.isakaro.kwik.ui.countrypicker.KwikCountryCodeItem","location":"kwik/com.isakaro.kwik.ui.countrypicker/-kwik-country-code-item.html","searchKeys":["KwikCountryCodeItem","fun KwikCountryCodeItem(country: KwikCountryInfo, showFlags: Boolean = true, onClick: () -> Unit)","com.isakaro.kwik.ui.countrypicker.KwikCountryCodeItem"]},{"name":"fun KwikCountryCodePicker(state: LazyListState, includeOnlyCountries: List<KwikCountry> = emptyList(), omitCountries: List<KwikCountry> = emptyList(), enableSearch: Boolean = true, noCountryFoundMessage: String = \"No country found\", onSelect: (KwikCountryInfo) -> Unit)","description":"com.isakaro.kwik.ui.countrypicker.KwikCountryCodePicker","location":"kwik/com.isakaro.kwik.ui.countrypicker/-kwik-country-code-picker.html","searchKeys":["KwikCountryCodePicker","fun KwikCountryCodePicker(state: LazyListState, includeOnlyCountries: List<KwikCountry> = emptyList(), omitCountries: List<KwikCountry> = emptyList(), enableSearch: Boolean = true, noCountryFoundMessage: String = \"No country found\", onSelect: (KwikCountryInfo) -> Unit)","com.isakaro.kwik.ui.countrypicker.KwikCountryCodePicker"]},{"name":"fun KwikCountryPicker(initialCountry: KwikCountry? = null, showFlags: Boolean = false, title: String = \"Select your country\", countryPicked: (KwikCountryInfo) -> Unit)","description":"com.isakaro.kwik.ui.countrypicker.KwikCountryPicker","location":"kwik/com.isakaro.kwik.ui.countrypicker/-kwik-country-picker.html","searchKeys":["KwikCountryPicker","fun KwikCountryPicker(initialCountry: KwikCountry? = null, showFlags: Boolean = false, title: String = \"Select your country\", countryPicked: (KwikCountryInfo) -> Unit)","com.isakaro.kwik.ui.countrypicker.KwikCountryPicker"]},{"name":"fun KwikCountryPickerDialog(open: Boolean, title: String, countryListState: LazyListState, onSelect: (KwikCountryInfo) -> Unit, onDismiss: () -> Unit)","description":"com.isakaro.kwik.ui.countrypicker.KwikCountryPickerDialog","location":"kwik/com.isakaro.kwik.ui.countrypicker/-kwik-country-picker-dialog.html","searchKeys":["KwikCountryPickerDialog","fun KwikCountryPickerDialog(open: Boolean, title: String, countryListState: LazyListState, onSelect: (KwikCountryInfo) -> Unit, onDismiss: () -> Unit)","com.isakaro.kwik.ui.countrypicker.KwikCountryPickerDialog"]},{"name":"fun KwikDateField(modifier: Modifier = Modifier, value: LocalDate? = null, onValidDate: (LocalDate) -> Unit, isError: Boolean = false, error: String = \"\", shape: Shape = MaterialTheme.shapes.small, colors: TextFieldColors = kwikTextFieldColors(), onKeyboardDone: () -> Unit = {})","description":"com.isakaro.kwik.ui.date.KwikDateField","location":"kwik/com.isakaro.kwik.ui.date/-kwik-date-field.html","searchKeys":["KwikDateField","fun KwikDateField(modifier: Modifier = Modifier, value: LocalDate? = null, onValidDate: (LocalDate) -> Unit, isError: Boolean = false, error: String = \"\", shape: Shape = MaterialTheme.shapes.small, colors: TextFieldColors = kwikTextFieldColors(), onKeyboardDone: () -> Unit = {})","com.isakaro.kwik.ui.date.KwikDateField"]},{"name":"fun KwikDateFieldButton(modifier: Modifier = Modifier, label: String? = null, placeholder: String = \"\", displayFormat: String = \"d MMM yyyy\", selected: (LocalDate) -> Unit, border: BorderStroke? = null, shape: Shape = MaterialTheme.shapes.medium, mode: KwikDatePickerMode = KwikDatePickerMode.Hybrid, leadingIcon: () -> Unit? = {\n        Icon(\n            painter = painterResource(id = R.drawable.calendar),\n            tint = MaterialTheme.colorScheme.onSurface,\n            contentDescription = null,\n        )\n    }, trailingIcon: () -> Unit? = {\n        Icon(\n            imageVector = Icons.Default.KeyboardArrowDown,\n            tint = MaterialTheme.colorScheme.onSurface,\n            contentDescription = null,\n        )\n    })","description":"com.isakaro.kwik.ui.date.KwikDateFieldButton","location":"kwik/com.isakaro.kwik.ui.date/-kwik-date-field-button.html","searchKeys":["KwikDateFieldButton","fun KwikDateFieldButton(modifier: Modifier = Modifier, label: String? = null, placeholder: String = \"\", displayFormat: String = \"d MMM yyyy\", selected: (LocalDate) -> Unit, border: BorderStroke? = null, shape: Shape = MaterialTheme.shapes.medium, mode: KwikDatePickerMode = KwikDatePickerMode.Hybrid, leadingIcon: () -> Unit? = {\n        Icon(\n            painter = painterResource(id = R.drawable.calendar),\n            tint = MaterialTheme.colorScheme.onSurface,\n            contentDescription = null,\n        )\n    }, trailingIcon: () -> Unit? = {\n        Icon(\n            imageVector = Icons.Default.KeyboardArrowDown,\n            tint = MaterialTheme.colorScheme.onSurface,\n            contentDescription = null,\n        )\n    })","com.isakaro.kwik.ui.date.KwikDateFieldButton"]},{"name":"fun KwikDatePickerDialog(title: String = \"Select date\", confirmText: String = \"Confirm\", cancelText: String = \"Cancel\", minSelectableDate: Long? = null, maxSelectableDate: Long? = null, onDateSelected: (LocalDate) -> Unit, showModeToggle: Boolean = false, confirmOnSelection: Boolean = true, colors: DatePickerColors = kwikDatePickerColors(), shape: Shape = MaterialTheme.shapes.medium, onDismiss: () -> Unit)","description":"com.isakaro.kwik.ui.date.KwikDatePickerDialog","location":"kwik/com.isakaro.kwik.ui.date/-kwik-date-picker-dialog.html","searchKeys":["KwikDatePickerDialog","fun KwikDatePickerDialog(title: String = \"Select date\", confirmText: String = \"Confirm\", cancelText: String = \"Cancel\", minSelectableDate: Long? = null, maxSelectableDate: Long? = null, onDateSelected: (LocalDate) -> Unit, showModeToggle: Boolean = false, confirmOnSelection: Boolean = true, colors: DatePickerColors = kwikDatePickerColors(), shape: Shape = MaterialTheme.shapes.medium, onDismiss: () -> Unit)","com.isakaro.kwik.ui.date.KwikDatePickerDialog"]},{"name":"fun KwikDateRangeButton(modifier: Modifier = Modifier, label: String? = null, onDateRangeSelected: (Pair<LocalDate, LocalDate>) -> Unit, minSelectableDate: Long? = null, maxSelectableDate: Long? = null, showModeToggle: Boolean = false, dialogShape: Shape = MaterialTheme.shapes.medium, colors: DatePickerColors = kwikDatePickerColors(), onClick: () -> Unit = {}, border: BorderStroke? = null, shape: Shape = MaterialTheme.shapes.medium, datePlaceholder: String = \"Select dates\", leadingIcon: () -> Unit? = {\n        Icon(\n            painter = painterResource(id = R.drawable.calendar),\n            tint = MaterialTheme.colorScheme.onSurface,\n            contentDescription = null,\n        )\n    }, trailingIcon: () -> Unit? = {\n        Icon(\n            imageVector = Icons.Default.KeyboardArrowDown,\n            tint = MaterialTheme.colorScheme.onSurface,\n            contentDescription = null,\n        )\n    })","description":"com.isakaro.kwik.ui.date.KwikDateRangeButton","location":"kwik/com.isakaro.kwik.ui.date/-kwik-date-range-button.html","searchKeys":["KwikDateRangeButton","fun KwikDateRangeButton(modifier: Modifier = Modifier, label: String? = null, onDateRangeSelected: (Pair<LocalDate, LocalDate>) -> Unit, minSelectableDate: Long? = null, maxSelectableDate: Long? = null, showModeToggle: Boolean = false, dialogShape: Shape = MaterialTheme.shapes.medium, colors: DatePickerColors = kwikDatePickerColors(), onClick: () -> Unit = {}, border: BorderStroke? = null, shape: Shape = MaterialTheme.shapes.medium, datePlaceholder: String = \"Select dates\", leadingIcon: () -> Unit? = {\n        Icon(\n            painter = painterResource(id = R.drawable.calendar),\n            tint = MaterialTheme.colorScheme.onSurface,\n            contentDescription = null,\n        )\n    }, trailingIcon: () -> Unit? = {\n        Icon(\n            imageVector = Icons.Default.KeyboardArrowDown,\n            tint = MaterialTheme.colorScheme.onSurface,\n            contentDescription = null,\n        )\n    })","com.isakaro.kwik.ui.date.KwikDateRangeButton"]},{"name":"fun KwikDateRangePickerDialog(title: String = \"Select date range\", confirmText: String = \"Confirm\", cancelText: String = \"Cancel\", minSelectableDate: Long? = null, maxSelectableDate: Long? = null, onDateRangeSelected: (Pair<LocalDate, LocalDate>) -> Unit, showModeToggle: Boolean = false, colors: DatePickerColors = kwikDatePickerColors(), shape: Shape = MaterialTheme.shapes.medium, onDismiss: () -> Unit)","description":"com.isakaro.kwik.ui.date.KwikDateRangePickerDialog","location":"kwik/com.isakaro.kwik.ui.date/-kwik-date-range-picker-dialog.html","searchKeys":["KwikDateRangePickerDialog","fun KwikDateRangePickerDialog(title: String = \"Select date range\", confirmText: String = \"Confirm\", cancelText: String = \"Cancel\", minSelectableDate: Long? = null, maxSelectableDate: Long? = null, onDateRangeSelected: (Pair<LocalDate, LocalDate>) -> Unit, showModeToggle: Boolean = false, colors: DatePickerColors = kwikDatePickerColors(), shape: Shape = MaterialTheme.shapes.medium, onDismiss: () -> Unit)","com.isakaro.kwik.ui.date.KwikDateRangePickerDialog"]},{"name":"fun KwikDropDownButton(modifier: Modifier = Modifier, label: String = \"\", text: String, leadingIcon: Any? = null, onClick: () -> Unit)","description":"com.isakaro.kwik.ui.dropdown.KwikDropDownButton","location":"kwik/com.isakaro.kwik.ui.dropdown/-kwik-drop-down-button.html","searchKeys":["KwikDropDownButton","fun KwikDropDownButton(modifier: Modifier = Modifier, label: String = \"\", text: String, leadingIcon: Any? = null, onClick: () -> Unit)","com.isakaro.kwik.ui.dropdown.KwikDropDownButton"]},{"name":"fun KwikDropdown(state: Boolean, shape: Shape = MaterialTheme.shapes.medium, onDismissRequest: () -> Unit, items: List<KwikDropdownItemActionState>)","description":"com.isakaro.kwik.ui.dropdown.KwikDropdown","location":"kwik/com.isakaro.kwik.ui.dropdown/-kwik-dropdown.html","searchKeys":["KwikDropdown","fun KwikDropdown(state: Boolean, shape: Shape = MaterialTheme.shapes.medium, onDismissRequest: () -> Unit, items: List<KwikDropdownItemActionState>)","com.isakaro.kwik.ui.dropdown.KwikDropdown"]},{"name":"fun KwikExpandableText(modifier: Modifier = Modifier, text: String, maxLines: Int = 4, color: Color = MaterialTheme.colorScheme.onSurface, style: TextStyle = MaterialTheme.typography.bodyLarge, readMoreText: String = \"Read More\", showLessText: String = \"Show Less\")","description":"com.isakaro.kwik.ui.text.KwikExpandableText","location":"kwik/com.isakaro.kwik.ui.text/-kwik-expandable-text.html","searchKeys":["KwikExpandableText","fun KwikExpandableText(modifier: Modifier = Modifier, text: String, maxLines: Int = 4, color: Color = MaterialTheme.colorScheme.onSurface, style: TextStyle = MaterialTheme.typography.bodyLarge, readMoreText: String = \"Read More\", showLessText: String = \"Show Less\")","com.isakaro.kwik.ui.text.KwikExpandableText"]},{"name":"fun KwikExtendedFloatingActionButton(modifier: Modifier = Modifier, text: () -> Unit, contentColor: Color = MaterialTheme.colorScheme.onPrimary, containerColor: Color = MaterialTheme.colorScheme.primary, shape: Shape = FloatingActionButtonDefaults.extendedFabShape, elevation: FloatingActionButtonElevation = FloatingActionButtonDefaults.elevation(), interactionSource: MutableInteractionSource? = null, icon: () -> Unit = {}, loading: Boolean = false, loadingText: String? = null, expanded: Boolean = true, enabled: Boolean = true, onClick: () -> Unit)","description":"com.isakaro.kwik.ui.button.KwikExtendedFloatingActionButton","location":"kwik/com.isakaro.kwik.ui.button/-kwik-extended-floating-action-button.html","searchKeys":["KwikExtendedFloatingActionButton","fun KwikExtendedFloatingActionButton(modifier: Modifier = Modifier, text: () -> Unit, contentColor: Color = MaterialTheme.colorScheme.onPrimary, containerColor: Color = MaterialTheme.colorScheme.primary, shape: Shape = FloatingActionButtonDefaults.extendedFabShape, elevation: FloatingActionButtonElevation = FloatingActionButtonDefaults.elevation(), interactionSource: MutableInteractionSource? = null, icon: () -> Unit = {}, loading: Boolean = false, loadingText: String? = null, expanded: Boolean = true, enabled: Boolean = true, onClick: () -> Unit)","com.isakaro.kwik.ui.button.KwikExtendedFloatingActionButton"]},{"name":"fun KwikFloatingActionButton(modifier: Modifier = Modifier, contentColor: Color = MaterialTheme.colorScheme.onPrimary, containerColor: Color = MaterialTheme.colorScheme.primary, shape: Shape = FloatingActionButtonDefaults.extendedFabShape, elevation: FloatingActionButtonElevation = FloatingActionButtonDefaults.elevation(), interactionSource: MutableInteractionSource = remember { MutableInteractionSource() }, loading: Boolean = false, loadingText: String? = null, enabled: Boolean = true, onClick: () -> Unit, content: () -> Unit)","description":"com.isakaro.kwik.ui.button.KwikFloatingActionButton","location":"kwik/com.isakaro.kwik.ui.button/-kwik-floating-action-button.html","searchKeys":["KwikFloatingActionButton","fun KwikFloatingActionButton(modifier: Modifier = Modifier, contentColor: Color = MaterialTheme.colorScheme.onPrimary, containerColor: Color = MaterialTheme.colorScheme.primary, shape: Shape = FloatingActionButtonDefaults.extendedFabShape, elevation: FloatingActionButtonElevation = FloatingActionButtonDefaults.elevation(), interactionSource: MutableInteractionSource = remember { MutableInteractionSource() }, loading: Boolean = false, loadingText: String? = null, enabled: Boolean = true, onClick: () -> Unit, content: () -> Unit)","com.isakaro.kwik.ui.button.KwikFloatingActionButton"]},{"name":"fun KwikGrid(modifier: Modifier = Modifier, cols: Int = 1, rows: Int = 1, gap: Int = 4, items: List<KwikDiv>)","description":"com.isakaro.kwik.ui.grid.KwikGrid","location":"kwik/com.isakaro.kwik.ui.grid/-kwik-grid.html","searchKeys":["KwikGrid","fun KwikGrid(modifier: Modifier = Modifier, cols: Int = 1, rows: Int = 1, gap: Int = 4, items: List<KwikDiv>)","com.isakaro.kwik.ui.grid.KwikGrid"]},{"name":"fun KwikHSpacer(width: Int)","description":"com.isakaro.kwik.ui.spacer.KwikHSpacer","location":"kwik/com.isakaro.kwik.ui.spacer/-kwik-h-spacer.html","searchKeys":["KwikHSpacer","fun KwikHSpacer(width: Int)","com.isakaro.kwik.ui.spacer.KwikHSpacer"]},{"name":"fun KwikHorizontalTabs(tabs: List<KwikTabItem>, pagerState: PagerState, containerColor: Color = MaterialTheme.colorScheme.surface, indicatorColor: Color = MaterialTheme.colorScheme.primary, kwikIndicatorProps: KwikIndicatorProps = KwikIndicatorProps(), divider: () -> Unit = {}, selectedContentColor: Color = MaterialTheme.colorScheme.primary, unselectedContentColor: Color = Color.Gray)","description":"com.isakaro.kwik.ui.tabs.KwikHorizontalTabs","location":"kwik/com.isakaro.kwik.ui.tabs/-kwik-horizontal-tabs.html","searchKeys":["KwikHorizontalTabs","fun KwikHorizontalTabs(tabs: List<KwikTabItem>, pagerState: PagerState, containerColor: Color = MaterialTheme.colorScheme.surface, indicatorColor: Color = MaterialTheme.colorScheme.primary, kwikIndicatorProps: KwikIndicatorProps = KwikIndicatorProps(), divider: () -> Unit = {}, selectedContentColor: Color = MaterialTheme.colorScheme.primary, unselectedContentColor: Color = Color.Gray)","com.isakaro.kwik.ui.tabs.KwikHorizontalTabs"]},{"name":"fun KwikIconButton(modifier: Modifier = Modifier, icon: () -> Unit, containerColor: Color = MaterialTheme.colorScheme.primary, onClick: () -> Unit)","description":"com.isakaro.kwik.ui.button.KwikIconButton","location":"kwik/com.isakaro.kwik.ui.button/-kwik-icon-button.html","searchKeys":["KwikIconButton","fun KwikIconButton(modifier: Modifier = Modifier, icon: () -> Unit, containerColor: Color = MaterialTheme.colorScheme.primary, onClick: () -> Unit)","com.isakaro.kwik.ui.button.KwikIconButton"]},{"name":"fun KwikIconButton(modifier: Modifier = Modifier, icon: Any, containerColor: Color = MaterialTheme.colorScheme.primary, tint: Color = MaterialTheme.colorScheme.onPrimary, onClick: () -> Unit)","description":"com.isakaro.kwik.ui.button.KwikIconButton","location":"kwik/com.isakaro.kwik.ui.button/-kwik-icon-button.html","searchKeys":["KwikIconButton","fun KwikIconButton(modifier: Modifier = Modifier, icon: Any, containerColor: Color = MaterialTheme.colorScheme.primary, tint: Color = MaterialTheme.colorScheme.onPrimary, onClick: () -> Unit)","com.isakaro.kwik.ui.button.KwikIconButton"]},{"name":"fun KwikImageCard(modifier: Modifier = Modifier, containerColor: Color = MaterialTheme.colorScheme.surface, shape: Shape = MaterialTheme.shapes.medium, image: Any, imageHeight: Int = 2, title: String? = null, elevation: CardElevation = CardDefaults.cardElevation(defaultElevation = 2.dp), onClick: () -> Unit = {}, content: () -> Unit = {})","description":"com.isakaro.kwik.ui.card.KwikImageCard","location":"kwik/com.isakaro.kwik.ui.card/-kwik-image-card.html","searchKeys":["KwikImageCard","fun KwikImageCard(modifier: Modifier = Modifier, containerColor: Color = MaterialTheme.colorScheme.surface, shape: Shape = MaterialTheme.shapes.medium, image: Any, imageHeight: Int = 2, title: String? = null, elevation: CardElevation = CardDefaults.cardElevation(defaultElevation = 2.dp), onClick: () -> Unit = {}, content: () -> Unit = {})","com.isakaro.kwik.ui.card.KwikImageCard"]},{"name":"fun KwikImageCardHorizontal(modifier: Modifier = Modifier, containerColor: Color = MaterialTheme.colorScheme.surface, shape: Shape = MaterialTheme.shapes.medium, image: Any, elevation: CardElevation = CardDefaults.cardElevation(defaultElevation = 2.dp), onClick: () -> Unit = {}, content: () -> Unit = {})","description":"com.isakaro.kwik.ui.card.KwikImageCardHorizontal","location":"kwik/com.isakaro.kwik.ui.card/-kwik-image-card-horizontal.html","searchKeys":["KwikImageCardHorizontal","fun KwikImageCardHorizontal(modifier: Modifier = Modifier, containerColor: Color = MaterialTheme.colorScheme.surface, shape: Shape = MaterialTheme.shapes.medium, image: Any, elevation: CardElevation = CardDefaults.cardElevation(defaultElevation = 2.dp), onClick: () -> Unit = {}, content: () -> Unit = {})","com.isakaro.kwik.ui.card.KwikImageCardHorizontal"]},{"name":"fun KwikImageCarousel(modifier: Modifier = Modifier, state: MutableState<KwikCarouselState>, images: List<Any>, initialIndex: Int = 0, showIndicators: Boolean = true, showNavigation: Boolean = true, userScrollEnabled: Boolean = true, showCounter: Boolean = true, selectedIndicatorColor: Color = Color.White, unselectedIndicatorColor: Color = MaterialTheme.colorScheme.onSurface.copy(alpha = 0.5f), indicatorContainerColor: Color = MaterialTheme.colorScheme.surface.copy(alpha = 0.5f), autoPlay: Boolean = false, autoPlayDelay: Long = 4000, onPageIndexChange: (Int) -> Unit = {}, shape: Shape = MaterialTheme.shapes.large, prevButton: () -> Unit? = null, nextButton: () -> Unit? = null, onClick: () -> Unit = {}, contentScale: ContentScale = ContentScale.Crop)","description":"com.isakaro.kwik.ui.carousel.KwikImageCarousel","location":"kwik/com.isakaro.kwik.ui.carousel/-kwik-image-carousel.html","searchKeys":["KwikImageCarousel","fun KwikImageCarousel(modifier: Modifier = Modifier, state: MutableState<KwikCarouselState>, images: List<Any>, initialIndex: Int = 0, showIndicators: Boolean = true, showNavigation: Boolean = true, userScrollEnabled: Boolean = true, showCounter: Boolean = true, selectedIndicatorColor: Color = Color.White, unselectedIndicatorColor: Color = MaterialTheme.colorScheme.onSurface.copy(alpha = 0.5f), indicatorContainerColor: Color = MaterialTheme.colorScheme.surface.copy(alpha = 0.5f), autoPlay: Boolean = false, autoPlayDelay: Long = 4000, onPageIndexChange: (Int) -> Unit = {}, shape: Shape = MaterialTheme.shapes.large, prevButton: () -> Unit? = null, nextButton: () -> Unit? = null, onClick: () -> Unit = {}, contentScale: ContentScale = ContentScale.Crop)","com.isakaro.kwik.ui.carousel.KwikImageCarousel"]},{"name":"fun KwikImageLoader(modifier: Modifier = Modifier, url: Any, shape: Shape? = null, placeholder: Int = R.drawable.ic_placeholder, contentDescription: String? = null, contentScale: ContentScale = ContentScale.Crop, loading: () -> Unit = {}, success: () -> Unit = {}, error: () -> Unit = {}, colorFilter: ColorFilter? = null, onClick: () -> Unit = {})","description":"com.isakaro.kwik.ui.image.KwikImageLoader","location":"kwik/com.isakaro.kwik.ui.image/-kwik-image-loader.html","searchKeys":["KwikImageLoader","fun KwikImageLoader(modifier: Modifier = Modifier, url: Any, shape: Shape? = null, placeholder: Int = R.drawable.ic_placeholder, contentDescription: String? = null, contentScale: ContentScale = ContentScale.Crop, loading: () -> Unit = {}, success: () -> Unit = {}, error: () -> Unit = {}, colorFilter: ColorFilter? = null, onClick: () -> Unit = {})","com.isakaro.kwik.ui.image.KwikImageLoader"]},{"name":"fun KwikImageView(modifier: Modifier = Modifier, url: Any, tint: Color = Color.Unspecified, contentScale: ContentScale = ContentScale.Crop, contentDescription: String? = null, shape: Shape? = null)","description":"com.isakaro.kwik.ui.image.KwikImageView","location":"kwik/com.isakaro.kwik.ui.image/-kwik-image-view.html","searchKeys":["KwikImageView","fun KwikImageView(modifier: Modifier = Modifier, url: Any, tint: Color = Color.Unspecified, contentScale: ContentScale = ContentScale.Crop, contentDescription: String? = null, shape: Shape? = null)","com.isakaro.kwik.ui.image.KwikImageView"]},{"name":"fun KwikLazyList(modifier: Modifier = Modifier, state: LazyListState, contentPadding: PaddingValues = PaddingValues(0.dp), items: List<KwikListItemActionState>, showDivider: Boolean = true)","description":"com.isakaro.kwik.ui.list.KwikLazyList","location":"kwik/com.isakaro.kwik.ui.list/-kwik-lazy-list.html","searchKeys":["KwikLazyList","fun KwikLazyList(modifier: Modifier = Modifier, state: LazyListState, contentPadding: PaddingValues = PaddingValues(0.dp), items: List<KwikListItemActionState>, showDivider: Boolean = true)","com.isakaro.kwik.ui.list.KwikLazyList"]},{"name":"fun KwikLineStepper(state: MutableState<KwikStepperState>, modifier: Modifier = Modifier, activeStepColor: Color = MaterialTheme.colorScheme.primary)","description":"com.isakaro.kwik.ui.stepper.KwikLineStepper","location":"kwik/com.isakaro.kwik.ui.stepper/-kwik-line-stepper.html","searchKeys":["KwikLineStepper","fun KwikLineStepper(state: MutableState<KwikStepperState>, modifier: Modifier = Modifier, activeStepColor: Color = MaterialTheme.colorScheme.primary)","com.isakaro.kwik.ui.stepper.KwikLineStepper"]},{"name":"fun KwikLinearLoading(modifier: Modifier = Modifier, color: Color = MaterialTheme.colorScheme.primary, trackColor: Color = Color.Transparent)","description":"com.isakaro.kwik.ui.loading.KwikLinearLoading","location":"kwik/com.isakaro.kwik.ui.loading/-kwik-linear-loading.html","searchKeys":["KwikLinearLoading","fun KwikLinearLoading(modifier: Modifier = Modifier, color: Color = MaterialTheme.colorScheme.primary, trackColor: Color = Color.Transparent)","com.isakaro.kwik.ui.loading.KwikLinearLoading"]},{"name":"fun KwikListActionItem(item: KwikListItemAction, isLastItem: Boolean = false, showDivider: Boolean = true, onClick: () -> Unit)","description":"com.isakaro.kwik.ui.list.KwikListActionItem","location":"kwik/com.isakaro.kwik.ui.list/-kwik-list-action-item.html","searchKeys":["KwikListActionItem","fun KwikListActionItem(item: KwikListItemAction, isLastItem: Boolean = false, showDivider: Boolean = true, onClick: () -> Unit)","com.isakaro.kwik.ui.list.KwikListActionItem"]},{"name":"fun KwikLoadingView(text: String)","description":"com.isakaro.kwik.ui.loading.KwikLoadingView","location":"kwik/com.isakaro.kwik.ui.loading/-kwik-loading-view.html","searchKeys":["KwikLoadingView","fun KwikLoadingView(text: String)","com.isakaro.kwik.ui.loading.KwikLoadingView"]},{"name":"fun KwikNetworkStateView(networkState: KwikNetworkUtils.NetworkState, modifier: Modifier = Modifier)","description":"com.isakaro.kwik.ui.helpers.KwikNetworkStateView","location":"kwik/com.isakaro.kwik.ui.helpers/-kwik-network-state-view.html","searchKeys":["KwikNetworkStateView","fun KwikNetworkStateView(networkState: KwikNetworkUtils.NetworkState, modifier: Modifier = Modifier)","com.isakaro.kwik.ui.helpers.KwikNetworkStateView"]},{"name":"fun KwikOTP(modifier: Modifier = Modifier, onValidOTP: (TextFieldValue) -> Unit, size: Int = 6, isError: Boolean = false, error: String, visualTransformation: VisualTransformation = VisualTransformation.None, clearAll: Boolean = false, shape: Shape = MaterialTheme.shapes.small, colors: TextFieldColors = kwikTextFieldColors(), onKeyboardDone: () -> Unit = {  })","description":"com.isakaro.kwik.ui.inputfields.KwikOTP","location":"kwik/com.isakaro.kwik.ui.inputfields/-kwik-o-t-p.html","searchKeys":["KwikOTP","fun KwikOTP(modifier: Modifier = Modifier, onValidOTP: (TextFieldValue) -> Unit, size: Int = 6, isError: Boolean = false, error: String, visualTransformation: VisualTransformation = VisualTransformation.None, clearAll: Boolean = false, shape: Shape = MaterialTheme.shapes.small, colors: TextFieldColors = kwikTextFieldColors(), onKeyboardDone: () -> Unit = {  })","com.isakaro.kwik.ui.inputfields.KwikOTP"]},{"name":"fun KwikOutlinedOTP(onValidOTP: (TextFieldValue) -> Unit, size: Int = 6, isError: Boolean = false, error: String, visualTransformation: VisualTransformation = VisualTransformation.None, clearAll: Boolean = false, shape: Shape = MaterialTheme.shapes.small, colors: TextFieldColors = kwikOutlinedTextFieldColors(), onKeyboardDone: () -> Unit = {  })","description":"com.isakaro.kwik.ui.inputfields.KwikOutlinedOTP","location":"kwik/com.isakaro.kwik.ui.inputfields/-kwik-outlined-o-t-p.html","searchKeys":["KwikOutlinedOTP","fun KwikOutlinedOTP(onValidOTP: (TextFieldValue) -> Unit, size: Int = 6, isError: Boolean = false, error: String, visualTransformation: VisualTransformation = VisualTransformation.None, clearAll: Boolean = false, shape: Shape = MaterialTheme.shapes.small, colors: TextFieldColors = kwikOutlinedTextFieldColors(), onKeyboardDone: () -> Unit = {  })","com.isakaro.kwik.ui.inputfields.KwikOutlinedOTP"]},{"name":"fun KwikOutlinedPhoneNumberField(modifier: Modifier = Modifier, value: MutableState<TextFieldValue>, onValueChange: (TextFieldValue) -> Unit, onKeyboardDone: () -> Unit = {  }, label: String? = null, shape: Shape = MaterialTheme.shapes.medium, isError: Boolean = false, error: String = \"\", singleLine: Boolean = true, maxLines: Int = 1, imeAction: ImeAction = ImeAction.Done, initialCountryInfo: KwikCountryInfo, isValid: Boolean = false, enabled: Boolean = true, countrySelectable: Boolean = true, colors: TextFieldColors = kwikOutlinedTextFieldColors(enabled), onCountrySelected: (KwikCountryInfo) -> Unit = {}, countryPickerTitle: String = \"Where are you from?\", showFlags: Boolean = false, showCountryCode: Boolean = false, showDialingCode: Boolean = true)","description":"com.isakaro.kwik.ui.inputfields.KwikOutlinedPhoneNumberField","location":"kwik/com.isakaro.kwik.ui.inputfields/-kwik-outlined-phone-number-field.html","searchKeys":["KwikOutlinedPhoneNumberField","fun KwikOutlinedPhoneNumberField(modifier: Modifier = Modifier, value: MutableState<TextFieldValue>, onValueChange: (TextFieldValue) -> Unit, onKeyboardDone: () -> Unit = {  }, label: String? = null, shape: Shape = MaterialTheme.shapes.medium, isError: Boolean = false, error: String = \"\", singleLine: Boolean = true, maxLines: Int = 1, imeAction: ImeAction = ImeAction.Done, initialCountryInfo: KwikCountryInfo, isValid: Boolean = false, enabled: Boolean = true, countrySelectable: Boolean = true, colors: TextFieldColors = kwikOutlinedTextFieldColors(enabled), onCountrySelected: (KwikCountryInfo) -> Unit = {}, countryPickerTitle: String = \"Where are you from?\", showFlags: Boolean = false, showCountryCode: Boolean = false, showDialingCode: Boolean = true)","com.isakaro.kwik.ui.inputfields.KwikOutlinedPhoneNumberField"]},{"name":"fun KwikOutlinedTextField(modifier: Modifier = Modifier, value: MutableState<TextFieldValue>, onValueChange: (TextFieldValue) -> Unit, onKeyboardDone: () -> Unit = {  }, onActionClick: () -> Unit = {  }, onFocusChanged: (Boolean) -> Unit = {  }, visualTransformation: VisualTransformation = VisualTransformation.None, isEditable: Boolean = true, placeholder: String, shape: Shape = MaterialTheme.shapes.medium, isError: Boolean = false, error: String = \"Field is required\", singleLine: Boolean = true, maxLength: Int = 65, keyboardType: KeyboardType = KeyboardType.Text, keyboardActions: KeyboardActions = KeyboardActions(\n        onDone = {\n            onKeyboardDone()\n        }\n    ), maxLines: Int = 1, allowedChars: Regex? = AllowedChars.ALL, imeAction: ImeAction = ImeAction.Done, isValid: Boolean = false, isTextCounterShown: Boolean = false, hint: Any? = null, hintVisibleOnError: Boolean = false, leadingIcon: Any? = null, trailingIcon: Any? = null, showClearTextButton: Boolean = false, isLoading: Boolean = false, isBigTextField: Boolean = false, enabled: Boolean = true, textStyle: TextStyle = MaterialTheme.typography.bodyMedium, suggestionsModifier: Modifier = Modifier, onSuggestionSelected: (String) -> Unit = {}, suggestions: List<String> = listOf(), suggestionsContainerColor: Color = MaterialTheme.colorScheme.surface, delay: Boolean = false, delayDuration: Long = 500, colors: TextFieldColors = kwikOutlinedTextFieldColors(enabled))","description":"com.isakaro.kwik.ui.inputfields.KwikOutlinedTextField","location":"kwik/com.isakaro.kwik.ui.inputfields/-kwik-outlined-text-field.html","searchKeys":["KwikOutlinedTextField","fun KwikOutlinedTextField(modifier: Modifier = Modifier, value: MutableState<TextFieldValue>, onValueChange: (TextFieldValue) -> Unit, onKeyboardDone: () -> Unit = {  }, onActionClick: () -> Unit = {  }, onFocusChanged: (Boolean) -> Unit = {  }, visualTransformation: VisualTransformation = VisualTransformation.None, isEditable: Boolean = true, placeholder: String, shape: Shape = MaterialTheme.shapes.medium, isError: Boolean = false, error: String = \"Field is required\", singleLine: Boolean = true, maxLength: Int = 65, keyboardType: KeyboardType = KeyboardType.Text, keyboardActions: KeyboardActions = KeyboardActions(\n        onDone = {\n            onKeyboardDone()\n        }\n    ), maxLines: Int = 1, allowedChars: Regex? = AllowedChars.ALL, imeAction: ImeAction = ImeAction.Done, isValid: Boolean = false, isTextCounterShown: Boolean = false, hint: Any? = null, hintVisibleOnError: Boolean = false, leadingIcon: Any? = null, trailingIcon: Any? = null, showClearTextButton: Boolean = false, isLoading: Boolean = false, isBigTextField: Boolean = false, enabled: Boolean = true, textStyle: TextStyle = MaterialTheme.typography.bodyMedium, suggestionsModifier: Modifier = Modifier, onSuggestionSelected: (String) -> Unit = {}, suggestions: List<String> = listOf(), suggestionsContainerColor: Color = MaterialTheme.colorScheme.surface, delay: Boolean = false, delayDuration: Long = 500, colors: TextFieldColors = kwikOutlinedTextFieldColors(enabled))","com.isakaro.kwik.ui.inputfields.KwikOutlinedTextField"]},{"name":"fun KwikPasswordRequirementsView(modifier: Modifier = Modifier, requirements: Map<KwikPasswordRequirementType, PasswordRequirement>, formSubmitAttempted: Boolean)","description":"com.isakaro.kwik.ui.form.KwikPasswordRequirementsView","location":"kwik/com.isakaro.kwik.ui.form/-kwik-password-requirements-view.html","searchKeys":["KwikPasswordRequirementsView","fun KwikPasswordRequirementsView(modifier: Modifier = Modifier, requirements: Map<KwikPasswordRequirementType, PasswordRequirement>, formSubmitAttempted: Boolean)","com.isakaro.kwik.ui.form.KwikPasswordRequirementsView"]},{"name":"fun KwikPermissionsRequest(state: KwikPermissionRequest, permissions: List<KwikPermissionDto>, title: String, deniedPermanentlyMessage: String = \"Permission required. Go to settings to enable\", logo: () -> Unit = {}, image: () -> Unit = {}, onGrantAction: () -> Unit = {}, onDeniedAction: () -> Unit = {}, onCancel: () -> Unit = {}, mandatory: Boolean = false, acceptText: String = \"Enable\", cancelText: String = \"Cancel\", content: () -> Unit? = null)","description":"com.isakaro.kwik.ui.permissions.KwikPermissionsRequest","location":"kwik/com.isakaro.kwik.ui.permissions/-kwik-permissions-request.html","searchKeys":["KwikPermissionsRequest","fun KwikPermissionsRequest(state: KwikPermissionRequest, permissions: List<KwikPermissionDto>, title: String, deniedPermanentlyMessage: String = \"Permission required. Go to settings to enable\", logo: () -> Unit = {}, image: () -> Unit = {}, onGrantAction: () -> Unit = {}, onDeniedAction: () -> Unit = {}, onCancel: () -> Unit = {}, mandatory: Boolean = false, acceptText: String = \"Enable\", cancelText: String = \"Cancel\", content: () -> Unit? = null)","com.isakaro.kwik.ui.permissions.KwikPermissionsRequest"]},{"name":"fun KwikPhoneNumberField(modifier: Modifier = Modifier, value: MutableState<TextFieldValue>, onValueChange: (TextFieldValue) -> Unit, onKeyboardDone: () -> Unit = {  }, label: String? = null, shape: Shape = MaterialTheme.shapes.medium, isError: Boolean = false, error: String = \"\", singleLine: Boolean = true, maxLines: Int = 1, imeAction: ImeAction = ImeAction.Done, initialCountryInfo: KwikCountryInfo, isValid: Boolean = false, enabled: Boolean = true, countrySelectable: Boolean = true, colors: TextFieldColors = kwikTextFieldColors(), onCountrySelected: (KwikCountryInfo) -> Unit = {}, countryPickerTitle: String = \"Where are you from?\", showFlags: Boolean = false, showCountryCode: Boolean = false, showDialingCode: Boolean = true)","description":"com.isakaro.kwik.ui.inputfields.KwikPhoneNumberField","location":"kwik/com.isakaro.kwik.ui.inputfields/-kwik-phone-number-field.html","searchKeys":["KwikPhoneNumberField","fun KwikPhoneNumberField(modifier: Modifier = Modifier, value: MutableState<TextFieldValue>, onValueChange: (TextFieldValue) -> Unit, onKeyboardDone: () -> Unit = {  }, label: String? = null, shape: Shape = MaterialTheme.shapes.medium, isError: Boolean = false, error: String = \"\", singleLine: Boolean = true, maxLines: Int = 1, imeAction: ImeAction = ImeAction.Done, initialCountryInfo: KwikCountryInfo, isValid: Boolean = false, enabled: Boolean = true, countrySelectable: Boolean = true, colors: TextFieldColors = kwikTextFieldColors(), onCountrySelected: (KwikCountryInfo) -> Unit = {}, countryPickerTitle: String = \"Where are you from?\", showFlags: Boolean = false, showCountryCode: Boolean = false, showDialingCode: Boolean = true)","com.isakaro.kwik.ui.inputfields.KwikPhoneNumberField"]},{"name":"fun KwikRadioButton(text: String, selected: Boolean, onClick: (Boolean) -> Unit)","description":"com.isakaro.kwik.ui.radio.KwikRadioButton","location":"kwik/com.isakaro.kwik.ui.radio/-kwik-radio-button.html","searchKeys":["KwikRadioButton","fun KwikRadioButton(text: String, selected: Boolean, onClick: (Boolean) -> Unit)","com.isakaro.kwik.ui.radio.KwikRadioButton"]},{"name":"fun KwikRangeSlider(modifier: Modifier = Modifier, value: ClosedFloatingPointRange<Float>, onValueChange: (ClosedFloatingPointRange<Float>) -> Unit, valueRange: ClosedFloatingPointRange<Float> = 0f..100f, steps: Int = 99, enabled: Boolean = true, startThumb: () -> Unit = {\n        SliderDefaults.Thumb(\n            interactionSource = remember { MutableInteractionSource() },\n            thumbSize = DpSize(10.dp, 25.dp)\n        )\n    }, endThumb: () -> Unit = {\n        SliderDefaults.Thumb(\n            interactionSource = remember { MutableInteractionSource() },\n            thumbSize = DpSize(10.dp, 25.dp)\n        )\n    }, track: (RangeSliderState) -> Unit = { rangeSliderState ->\n        SliderDefaults.Track(\n            rangeSliderState = rangeSliderState,\n            modifier = Modifier.height(6.dp),\n            thumbTrackGapSize = 0.dp,\n            colors = SliderDefaults.colors(\n                activeTrackColor = MaterialTheme.colorScheme.primary,\n                inactiveTrackColor = Color.LightGray,\n                activeTickColor = Color.Transparent,\n                inactiveTickColor = Color.Transparent\n            )\n        )\n    })","description":"com.isakaro.kwik.ui.slider.KwikRangeSlider","location":"kwik/com.isakaro.kwik.ui.slider/-kwik-range-slider.html","searchKeys":["KwikRangeSlider","fun KwikRangeSlider(modifier: Modifier = Modifier, value: ClosedFloatingPointRange<Float>, onValueChange: (ClosedFloatingPointRange<Float>) -> Unit, valueRange: ClosedFloatingPointRange<Float> = 0f..100f, steps: Int = 99, enabled: Boolean = true, startThumb: () -> Unit = {\n        SliderDefaults.Thumb(\n            interactionSource = remember { MutableInteractionSource() },\n            thumbSize = DpSize(10.dp, 25.dp)\n        )\n    }, endThumb: () -> Unit = {\n        SliderDefaults.Thumb(\n            interactionSource = remember { MutableInteractionSource() },\n            thumbSize = DpSize(10.dp, 25.dp)\n        )\n    }, track: (RangeSliderState) -> Unit = { rangeSliderState ->\n        SliderDefaults.Track(\n            rangeSliderState = rangeSliderState,\n            modifier = Modifier.height(6.dp),\n            thumbTrackGapSize = 0.dp,\n            colors = SliderDefaults.colors(\n                activeTrackColor = MaterialTheme.colorScheme.primary,\n                inactiveTrackColor = Color.LightGray,\n                activeTickColor = Color.Transparent,\n                inactiveTickColor = Color.Transparent\n            )\n        )\n    })","com.isakaro.kwik.ui.slider.KwikRangeSlider"]},{"name":"fun KwikRatingBar(modifier: Modifier = Modifier, rating: Double = 0.0, stars: Int = 5, starsColor: Color = KwikColorYellow, starSize: Dp = 24.dp, spacing: Dp = 2.dp, showBadge: Boolean = true, badgeContainerColor: Color = determineRatingColor(rating), badgeContentColor: Color = Color.DarkGray, clickable: Boolean = false, onClick: (Int) -> Unit = {})","description":"com.isakaro.kwik.ui.rating.KwikRatingBar","location":"kwik/com.isakaro.kwik.ui.rating/-kwik-rating-bar.html","searchKeys":["KwikRatingBar","fun KwikRatingBar(modifier: Modifier = Modifier, rating: Double = 0.0, stars: Int = 5, starsColor: Color = KwikColorYellow, starSize: Dp = 24.dp, spacing: Dp = 2.dp, showBadge: Boolean = true, badgeContainerColor: Color = determineRatingColor(rating), badgeContentColor: Color = Color.DarkGray, clickable: Boolean = false, onClick: (Int) -> Unit = {})","com.isakaro.kwik.ui.rating.KwikRatingBar"]},{"name":"fun KwikSearchView(modifier: Modifier = Modifier, state: MutableState<TextFieldValue>, placeholder: String = \"Search\", label: String? = null, delay: Boolean = false, delayDuration: Long = 500, maxChars: Int = 30, isError: Boolean = false, error: String? = null, textStyle: TextStyle = MaterialTheme.typography.bodyMedium, onTextChange: (String) -> Unit, onTextCleared: () -> Unit = {}, onFocusChanged: (Boolean) -> Unit = {}, onKeyboardDone: () -> Unit = {}, suggestionsModifier: Modifier = Modifier, onSuggestionSelected: (String) -> Unit = {}, suggestions: List<String> = listOf(), suggestionsContainerColor: Color = kwikFilledColorResolver(), colors: TextFieldColors = kwikTextFieldColors().copy(\n        focusedIndicatorColor = Color.Transparent,\n        unfocusedIndicatorColor = Color.Transparent\n    ), shape: Shape = MaterialTheme.shapes.medium)","description":"com.isakaro.kwik.ui.inputfields.KwikSearchView","location":"kwik/com.isakaro.kwik.ui.inputfields/-kwik-search-view.html","searchKeys":["KwikSearchView","fun KwikSearchView(modifier: Modifier = Modifier, state: MutableState<TextFieldValue>, placeholder: String = \"Search\", label: String? = null, delay: Boolean = false, delayDuration: Long = 500, maxChars: Int = 30, isError: Boolean = false, error: String? = null, textStyle: TextStyle = MaterialTheme.typography.bodyMedium, onTextChange: (String) -> Unit, onTextCleared: () -> Unit = {}, onFocusChanged: (Boolean) -> Unit = {}, onKeyboardDone: () -> Unit = {}, suggestionsModifier: Modifier = Modifier, onSuggestionSelected: (String) -> Unit = {}, suggestions: List<String> = listOf(), suggestionsContainerColor: Color = kwikFilledColorResolver(), colors: TextFieldColors = kwikTextFieldColors().copy(\n        focusedIndicatorColor = Color.Transparent,\n        unfocusedIndicatorColor = Color.Transparent\n    ), shape: Shape = MaterialTheme.shapes.medium)","com.isakaro.kwik.ui.inputfields.KwikSearchView"]},{"name":"fun KwikSimpleSocialButtonGroup(enabled: List<KwikSocialPlatform> = listOf(\n        KwikSocialPlatform.GOOGLE,\n        KwikSocialPlatform.APPLE,\n        KwikSocialPlatform.FACEBOOK\n    ), onClick: (KwikSocialPlatform) -> Unit)","description":"com.isakaro.kwik.ui.button.KwikSimpleSocialButtonGroup","location":"kwik/com.isakaro.kwik.ui.button/-kwik-simple-social-button-group.html","searchKeys":["KwikSimpleSocialButtonGroup","fun KwikSimpleSocialButtonGroup(enabled: List<KwikSocialPlatform> = listOf(\n        KwikSocialPlatform.GOOGLE,\n        KwikSocialPlatform.APPLE,\n        KwikSocialPlatform.FACEBOOK\n    ), onClick: (KwikSocialPlatform) -> Unit)","com.isakaro.kwik.ui.button.KwikSimpleSocialButtonGroup"]},{"name":"fun KwikSlider(modifier: Modifier = Modifier, value: Float = 10.0f, onValueChange: (Float) -> Unit, valueRange: ClosedFloatingPointRange<Float> = 0f..100f, enabled: Boolean = true, thumb: () -> Unit = {\n        SliderDefaults.Thumb(\n            interactionSource = remember { MutableInteractionSource() },\n            thumbSize = DpSize(10.dp, 25.dp)\n        )\n    }, track: (SliderState) -> Unit = { sliderState ->\n        SliderDefaults.Track(\n            sliderState = sliderState,\n            modifier = Modifier.height(6.dp),\n            thumbTrackGapSize = 0.dp,\n            colors = SliderDefaults.colors(\n                activeTrackColor = MaterialTheme.colorScheme.primary,\n                inactiveTrackColor = Color.LightGray,\n                activeTickColor = Color.Transparent,\n                inactiveTickColor = Color.Transparent\n            )\n        )\n    })","description":"com.isakaro.kwik.ui.slider.KwikSlider","location":"kwik/com.isakaro.kwik.ui.slider/-kwik-slider.html","searchKeys":["KwikSlider","fun KwikSlider(modifier: Modifier = Modifier, value: Float = 10.0f, onValueChange: (Float) -> Unit, valueRange: ClosedFloatingPointRange<Float> = 0f..100f, enabled: Boolean = true, thumb: () -> Unit = {\n        SliderDefaults.Thumb(\n            interactionSource = remember { MutableInteractionSource() },\n            thumbSize = DpSize(10.dp, 25.dp)\n        )\n    }, track: (SliderState) -> Unit = { sliderState ->\n        SliderDefaults.Track(\n            sliderState = sliderState,\n            modifier = Modifier.height(6.dp),\n            thumbTrackGapSize = 0.dp,\n            colors = SliderDefaults.colors(\n                activeTrackColor = MaterialTheme.colorScheme.primary,\n                inactiveTrackColor = Color.LightGray,\n                activeTickColor = Color.Transparent,\n                inactiveTickColor = Color.Transparent\n            )\n        )\n    })","com.isakaro.kwik.ui.slider.KwikSlider"]},{"name":"fun KwikSocialButton(icon: Int, text: String, contentColor: Color = Color.Black, containerColor: Color = Color.White, onClick: () -> Unit = {})","description":"com.isakaro.kwik.ui.button.KwikSocialButton","location":"kwik/com.isakaro.kwik.ui.button/-kwik-social-button.html","searchKeys":["KwikSocialButton","fun KwikSocialButton(icon: Int, text: String, contentColor: Color = Color.Black, containerColor: Color = Color.White, onClick: () -> Unit = {})","com.isakaro.kwik.ui.button.KwikSocialButton"]},{"name":"fun KwikSocialButtonGroup(enabled: List<KwikSocialPlatform> = listOf(\n        KwikSocialPlatform.GOOGLE,\n        KwikSocialPlatform.APPLE,\n        KwikSocialPlatform.FACEBOOK\n    ), onClick: (KwikSocialPlatform) -> Unit)","description":"com.isakaro.kwik.ui.button.KwikSocialButtonGroup","location":"kwik/com.isakaro.kwik.ui.button/-kwik-social-button-group.html","searchKeys":["KwikSocialButtonGroup","fun KwikSocialButtonGroup(enabled: List<KwikSocialPlatform> = listOf(\n        KwikSocialPlatform.GOOGLE,\n        KwikSocialPlatform.APPLE,\n        KwikSocialPlatform.FACEBOOK\n    ), onClick: (KwikSocialPlatform) -> Unit)","com.isakaro.kwik.ui.button.KwikSocialButtonGroup"]},{"name":"fun KwikStepper(state: MutableState<KwikStepperState>, modifier: Modifier = Modifier, activeStepColor: Color = MaterialTheme.colorScheme.primary)","description":"com.isakaro.kwik.ui.stepper.KwikStepper","location":"kwik/com.isakaro.kwik.ui.stepper/-kwik-stepper.html","searchKeys":["KwikStepper","fun KwikStepper(state: MutableState<KwikStepperState>, modifier: Modifier = Modifier, activeStepColor: Color = MaterialTheme.colorScheme.primary)","com.isakaro.kwik.ui.stepper.KwikStepper"]},{"name":"fun KwikSwitch(text: String? = null, checked: Boolean, colors: SwitchColors = kwikSwitchColors(), onCheckedChange: (Boolean) -> Unit)","description":"com.isakaro.kwik.ui.switch.KwikSwitch","location":"kwik/com.isakaro.kwik.ui.switch/-kwik-switch.html","searchKeys":["KwikSwitch","fun KwikSwitch(text: String? = null, checked: Boolean, colors: SwitchColors = kwikSwitchColors(), onCheckedChange: (Boolean) -> Unit)","com.isakaro.kwik.ui.switch.KwikSwitch"]},{"name":"fun KwikTabItemView(modifier: Modifier = Modifier, selected: Boolean, containerColor: Color = MaterialTheme.colorScheme.primary, selectedContentColor: Color = MaterialTheme.colorScheme.primary, unselectedContentColor: Color = Color.Gray, item: KwikTabItem, onClick: () -> Unit)","description":"com.isakaro.kwik.ui.tabs.KwikTabItemView","location":"kwik/com.isakaro.kwik.ui.tabs/-kwik-tab-item-view.html","searchKeys":["KwikTabItemView","fun KwikTabItemView(modifier: Modifier = Modifier, selected: Boolean, containerColor: Color = MaterialTheme.colorScheme.primary, selectedContentColor: Color = MaterialTheme.colorScheme.primary, unselectedContentColor: Color = Color.Gray, item: KwikTabItem, onClick: () -> Unit)","com.isakaro.kwik.ui.tabs.KwikTabItemView"]},{"name":"fun KwikTabsContent(modifier: Modifier = Modifier, tabs: List<KwikTabItem>, pagerState: PagerState, userScrollEnabled: Boolean = true, reverseLayout: Boolean = false, contentPadding: PaddingValues = PaddingValues(0.dp), pageSize: PageSize = PageSize.Fill)","description":"com.isakaro.kwik.ui.tabs.KwikTabsContent","location":"kwik/com.isakaro.kwik.ui.tabs/-kwik-tabs-content.html","searchKeys":["KwikTabsContent","fun KwikTabsContent(modifier: Modifier = Modifier, tabs: List<KwikTabItem>, pagerState: PagerState, userScrollEnabled: Boolean = true, reverseLayout: Boolean = false, contentPadding: PaddingValues = PaddingValues(0.dp), pageSize: PageSize = PageSize.Fill)","com.isakaro.kwik.ui.tabs.KwikTabsContent"]},{"name":"fun KwikTagChip(tag: KwikTagsInputItem, withQuantity: Boolean, quantity: Int, onQuantityChange: (Int) -> Unit, onRemove: () -> Unit, shape: Shape = MaterialTheme.shapes.medium, quantityCancelText: String, quantityDoneText: String)","description":"com.isakaro.kwik.ui.inputfields.KwikTagChip","location":"kwik/com.isakaro.kwik.ui.inputfields/-kwik-tag-chip.html","searchKeys":["KwikTagChip","fun KwikTagChip(tag: KwikTagsInputItem, withQuantity: Boolean, quantity: Int, onQuantityChange: (Int) -> Unit, onRemove: () -> Unit, shape: Shape = MaterialTheme.shapes.medium, quantityCancelText: String, quantityDoneText: String)","com.isakaro.kwik.ui.inputfields.KwikTagChip"]},{"name":"fun KwikTagsInput(items: List<KwikTagsInputItem> = emptyList(), placeholder: String = \"\", onlySuggestions: Boolean = false, initialValues: List<KwikTagsInputItem> = emptyList(), withQuantity: Boolean = false, suggestionsAlwaysVisible: Boolean = false, onTagsChanged: (List<KwikTagsInputItem>) -> Unit, shape: Shape = MaterialTheme.shapes.medium, tagsItemShape: Shape = MaterialTheme.shapes.small, outlined: Boolean = false, tagsVerticalSpacing: Int = 4, tagsHorizontalSpacing: Int = 4, quantityCancelText: String = \"Cancel\", quantityDoneText: String = \"Done\", maxLines: Int = 4)","description":"com.isakaro.kwik.ui.inputfields.KwikTagsInput","location":"kwik/com.isakaro.kwik.ui.inputfields/-kwik-tags-input.html","searchKeys":["KwikTagsInput","fun KwikTagsInput(items: List<KwikTagsInputItem> = emptyList(), placeholder: String = \"\", onlySuggestions: Boolean = false, initialValues: List<KwikTagsInputItem> = emptyList(), withQuantity: Boolean = false, suggestionsAlwaysVisible: Boolean = false, onTagsChanged: (List<KwikTagsInputItem>) -> Unit, shape: Shape = MaterialTheme.shapes.medium, tagsItemShape: Shape = MaterialTheme.shapes.small, outlined: Boolean = false, tagsVerticalSpacing: Int = 4, tagsHorizontalSpacing: Int = 4, quantityCancelText: String = \"Cancel\", quantityDoneText: String = \"Done\", maxLines: Int = 4)","com.isakaro.kwik.ui.inputfields.KwikTagsInput"]},{"name":"fun KwikTextButton(modifier: Modifier = Modifier, text: () -> Unit, containerColor: Color = Color.Transparent, isLoading: Boolean = false, onClick: () -> Unit = {})","description":"com.isakaro.kwik.ui.button.KwikTextButton","location":"kwik/com.isakaro.kwik.ui.button/-kwik-text-button.html","searchKeys":["KwikTextButton","fun KwikTextButton(modifier: Modifier = Modifier, text: () -> Unit, containerColor: Color = Color.Transparent, isLoading: Boolean = false, onClick: () -> Unit = {})","com.isakaro.kwik.ui.button.KwikTextButton"]},{"name":"fun KwikTextButton(modifier: Modifier = Modifier, text: Any, containerColor: Color = Color.Transparent, textColor: Color = MaterialTheme.colorScheme.primary, shape: Shape = MaterialTheme.shapes.medium, contentPadding: PaddingValues = PaddingValues(2.dp), isLoading: Boolean = false, onClick: () -> Unit = {})","description":"com.isakaro.kwik.ui.button.KwikTextButton","location":"kwik/com.isakaro.kwik.ui.button/-kwik-text-button.html","searchKeys":["KwikTextButton","fun KwikTextButton(modifier: Modifier = Modifier, text: Any, containerColor: Color = Color.Transparent, textColor: Color = MaterialTheme.colorScheme.primary, shape: Shape = MaterialTheme.shapes.medium, contentPadding: PaddingValues = PaddingValues(2.dp), isLoading: Boolean = false, onClick: () -> Unit = {})","com.isakaro.kwik.ui.button.KwikTextButton"]},{"name":"fun KwikTextField(modifier: Modifier = Modifier, value: MutableState<TextFieldValue>, onValueChange: (TextFieldValue) -> Unit, onKeyboardDone: () -> Unit = {  }, onActionClick: () -> Unit = {  }, onFocusChanged: (Boolean) -> Unit = {  }, visualTransformation: VisualTransformation = VisualTransformation.None, isEditable: Boolean = true, label: String? = null, placeholder: String, shape: Shape = MaterialTheme.shapes.medium, isError: Boolean = false, error: String = \"Field is required\", singleLine: Boolean = true, maxLength: Int = 65, keyboardType: KeyboardType = KeyboardType.Text, keyboardActions: KeyboardActions = KeyboardActions(\n        onDone = {\n            onKeyboardDone()\n        }\n    ), maxLines: Int = 1, allowedChars: Regex? = AllowedChars.ALL, imeAction: ImeAction = ImeAction.Done, isValid: Boolean = false, isTextCounterShown: Boolean = false, hint: Any? = null, hintVisibleOnError: Boolean = false, leadingIcon: Any? = null, trailingIcon: Any? = null, showClearTextButton: Boolean = false, isLoading: Boolean = false, isBigTextField: Boolean = false, enabled: Boolean = true, colors: TextFieldColors = kwikTextFieldColors(isEditable), textStyle: TextStyle = MaterialTheme.typography.bodyMedium, suggestionsModifier: Modifier = Modifier, onSuggestionSelected: (String) -> Unit = {}, suggestions: List<String> = listOf(), suggestionsContainerColor: Color = MaterialTheme.colorScheme.surface, delay: Boolean = false, delayDuration: Long = 500)","description":"com.isakaro.kwik.ui.inputfields.KwikTextField","location":"kwik/com.isakaro.kwik.ui.inputfields/-kwik-text-field.html","searchKeys":["KwikTextField","fun KwikTextField(modifier: Modifier = Modifier, value: MutableState<TextFieldValue>, onValueChange: (TextFieldValue) -> Unit, onKeyboardDone: () -> Unit = {  }, onActionClick: () -> Unit = {  }, onFocusChanged: (Boolean) -> Unit = {  }, visualTransformation: VisualTransformation = VisualTransformation.None, isEditable: Boolean = true, label: String? = null, placeholder: String, shape: Shape = MaterialTheme.shapes.medium, isError: Boolean = false, error: String = \"Field is required\", singleLine: Boolean = true, maxLength: Int = 65, keyboardType: KeyboardType = KeyboardType.Text, keyboardActions: KeyboardActions = KeyboardActions(\n        onDone = {\n            onKeyboardDone()\n        }\n    ), maxLines: Int = 1, allowedChars: Regex? = AllowedChars.ALL, imeAction: ImeAction = ImeAction.Done, isValid: Boolean = false, isTextCounterShown: Boolean = false, hint: Any? = null, hintVisibleOnError: Boolean = false, leadingIcon: Any? = null, trailingIcon: Any? = null, showClearTextButton: Boolean = false, isLoading: Boolean = false, isBigTextField: Boolean = false, enabled: Boolean = true, colors: TextFieldColors = kwikTextFieldColors(isEditable), textStyle: TextStyle = MaterialTheme.typography.bodyMedium, suggestionsModifier: Modifier = Modifier, onSuggestionSelected: (String) -> Unit = {}, suggestions: List<String> = listOf(), suggestionsContainerColor: Color = MaterialTheme.colorScheme.surface, delay: Boolean = false, delayDuration: Long = 500)","com.isakaro.kwik.ui.inputfields.KwikTextField"]},{"name":"fun KwikToast(state: MutableState<KwikToastState>, modifier: Modifier = Modifier)","description":"com.isakaro.kwik.ui.toast.KwikToast","location":"kwik/com.isakaro.kwik.ui.toast/-kwik-toast.html","searchKeys":["KwikToast","fun KwikToast(state: MutableState<KwikToastState>, modifier: Modifier = Modifier)","com.isakaro.kwik.ui.toast.KwikToast"]},{"name":"fun KwikTriStateCheckBox(state: ToggleableState? = null, colors: CheckboxColors = CheckboxDefaults.colors(\n        checkedColor = MaterialTheme.colorScheme.primary,\n        uncheckedColor = Color.Gray,\n        checkmarkColor = Color.White,\n        disabledUncheckedColor = Color.White\n    ), onCheckedChange: (ToggleableState) -> Unit)","description":"com.isakaro.kwik.ui.checkbox.KwikTriStateCheckBox","location":"kwik/com.isakaro.kwik.ui.checkbox/-kwik-tri-state-check-box.html","searchKeys":["KwikTriStateCheckBox","fun KwikTriStateCheckBox(state: ToggleableState? = null, colors: CheckboxColors = CheckboxDefaults.colors(\n        checkedColor = MaterialTheme.colorScheme.primary,\n        uncheckedColor = Color.Gray,\n        checkmarkColor = Color.White,\n        disabledUncheckedColor = Color.White\n    ), onCheckedChange: (ToggleableState) -> Unit)","com.isakaro.kwik.ui.checkbox.KwikTriStateCheckBox"]},{"name":"fun KwikVSpacer(height: Int)","description":"com.isakaro.kwik.ui.spacer.KwikVSpacer","location":"kwik/com.isakaro.kwik.ui.spacer/-kwik-v-spacer.html","searchKeys":["KwikVSpacer","fun KwikVSpacer(height: Int)","com.isakaro.kwik.ui.spacer.KwikVSpacer"]},{"name":"fun KwikVerticalTimeline(modifier: Modifier = Modifier, clickable: Boolean = false, entries: List<KwikTimelineEntry>, accentColor: Color = MaterialTheme.colorScheme.primary, currentStepIndex: Int = -1, onClick: (KwikTimelineEntry) -> Unit = {})","description":"com.isakaro.kwik.ui.timeline.KwikVerticalTimeline","location":"kwik/com.isakaro.kwik.ui.timeline/-kwik-vertical-timeline.html","searchKeys":["KwikVerticalTimeline","fun KwikVerticalTimeline(modifier: Modifier = Modifier, clickable: Boolean = false, entries: List<KwikTimelineEntry>, accentColor: Color = MaterialTheme.colorScheme.primary, currentStepIndex: Int = -1, onClick: (KwikTimelineEntry) -> Unit = {})","com.isakaro.kwik.ui.timeline.KwikVerticalTimeline"]},{"name":"fun KwikViewVisibilityTracker(modifier: Modifier = Modifier, tolerance: Int = 0, onVisibilityChanged: (isVisible: Boolean) -> Unit, content: () -> Unit)","description":"com.isakaro.kwik.ui.helpers.KwikViewVisibilityTracker","location":"kwik/com.isakaro.kwik.ui.helpers/-kwik-view-visibility-tracker.html","searchKeys":["KwikViewVisibilityTracker","fun KwikViewVisibilityTracker(modifier: Modifier = Modifier, tolerance: Int = 0, onVisibilityChanged: (isVisible: Boolean) -> Unit, content: () -> Unit)","com.isakaro.kwik.ui.helpers.KwikViewVisibilityTracker"]},{"name":"fun KwikWebView(modifier: Modifier = Modifier, url: String, javaScriptBridge: Any? = null, javaScriptBridgeName: String = \"KwikBridge\", hideProgressAfterLoading: Boolean = true, pageLoaded: () -> Unit = {}, failedToOpenLink: () -> Unit = {}, webViewSettings: KwikWebViewSettings.() -> Unit = {})","description":"com.isakaro.kwik.ui.webview.KwikWebView","location":"kwik/com.isakaro.kwik.ui.webview/-kwik-web-view.html","searchKeys":["KwikWebView","fun KwikWebView(modifier: Modifier = Modifier, url: String, javaScriptBridge: Any? = null, javaScriptBridgeName: String = \"KwikBridge\", hideProgressAfterLoading: Boolean = true, pageLoaded: () -> Unit = {}, failedToOpenLink: () -> Unit = {}, webViewSettings: KwikWebViewSettings.() -> Unit = {})","com.isakaro.kwik.ui.webview.KwikWebView"]},{"name":"fun KwikWidget(modifier: Modifier = Modifier, item: KwikDiv)","description":"com.isakaro.kwik.ui.grid.KwikWidget","location":"kwik/com.isakaro.kwik.ui.grid/-kwik-widget.html","searchKeys":["KwikWidget","fun KwikWidget(modifier: Modifier = Modifier, item: KwikDiv)","com.isakaro.kwik.ui.grid.KwikWidget"]},{"name":"fun KwikYearsRangeSelector(title: String = \"Year Range\", fromYearText: String = \"From Year\", toYearText: String = \"To Year\", kwikYearsData: KwikYearsData = KwikYearsData(), onYearRangeChanged: (Int, Int) -> Unit)","description":"com.isakaro.kwik.ui.date.KwikYearsRangeSelector","location":"kwik/com.isakaro.kwik.ui.date/-kwik-years-range-selector.html","searchKeys":["KwikYearsRangeSelector","fun KwikYearsRangeSelector(title: String = \"Year Range\", fromYearText: String = \"From Year\", toYearText: String = \"To Year\", kwikYearsData: KwikYearsData = KwikYearsData(), onYearRangeChanged: (Int, Int) -> Unit)","com.isakaro.kwik.ui.date.KwikYearsRangeSelector"]},{"name":"fun LabelLarge(modifier: Modifier = Modifier, text: Any, color: Color = MaterialTheme.colorScheme.onSurface, fontWeight: FontWeight? = null, textAlign: TextAlign = TextAlign.Start, fontStyle: FontStyle? = null, maxLines: Int = Int.MAX_VALUE, overflow: TextOverflow = TextOverflow.Ellipsis)","description":"com.isakaro.kwik.ui.text.KwikText.LabelLarge","location":"kwik/com.isakaro.kwik.ui.text/-kwik-text/-label-large.html","searchKeys":["LabelLarge","fun LabelLarge(modifier: Modifier = Modifier, text: Any, color: Color = MaterialTheme.colorScheme.onSurface, fontWeight: FontWeight? = null, textAlign: TextAlign = TextAlign.Start, fontStyle: FontStyle? = null, maxLines: Int = Int.MAX_VALUE, overflow: TextOverflow = TextOverflow.Ellipsis)","com.isakaro.kwik.ui.text.KwikText.LabelLarge"]},{"name":"fun LabelMedium(modifier: Modifier = Modifier, text: Any, color: Color = MaterialTheme.colorScheme.onSurface, fontWeight: FontWeight? = null, textAlign: TextAlign = TextAlign.Start, fontStyle: FontStyle? = null, maxLines: Int = Int.MAX_VALUE, overflow: TextOverflow = TextOverflow.Ellipsis)","description":"com.isakaro.kwik.ui.text.KwikText.LabelMedium","location":"kwik/com.isakaro.kwik.ui.text/-kwik-text/-label-medium.html","searchKeys":["LabelMedium","fun LabelMedium(modifier: Modifier = Modifier, text: Any, color: Color = MaterialTheme.colorScheme.onSurface, fontWeight: FontWeight? = null, textAlign: TextAlign = TextAlign.Start, fontStyle: FontStyle? = null, maxLines: Int = Int.MAX_VALUE, overflow: TextOverflow = TextOverflow.Ellipsis)","com.isakaro.kwik.ui.text.KwikText.LabelMedium"]},{"name":"fun LabelSmall(modifier: Modifier = Modifier, text: Any, color: Color = MaterialTheme.colorScheme.onSurface, fontWeight: FontWeight? = null, textAlign: TextAlign = TextAlign.Start, fontStyle: FontStyle? = null, maxLines: Int = Int.MAX_VALUE, overflow: TextOverflow = TextOverflow.Ellipsis)","description":"com.isakaro.kwik.ui.text.KwikText.LabelSmall","location":"kwik/com.isakaro.kwik.ui.text/-kwik-text/-label-small.html","searchKeys":["LabelSmall","fun LabelSmall(modifier: Modifier = Modifier, text: Any, color: Color = MaterialTheme.colorScheme.onSurface, fontWeight: FontWeight? = null, textAlign: TextAlign = TextAlign.Start, fontStyle: FontStyle? = null, maxLines: Int = Int.MAX_VALUE, overflow: TextOverflow = TextOverflow.Ellipsis)","com.isakaro.kwik.ui.text.KwikText.LabelSmall"]},{"name":"fun LocalDate.toFormat(format: String = \"MMM dd\", locale: Locale = Locale.ENGLISH): String","description":"com.isakaro.kwik.ui.utils.toFormat","location":"kwik/com.isakaro.kwik.ui.utils/to-format.html","searchKeys":["toFormat","fun LocalDate.toFormat(format: String = \"MMM dd\", locale: Locale = Locale.ENGLISH): String","com.isakaro.kwik.ui.utils.toFormat"]},{"name":"fun LocalDate.toMillis(zoneId: ZoneId = ZoneId.systemDefault()): Long","description":"com.isakaro.kwik.ui.utils.toMillis","location":"kwik/com.isakaro.kwik.ui.utils/to-millis.html","searchKeys":["toMillis","fun LocalDate.toMillis(zoneId: ZoneId = ZoneId.systemDefault()): Long","com.isakaro.kwik.ui.utils.toMillis"]},{"name":"fun Long.toLocalDate(): LocalDate","description":"com.isakaro.kwik.ui.utils.toLocalDate","location":"kwik/com.isakaro.kwik.ui.utils/to-local-date.html","searchKeys":["toLocalDate","fun Long.toLocalDate(): LocalDate","com.isakaro.kwik.ui.utils.toLocalDate"]},{"name":"fun MutableState<KwikCarouselState>.next()","description":"com.isakaro.kwik.ui.carousel.next","location":"kwik/com.isakaro.kwik.ui.carousel/next.html","searchKeys":["next","fun MutableState<KwikCarouselState>.next()","com.isakaro.kwik.ui.carousel.next"]},{"name":"fun MutableState<KwikCarouselState>.previous()","description":"com.isakaro.kwik.ui.carousel.previous","location":"kwik/com.isakaro.kwik.ui.carousel/previous.html","searchKeys":["previous","fun MutableState<KwikCarouselState>.previous()","com.isakaro.kwik.ui.carousel.previous"]},{"name":"fun MutableState<KwikCarouselState>.slideTo(index: Int)","description":"com.isakaro.kwik.ui.carousel.slideTo","location":"kwik/com.isakaro.kwik.ui.carousel/slide-to.html","searchKeys":["slideTo","fun MutableState<KwikCarouselState>.slideTo(index: Int)","com.isakaro.kwik.ui.carousel.slideTo"]},{"name":"fun MutableState<KwikPermissionRequest>.requestPermissions()","description":"com.isakaro.kwik.ui.permissions.requestPermissions","location":"kwik/com.isakaro.kwik.ui.permissions/request-permissions.html","searchKeys":["requestPermissions","fun MutableState<KwikPermissionRequest>.requestPermissions()","com.isakaro.kwik.ui.permissions.requestPermissions"]},{"name":"fun MutableState<KwikStepperState>.clearAll()","description":"com.isakaro.kwik.ui.stepper.clearAll","location":"kwik/com.isakaro.kwik.ui.stepper/clear-all.html","searchKeys":["clearAll","fun MutableState<KwikStepperState>.clearAll()","com.isakaro.kwik.ui.stepper.clearAll"]},{"name":"fun MutableState<KwikStepperState>.completeAll()","description":"com.isakaro.kwik.ui.stepper.completeAll","location":"kwik/com.isakaro.kwik.ui.stepper/complete-all.html","searchKeys":["completeAll","fun MutableState<KwikStepperState>.completeAll()","com.isakaro.kwik.ui.stepper.completeAll"]},{"name":"fun MutableState<KwikStepperState>.moveBackward()","description":"com.isakaro.kwik.ui.stepper.moveBackward","location":"kwik/com.isakaro.kwik.ui.stepper/move-backward.html","searchKeys":["moveBackward","fun MutableState<KwikStepperState>.moveBackward()","com.isakaro.kwik.ui.stepper.moveBackward"]},{"name":"fun MutableState<KwikStepperState>.moveForward()","description":"com.isakaro.kwik.ui.stepper.moveForward","location":"kwik/com.isakaro.kwik.ui.stepper/move-forward.html","searchKeys":["moveForward","fun MutableState<KwikStepperState>.moveForward()","com.isakaro.kwik.ui.stepper.moveForward"]},{"name":"fun MutableState<KwikStepperState>.moveToStep(index: Int)","description":"com.isakaro.kwik.ui.stepper.moveToStep","location":"kwik/com.isakaro.kwik.ui.stepper/move-to-step.html","searchKeys":["moveToStep","fun MutableState<KwikStepperState>.moveToStep(index: Int)","com.isakaro.kwik.ui.stepper.moveToStep"]},{"name":"fun MutableState<KwikStepperState>.setNewSteps(steps: List<String>, index: Int = 0)","description":"com.isakaro.kwik.ui.stepper.setNewSteps","location":"kwik/com.isakaro.kwik.ui.stepper/set-new-steps.html","searchKeys":["setNewSteps","fun MutableState<KwikStepperState>.setNewSteps(steps: List<String>, index: Int = 0)","com.isakaro.kwik.ui.stepper.setNewSteps"]},{"name":"fun MutableState<KwikToastState>.showToast(message: String, type: KwikToastType = KwikToastType.NEUTRAL, duration: Long = 4000, backgroundColor: Color = Color.Unspecified)","description":"com.isakaro.kwik.ui.toast.showToast","location":"kwik/com.isakaro.kwik.ui.toast/show-toast.html","searchKeys":["showToast","fun MutableState<KwikToastState>.showToast(message: String, type: KwikToastType = KwikToastType.NEUTRAL, duration: Long = 4000, backgroundColor: Color = Color.Unspecified)","com.isakaro.kwik.ui.toast.showToast"]},{"name":"fun OffsetDateTime.toFormat(format: String = \"MMM dd\", locale: Locale = Locale.ENGLISH): String","description":"com.isakaro.kwik.ui.utils.toFormat","location":"kwik/com.isakaro.kwik.ui.utils/to-format.html","searchKeys":["toFormat","fun OffsetDateTime.toFormat(format: String = \"MMM dd\", locale: Locale = Locale.ENGLISH): String","com.isakaro.kwik.ui.utils.toFormat"]},{"name":"fun PasswordToggle(passwordVisible: Boolean, onClick: () -> Unit)","description":"com.isakaro.kwik.ui.inputfields.PasswordToggle","location":"kwik/com.isakaro.kwik.ui.inputfields/-password-toggle.html","searchKeys":["PasswordToggle","fun PasswordToggle(passwordVisible: Boolean, onClick: () -> Unit)","com.isakaro.kwik.ui.inputfields.PasswordToggle"]},{"name":"fun Quote(modifier: Modifier = Modifier, text: Any, author: String? = null, color: Color = MaterialTheme.colorScheme.onSurface, fontWeight: FontWeight? = null, textAlign: TextAlign = TextAlign.Start, fontStyle: FontStyle = FontStyle.Italic, maxLines: Int = Int.MAX_VALUE, overflow: TextOverflow = TextOverflow.Ellipsis)","description":"com.isakaro.kwik.ui.text.KwikText.Quote","location":"kwik/com.isakaro.kwik.ui.text/-kwik-text/-quote.html","searchKeys":["Quote","fun Quote(modifier: Modifier = Modifier, text: Any, author: String? = null, color: Color = MaterialTheme.colorScheme.onSurface, fontWeight: FontWeight? = null, textAlign: TextAlign = TextAlign.Start, fontStyle: FontStyle = FontStyle.Italic, maxLines: Int = Int.MAX_VALUE, overflow: TextOverflow = TextOverflow.Ellipsis)","com.isakaro.kwik.ui.text.KwikText.Quote"]},{"name":"fun RenderText(modifier: Modifier = Modifier, text: Any, color: Color = MaterialTheme.colorScheme.onSurface, fontWeight: FontWeight? = null, textAlign: TextAlign = TextAlign.Start, fontStyle: FontStyle? = null, textDecoration: TextDecoration = TextDecoration.None, style: TextStyle = MaterialTheme.typography.bodyLarge, maxLines: Int = Int.MAX_VALUE, overflow: TextOverflow = TextOverflow.Ellipsis, onTextLayout: (TextLayoutResult) -> Unit = {})","description":"com.isakaro.kwik.ui.text.KwikText.RenderText","location":"kwik/com.isakaro.kwik.ui.text/-kwik-text/-render-text.html","searchKeys":["RenderText","fun RenderText(modifier: Modifier = Modifier, text: Any, color: Color = MaterialTheme.colorScheme.onSurface, fontWeight: FontWeight? = null, textAlign: TextAlign = TextAlign.Start, fontStyle: FontStyle? = null, textDecoration: TextDecoration = TextDecoration.None, style: TextStyle = MaterialTheme.typography.bodyLarge, maxLines: Int = Int.MAX_VALUE, overflow: TextOverflow = TextOverflow.Ellipsis, onTextLayout: (TextLayoutResult) -> Unit = {})","com.isakaro.kwik.ui.text.KwikText.RenderText"]},{"name":"fun RequirementRow(requirement: PasswordRequirement, formSubmitAttempted: Boolean)","description":"com.isakaro.kwik.ui.form.RequirementRow","location":"kwik/com.isakaro.kwik.ui.form/-requirement-row.html","searchKeys":["RequirementRow","fun RequirementRow(requirement: PasswordRequirement, formSubmitAttempted: Boolean)","com.isakaro.kwik.ui.form.RequirementRow"]},{"name":"fun String?.blankIfNull(): String","description":"com.isakaro.kwik.ui.utils.blankIfNull","location":"kwik/com.isakaro.kwik.ui.utils/blank-if-null.html","searchKeys":["blankIfNull","fun String?.blankIfNull(): String","com.isakaro.kwik.ui.utils.blankIfNull"]},{"name":"fun TitleLarge(modifier: Modifier = Modifier, text: Any, color: Color = MaterialTheme.colorScheme.onSurface, fontWeight: FontWeight? = null, textAlign: TextAlign = TextAlign.Start, fontStyle: FontStyle? = null, maxLines: Int = Int.MAX_VALUE, overflow: TextOverflow = TextOverflow.Ellipsis)","description":"com.isakaro.kwik.ui.text.KwikText.TitleLarge","location":"kwik/com.isakaro.kwik.ui.text/-kwik-text/-title-large.html","searchKeys":["TitleLarge","fun TitleLarge(modifier: Modifier = Modifier, text: Any, color: Color = MaterialTheme.colorScheme.onSurface, fontWeight: FontWeight? = null, textAlign: TextAlign = TextAlign.Start, fontStyle: FontStyle? = null, maxLines: Int = Int.MAX_VALUE, overflow: TextOverflow = TextOverflow.Ellipsis)","com.isakaro.kwik.ui.text.KwikText.TitleLarge"]},{"name":"fun TitleMedium(modifier: Modifier = Modifier, text: Any, color: Color = MaterialTheme.colorScheme.onSurface, fontWeight: FontWeight? = null, textAlign: TextAlign = TextAlign.Start, fontStyle: FontStyle? = null, maxLines: Int = Int.MAX_VALUE, overflow: TextOverflow = TextOverflow.Ellipsis)","description":"com.isakaro.kwik.ui.text.KwikText.TitleMedium","location":"kwik/com.isakaro.kwik.ui.text/-kwik-text/-title-medium.html","searchKeys":["TitleMedium","fun TitleMedium(modifier: Modifier = Modifier, text: Any, color: Color = MaterialTheme.colorScheme.onSurface, fontWeight: FontWeight? = null, textAlign: TextAlign = TextAlign.Start, fontStyle: FontStyle? = null, maxLines: Int = Int.MAX_VALUE, overflow: TextOverflow = TextOverflow.Ellipsis)","com.isakaro.kwik.ui.text.KwikText.TitleMedium"]},{"name":"fun TitleSmall(modifier: Modifier = Modifier, text: Any, color: Color = MaterialTheme.colorScheme.onSurface, fontWeight: FontWeight? = null, textAlign: TextAlign = TextAlign.Start, fontStyle: FontStyle? = null, maxLines: Int = Int.MAX_VALUE, overflow: TextOverflow = TextOverflow.Ellipsis)","description":"com.isakaro.kwik.ui.text.KwikText.TitleSmall","location":"kwik/com.isakaro.kwik.ui.text/-kwik-text/-title-small.html","searchKeys":["TitleSmall","fun TitleSmall(modifier: Modifier = Modifier, text: Any, color: Color = MaterialTheme.colorScheme.onSurface, fontWeight: FontWeight? = null, textAlign: TextAlign = TextAlign.Start, fontStyle: FontStyle? = null, maxLines: Int = Int.MAX_VALUE, overflow: TextOverflow = TextOverflow.Ellipsis)","com.isakaro.kwik.ui.text.KwikText.TitleSmall"]},{"name":"fun WebView.setCookie(cookies: List<KwikCookie>)","description":"com.isakaro.kwik.ui.webview.setCookie","location":"kwik/com.isakaro.kwik.ui.webview/set-cookie.html","searchKeys":["setCookie","fun WebView.setCookie(cookies: List<KwikCookie>)","com.isakaro.kwik.ui.webview.setCookie"]},{"name":"fun kwikDatePickerColors(): DatePickerColors","description":"com.isakaro.kwik.ui.date.kwikDatePickerColors","location":"kwik/com.isakaro.kwik.ui.date/kwik-date-picker-colors.html","searchKeys":["kwikDatePickerColors","fun kwikDatePickerColors(): DatePickerColors","com.isakaro.kwik.ui.date.kwikDatePickerColors"]},{"name":"fun kwikFilledColorResolver(): Color","description":"com.isakaro.kwik.ui.inputfields.kwikFilledColorResolver","location":"kwik/com.isakaro.kwik.ui.inputfields/kwik-filled-color-resolver.html","searchKeys":["kwikFilledColorResolver","fun kwikFilledColorResolver(): Color","com.isakaro.kwik.ui.inputfields.kwikFilledColorResolver"]},{"name":"fun kwikOutlinedTextFieldColors(enabled: Boolean = true): TextFieldColors","description":"com.isakaro.kwik.ui.inputfields.kwikOutlinedTextFieldColors","location":"kwik/com.isakaro.kwik.ui.inputfields/kwik-outlined-text-field-colors.html","searchKeys":["kwikOutlinedTextFieldColors","fun kwikOutlinedTextFieldColors(enabled: Boolean = true): TextFieldColors","com.isakaro.kwik.ui.inputfields.kwikOutlinedTextFieldColors"]},{"name":"fun kwikSwitchColors(): SwitchColors","description":"com.isakaro.kwik.ui.switch.kwikSwitchColors","location":"kwik/com.isakaro.kwik.ui.switch/kwik-switch-colors.html","searchKeys":["kwikSwitchColors","fun kwikSwitchColors(): SwitchColors","com.isakaro.kwik.ui.switch.kwikSwitchColors"]},{"name":"fun kwikTextFieldColors(isEditable: Boolean = true): TextFieldColors","description":"com.isakaro.kwik.ui.inputfields.kwikTextFieldColors","location":"kwik/com.isakaro.kwik.ui.inputfields/kwik-text-field-colors.html","searchKeys":["kwikTextFieldColors","fun kwikTextFieldColors(isEditable: Boolean = true): TextFieldColors","com.isakaro.kwik.ui.inputfields.kwikTextFieldColors"]},{"name":"fun onInactive()","description":"com.isakaro.kwik.ui.utils.KwikNetworkUtils.onInactive","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-network-utils/on-inactive.html","searchKeys":["onInactive","fun onInactive()","com.isakaro.kwik.ui.utils.KwikNetworkUtils.onInactive"]},{"name":"fun rememberKwikCarouselState(state: KwikCarouselState): MutableState<KwikCarouselState>","description":"com.isakaro.kwik.ui.carousel.rememberKwikCarouselState","location":"kwik/com.isakaro.kwik.ui.carousel/remember-kwik-carousel-state.html","searchKeys":["rememberKwikCarouselState","fun rememberKwikCarouselState(state: KwikCarouselState): MutableState<KwikCarouselState>","com.isakaro.kwik.ui.carousel.rememberKwikCarouselState"]},{"name":"fun rememberKwikPermissionState(): MutableState<KwikPermissionRequest>","description":"com.isakaro.kwik.ui.permissions.rememberKwikPermissionState","location":"kwik/com.isakaro.kwik.ui.permissions/remember-kwik-permission-state.html","searchKeys":["rememberKwikPermissionState","fun rememberKwikPermissionState(): MutableState<KwikPermissionRequest>","com.isakaro.kwik.ui.permissions.rememberKwikPermissionState"]},{"name":"fun rememberKwikStepperState(steps: List<String>): MutableState<KwikStepperState>","description":"com.isakaro.kwik.ui.stepper.rememberKwikStepperState","location":"kwik/com.isakaro.kwik.ui.stepper/remember-kwik-stepper-state.html","searchKeys":["rememberKwikStepperState","fun rememberKwikStepperState(steps: List<String>): MutableState<KwikStepperState>","com.isakaro.kwik.ui.stepper.rememberKwikStepperState"]},{"name":"fun rememberKwikToastState(): MutableState<KwikToastState>","description":"com.isakaro.kwik.ui.toast.rememberKwikToastState","location":"kwik/com.isakaro.kwik.ui.toast/remember-kwik-toast-state.html","searchKeys":["rememberKwikToastState","fun rememberKwikToastState(): MutableState<KwikToastState>","com.isakaro.kwik.ui.toast.rememberKwikToastState"]},{"name":"fun resolveCountries(includeOnly: List<KwikCountry> = listOf(), omit: List<KwikCountry> = listOf()): List<KwikCountryInfo>","description":"com.isakaro.kwik.ui.utils.resolveCountries","location":"kwik/com.isakaro.kwik.ui.utils/resolve-countries.html","searchKeys":["resolveCountries","fun resolveCountries(includeOnly: List<KwikCountry> = listOf(), omit: List<KwikCountry> = listOf()): List<KwikCountryInfo>","com.isakaro.kwik.ui.utils.resolveCountries"]},{"name":"fun valueOf(value: String): ImageLoaderState","description":"com.isakaro.kwik.ui.image.ImageLoaderState.valueOf","location":"kwik/com.isakaro.kwik.ui.image/-image-loader-state/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ImageLoaderState","com.isakaro.kwik.ui.image.ImageLoaderState.valueOf"]},{"name":"fun valueOf(value: String): KwikButtonLoadingStyle","description":"com.isakaro.kwik.ui.button.KwikButtonLoadingStyle.valueOf","location":"kwik/com.isakaro.kwik.ui.button/-kwik-button-loading-style/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): KwikButtonLoadingStyle","com.isakaro.kwik.ui.button.KwikButtonLoadingStyle.valueOf"]},{"name":"fun valueOf(value: String): KwikCountry","description":"com.isakaro.kwik.ui.utils.KwikCountry.valueOf","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): KwikCountry","com.isakaro.kwik.ui.utils.KwikCountry.valueOf"]},{"name":"fun valueOf(value: String): KwikDatePickerMode","description":"com.isakaro.kwik.ui.date.KwikDatePickerMode.valueOf","location":"kwik/com.isakaro.kwik.ui.date/-kwik-date-picker-mode/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): KwikDatePickerMode","com.isakaro.kwik.ui.date.KwikDatePickerMode.valueOf"]},{"name":"fun valueOf(value: String): KwikPasswordRequirementType","description":"com.isakaro.kwik.ui.form.KwikPasswordRequirementType.valueOf","location":"kwik/com.isakaro.kwik.ui.form/-kwik-password-requirement-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): KwikPasswordRequirementType","com.isakaro.kwik.ui.form.KwikPasswordRequirementType.valueOf"]},{"name":"fun valueOf(value: String): KwikSocialPlatform","description":"com.isakaro.kwik.ui.button.KwikSocialPlatform.valueOf","location":"kwik/com.isakaro.kwik.ui.button/-kwik-social-platform/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): KwikSocialPlatform","com.isakaro.kwik.ui.button.KwikSocialPlatform.valueOf"]},{"name":"fun valueOf(value: String): KwikToastType","description":"com.isakaro.kwik.ui.toast.KwikToastType.valueOf","location":"kwik/com.isakaro.kwik.ui.toast/-kwik-toast-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): KwikToastType","com.isakaro.kwik.ui.toast.KwikToastType.valueOf"]},{"name":"fun values(): Array<ImageLoaderState>","description":"com.isakaro.kwik.ui.image.ImageLoaderState.values","location":"kwik/com.isakaro.kwik.ui.image/-image-loader-state/values.html","searchKeys":["values","fun values(): Array<ImageLoaderState>","com.isakaro.kwik.ui.image.ImageLoaderState.values"]},{"name":"fun values(): Array<KwikButtonLoadingStyle>","description":"com.isakaro.kwik.ui.button.KwikButtonLoadingStyle.values","location":"kwik/com.isakaro.kwik.ui.button/-kwik-button-loading-style/values.html","searchKeys":["values","fun values(): Array<KwikButtonLoadingStyle>","com.isakaro.kwik.ui.button.KwikButtonLoadingStyle.values"]},{"name":"fun values(): Array<KwikCountry>","description":"com.isakaro.kwik.ui.utils.KwikCountry.values","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/values.html","searchKeys":["values","fun values(): Array<KwikCountry>","com.isakaro.kwik.ui.utils.KwikCountry.values"]},{"name":"fun values(): Array<KwikDatePickerMode>","description":"com.isakaro.kwik.ui.date.KwikDatePickerMode.values","location":"kwik/com.isakaro.kwik.ui.date/-kwik-date-picker-mode/values.html","searchKeys":["values","fun values(): Array<KwikDatePickerMode>","com.isakaro.kwik.ui.date.KwikDatePickerMode.values"]},{"name":"fun values(): Array<KwikPasswordRequirementType>","description":"com.isakaro.kwik.ui.form.KwikPasswordRequirementType.values","location":"kwik/com.isakaro.kwik.ui.form/-kwik-password-requirement-type/values.html","searchKeys":["values","fun values(): Array<KwikPasswordRequirementType>","com.isakaro.kwik.ui.form.KwikPasswordRequirementType.values"]},{"name":"fun values(): Array<KwikSocialPlatform>","description":"com.isakaro.kwik.ui.button.KwikSocialPlatform.values","location":"kwik/com.isakaro.kwik.ui.button/-kwik-social-platform/values.html","searchKeys":["values","fun values(): Array<KwikSocialPlatform>","com.isakaro.kwik.ui.button.KwikSocialPlatform.values"]},{"name":"fun values(): Array<KwikToastType>","description":"com.isakaro.kwik.ui.toast.KwikToastType.values","location":"kwik/com.isakaro.kwik.ui.toast/-kwik-toast-type/values.html","searchKeys":["values","fun values(): Array<KwikToastType>","com.isakaro.kwik.ui.toast.KwikToastType.values"]},{"name":"inner class NetworkCallback : ConnectivityManager.NetworkCallback","description":"com.isakaro.kwik.ui.utils.KwikNetworkUtils.NetworkCallback","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-network-utils/-network-callback/index.html","searchKeys":["NetworkCallback","inner class NetworkCallback : ConnectivityManager.NetworkCallback","com.isakaro.kwik.ui.utils.KwikNetworkUtils.NetworkCallback"]},{"name":"object AllowedChars","description":"com.isakaro.kwik.ui.inputfields.AllowedChars","location":"kwik/com.isakaro.kwik.ui.inputfields/-allowed-chars/index.html","searchKeys":["AllowedChars","object AllowedChars","com.isakaro.kwik.ui.inputfields.AllowedChars"]},{"name":"object KwikBiometrics","description":"com.isakaro.kwik.ui.biometrics.KwikBiometrics","location":"kwik/com.isakaro.kwik.ui.biometrics/-kwik-biometrics/index.html","searchKeys":["KwikBiometrics","object KwikBiometrics","com.isakaro.kwik.ui.biometrics.KwikBiometrics"]},{"name":"object KwikBiometricsResult","description":"com.isakaro.kwik.ui.biometrics.KwikBiometricsResult","location":"kwik/com.isakaro.kwik.ui.biometrics/-kwik-biometrics-result/index.html","searchKeys":["KwikBiometricsResult","object KwikBiometricsResult","com.isakaro.kwik.ui.biometrics.KwikBiometricsResult"]},{"name":"object KwikDialog","description":"com.isakaro.kwik.ui.dialog.KwikDialog","location":"kwik/com.isakaro.kwik.ui.dialog/-kwik-dialog/index.html","searchKeys":["KwikDialog","object KwikDialog","com.isakaro.kwik.ui.dialog.KwikDialog"]},{"name":"object KwikText","description":"com.isakaro.kwik.ui.text.KwikText","location":"kwik/com.isakaro.kwik.ui.text/-kwik-text/index.html","searchKeys":["KwikText","object KwikText","com.isakaro.kwik.ui.text.KwikText"]},{"name":"open override fun createIntent(context: Context, input: KwikBiometricPromptParams): Intent","description":"com.isakaro.kwik.ui.biometrics.KwikBiometricsAuthenticationContract.createIntent","location":"kwik/com.isakaro.kwik.ui.biometrics/-kwik-biometrics-authentication-contract/create-intent.html","searchKeys":["createIntent","open override fun createIntent(context: Context, input: KwikBiometricPromptParams): Intent","com.isakaro.kwik.ui.biometrics.KwikBiometricsAuthenticationContract.createIntent"]},{"name":"open override fun onAvailable(network: Network)","description":"com.isakaro.kwik.ui.utils.KwikNetworkUtils.NetworkCallback.onAvailable","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-network-utils/-network-callback/on-available.html","searchKeys":["onAvailable","open override fun onAvailable(network: Network)","com.isakaro.kwik.ui.utils.KwikNetworkUtils.NetworkCallback.onAvailable"]},{"name":"open override fun onCapabilitiesChanged(network: Network, networkCapabilities: NetworkCapabilities)","description":"com.isakaro.kwik.ui.utils.KwikNetworkUtils.NetworkCallback.onCapabilitiesChanged","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-network-utils/-network-callback/on-capabilities-changed.html","searchKeys":["onCapabilitiesChanged","open override fun onCapabilitiesChanged(network: Network, networkCapabilities: NetworkCapabilities)","com.isakaro.kwik.ui.utils.KwikNetworkUtils.NetworkCallback.onCapabilitiesChanged"]},{"name":"open override fun onLost(network: Network)","description":"com.isakaro.kwik.ui.utils.KwikNetworkUtils.NetworkCallback.onLost","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-network-utils/-network-callback/on-lost.html","searchKeys":["onLost","open override fun onLost(network: Network)","com.isakaro.kwik.ui.utils.KwikNetworkUtils.NetworkCallback.onLost"]},{"name":"open override fun onUnavailable()","description":"com.isakaro.kwik.ui.utils.KwikNetworkUtils.NetworkCallback.onUnavailable","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-network-utils/-network-callback/on-unavailable.html","searchKeys":["onUnavailable","open override fun onUnavailable()","com.isakaro.kwik.ui.utils.KwikNetworkUtils.NetworkCallback.onUnavailable"]},{"name":"open override fun parseResult(resultCode: Int, intent: Intent?): Int","description":"com.isakaro.kwik.ui.biometrics.KwikBiometricsAuthenticationContract.parseResult","location":"kwik/com.isakaro.kwik.ui.biometrics/-kwik-biometrics-authentication-contract/parse-result.html","searchKeys":["parseResult","open override fun parseResult(resultCode: Int, intent: Intent?): Int","com.isakaro.kwik.ui.biometrics.KwikBiometricsAuthenticationContract.parseResult"]},{"name":"sealed class KwikDropdownItemActionState","description":"com.isakaro.kwik.ui.dropdown.KwikDropdownItemActionState","location":"kwik/com.isakaro.kwik.ui.dropdown/-kwik-dropdown-item-action-state/index.html","searchKeys":["KwikDropdownItemActionState","sealed class KwikDropdownItemActionState","com.isakaro.kwik.ui.dropdown.KwikDropdownItemActionState"]},{"name":"sealed class KwikListItemActionState","description":"com.isakaro.kwik.ui.list.KwikListItemActionState","location":"kwik/com.isakaro.kwik.ui.list/-kwik-list-item-action-state/index.html","searchKeys":["KwikListItemActionState","sealed class KwikListItemActionState","com.isakaro.kwik.ui.list.KwikListItemActionState"]},{"name":"sealed class KwikPermissionRequestState","description":"com.isakaro.kwik.ui.permissions.KwikPermissionRequestState","location":"kwik/com.isakaro.kwik.ui.permissions/-kwik-permission-request-state/index.html","searchKeys":["KwikPermissionRequestState","sealed class KwikPermissionRequestState","com.isakaro.kwik.ui.permissions.KwikPermissionRequestState"]},{"name":"sealed class NetworkState","description":"com.isakaro.kwik.ui.utils.KwikNetworkUtils.NetworkState","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-network-utils/-network-state/index.html","searchKeys":["NetworkState","sealed class NetworkState","com.isakaro.kwik.ui.utils.KwikNetworkUtils.NetworkState"]},{"name":"tailrec fun Context.activity(): Activity","description":"com.isakaro.kwik.ui.utils.activity","location":"kwik/com.isakaro.kwik.ui.utils/activity.html","searchKeys":["activity","tailrec fun Context.activity(): Activity","com.isakaro.kwik.ui.utils.activity"]},{"name":"val ALL: Nothing? = null","description":"com.isakaro.kwik.ui.inputfields.AllowedChars.ALL","location":"kwik/com.isakaro.kwik.ui.inputfields/-allowed-chars/-a-l-l.html","searchKeys":["ALL","val ALL: Nothing? = null","com.isakaro.kwik.ui.inputfields.AllowedChars.ALL"]},{"name":"val KwikColorError: Color","description":"com.isakaro.kwik.ui.theme.KwikColorError","location":"kwik/com.isakaro.kwik.ui.theme/-kwik-color-error.html","searchKeys":["KwikColorError","val KwikColorError: Color","com.isakaro.kwik.ui.theme.KwikColorError"]},{"name":"val KwikColorFilledTextFieldError: Color","description":"com.isakaro.kwik.ui.theme.KwikColorFilledTextFieldError","location":"kwik/com.isakaro.kwik.ui.theme/-kwik-color-filled-text-field-error.html","searchKeys":["KwikColorFilledTextFieldError","val KwikColorFilledTextFieldError: Color","com.isakaro.kwik.ui.theme.KwikColorFilledTextFieldError"]},{"name":"val KwikColorFilledTextFieldFocused: Color","description":"com.isakaro.kwik.ui.theme.KwikColorFilledTextFieldFocused","location":"kwik/com.isakaro.kwik.ui.theme/-kwik-color-filled-text-field-focused.html","searchKeys":["KwikColorFilledTextFieldFocused","val KwikColorFilledTextFieldFocused: Color","com.isakaro.kwik.ui.theme.KwikColorFilledTextFieldFocused"]},{"name":"val KwikColorFilledTextFieldFocusedDarkMode: Color","description":"com.isakaro.kwik.ui.theme.KwikColorFilledTextFieldFocusedDarkMode","location":"kwik/com.isakaro.kwik.ui.theme/-kwik-color-filled-text-field-focused-dark-mode.html","searchKeys":["KwikColorFilledTextFieldFocusedDarkMode","val KwikColorFilledTextFieldFocusedDarkMode: Color","com.isakaro.kwik.ui.theme.KwikColorFilledTextFieldFocusedDarkMode"]},{"name":"val KwikColorFilledTextFieldUnfocused: Color","description":"com.isakaro.kwik.ui.theme.KwikColorFilledTextFieldUnfocused","location":"kwik/com.isakaro.kwik.ui.theme/-kwik-color-filled-text-field-unfocused.html","searchKeys":["KwikColorFilledTextFieldUnfocused","val KwikColorFilledTextFieldUnfocused: Color","com.isakaro.kwik.ui.theme.KwikColorFilledTextFieldUnfocused"]},{"name":"val KwikColorFilledTextFieldUnfocusedDarkMode: Color","description":"com.isakaro.kwik.ui.theme.KwikColorFilledTextFieldUnfocusedDarkMode","location":"kwik/com.isakaro.kwik.ui.theme/-kwik-color-filled-text-field-unfocused-dark-mode.html","searchKeys":["KwikColorFilledTextFieldUnfocusedDarkMode","val KwikColorFilledTextFieldUnfocusedDarkMode: Color","com.isakaro.kwik.ui.theme.KwikColorFilledTextFieldUnfocusedDarkMode"]},{"name":"val KwikColorHint: Color","description":"com.isakaro.kwik.ui.theme.KwikColorHint","location":"kwik/com.isakaro.kwik.ui.theme/-kwik-color-hint.html","searchKeys":["KwikColorHint","val KwikColorHint: Color","com.isakaro.kwik.ui.theme.KwikColorHint"]},{"name":"val KwikColorPrimary: Color","description":"com.isakaro.kwik.ui.theme.KwikColorPrimary","location":"kwik/com.isakaro.kwik.ui.theme/-kwik-color-primary.html","searchKeys":["KwikColorPrimary","val KwikColorPrimary: Color","com.isakaro.kwik.ui.theme.KwikColorPrimary"]},{"name":"val KwikColorSecondary: Color","description":"com.isakaro.kwik.ui.theme.KwikColorSecondary","location":"kwik/com.isakaro.kwik.ui.theme/-kwik-color-secondary.html","searchKeys":["KwikColorSecondary","val KwikColorSecondary: Color","com.isakaro.kwik.ui.theme.KwikColorSecondary"]},{"name":"val KwikColorSuccess: Color","description":"com.isakaro.kwik.ui.theme.KwikColorSuccess","location":"kwik/com.isakaro.kwik.ui.theme/-kwik-color-success.html","searchKeys":["KwikColorSuccess","val KwikColorSuccess: Color","com.isakaro.kwik.ui.theme.KwikColorSuccess"]},{"name":"val KwikColorTertiary: Color","description":"com.isakaro.kwik.ui.theme.KwikColorTertiary","location":"kwik/com.isakaro.kwik.ui.theme/-kwik-color-tertiary.html","searchKeys":["KwikColorTertiary","val KwikColorTertiary: Color","com.isakaro.kwik.ui.theme.KwikColorTertiary"]},{"name":"val KwikColorWarning: Color","description":"com.isakaro.kwik.ui.theme.KwikColorWarning","location":"kwik/com.isakaro.kwik.ui.theme/-kwik-color-warning.html","searchKeys":["KwikColorWarning","val KwikColorWarning: Color","com.isakaro.kwik.ui.theme.KwikColorWarning"]},{"name":"val KwikColorYellow: Color","description":"com.isakaro.kwik.ui.theme.KwikColorYellow","location":"kwik/com.isakaro.kwik.ui.theme/-kwik-color-yellow.html","searchKeys":["KwikColorYellow","val KwikColorYellow: Color","com.isakaro.kwik.ui.theme.KwikColorYellow"]},{"name":"val MutableState<TextFieldValue>.text: String","description":"com.isakaro.kwik.ui.utils.text","location":"kwik/com.isakaro.kwik.ui.utils/text.html","searchKeys":["text","val MutableState<TextFieldValue>.text: String","com.isakaro.kwik.ui.utils.text"]},{"name":"val NUMBERS: Regex","description":"com.isakaro.kwik.ui.inputfields.AllowedChars.NUMBERS","location":"kwik/com.isakaro.kwik.ui.inputfields/-allowed-chars/-n-u-m-b-e-r-s.html","searchKeys":["NUMBERS","val NUMBERS: Regex","com.isakaro.kwik.ui.inputfields.AllowedChars.NUMBERS"]},{"name":"val PasswordRequirements: Map<KwikPasswordRequirementType, PasswordRequirement>","description":"com.isakaro.kwik.ui.form.PasswordRequirements","location":"kwik/com.isakaro.kwik.ui.form/-password-requirements.html","searchKeys":["PasswordRequirements","val PasswordRequirements: Map<KwikPasswordRequirementType, PasswordRequirement>","com.isakaro.kwik.ui.form.PasswordRequirements"]},{"name":"val accentColor: Color? = null","description":"com.isakaro.kwik.ui.timeline.KwikTimelineEntry.accentColor","location":"kwik/com.isakaro.kwik.ui.timeline/-kwik-timeline-entry/accent-color.html","searchKeys":["accentColor","val accentColor: Color? = null","com.isakaro.kwik.ui.timeline.KwikTimelineEntry.accentColor"]},{"name":"val action: () -> Unit","description":"com.isakaro.kwik.ui.list.KwikListItemAction.action","location":"kwik/com.isakaro.kwik.ui.list/-kwik-list-item-action/action.html","searchKeys":["action","val action: () -> Unit","com.isakaro.kwik.ui.list.KwikListItemAction.action"]},{"name":"val action: KwikDropdownItem","description":"com.isakaro.kwik.ui.dropdown.KwikDropdownItemActionState.Data.action","location":"kwik/com.isakaro.kwik.ui.dropdown/-kwik-dropdown-item-action-state/-data/action.html","searchKeys":["action","val action: KwikDropdownItem","com.isakaro.kwik.ui.dropdown.KwikDropdownItemActionState.Data.action"]},{"name":"val action: KwikListItemAction","description":"com.isakaro.kwik.ui.list.KwikListItemActionState.Data.action","location":"kwik/com.isakaro.kwik.ui.list/-kwik-list-item-action-state/-data/action.html","searchKeys":["action","val action: KwikListItemAction","com.isakaro.kwik.ui.list.KwikListItemActionState.Data.action"]},{"name":"val allowContentAccess: Boolean = true","description":"com.isakaro.kwik.ui.webview.KwikWebViewSettings.allowContentAccess","location":"kwik/com.isakaro.kwik.ui.webview/-kwik-web-view-settings/allow-content-access.html","searchKeys":["allowContentAccess","val allowContentAccess: Boolean = true","com.isakaro.kwik.ui.webview.KwikWebViewSettings.allowContentAccess"]},{"name":"val allowFileAccess: Boolean = true","description":"com.isakaro.kwik.ui.webview.KwikWebViewSettings.allowFileAccess","location":"kwik/com.isakaro.kwik.ui.webview/-kwik-web-view-settings/allow-file-access.html","searchKeys":["allowFileAccess","val allowFileAccess: Boolean = true","com.isakaro.kwik.ui.webview.KwikWebViewSettings.allowFileAccess"]},{"name":"val allowFileAccessFromFileURLs: Boolean = false","description":"com.isakaro.kwik.ui.webview.KwikWebViewSettings.allowFileAccessFromFileURLs","location":"kwik/com.isakaro.kwik.ui.webview/-kwik-web-view-settings/allow-file-access-from-file-u-r-ls.html","searchKeys":["allowFileAccessFromFileURLs","val allowFileAccessFromFileURLs: Boolean = false","com.isakaro.kwik.ui.webview.KwikWebViewSettings.allowFileAccessFromFileURLs"]},{"name":"val allowUniversalAccessFromFileURLs: Boolean = false","description":"com.isakaro.kwik.ui.webview.KwikWebViewSettings.allowUniversalAccessFromFileURLs","location":"kwik/com.isakaro.kwik.ui.webview/-kwik-web-view-settings/allow-universal-access-from-file-u-r-ls.html","searchKeys":["allowUniversalAccessFromFileURLs","val allowUniversalAccessFromFileURLs: Boolean = false","com.isakaro.kwik.ui.webview.KwikWebViewSettings.allowUniversalAccessFromFileURLs"]},{"name":"val allowedChars: Regex","description":"com.isakaro.kwik.ui.inputfields.allowedChars","location":"kwik/com.isakaro.kwik.ui.inputfields/allowed-chars.html","searchKeys":["allowedChars","val allowedChars: Regex","com.isakaro.kwik.ui.inputfields.allowedChars"]},{"name":"val backgroundColor: Color","description":"com.isakaro.kwik.ui.toast.KwikToastState.backgroundColor","location":"kwik/com.isakaro.kwik.ui.toast/-kwik-toast-state/background-color.html","searchKeys":["backgroundColor","val backgroundColor: Color","com.isakaro.kwik.ui.toast.KwikToastState.backgroundColor"]},{"name":"val biometricsLevel: Int","description":"com.isakaro.kwik.ui.biometrics.KwikBiometricPromptParams.biometricsLevel","location":"kwik/com.isakaro.kwik.ui.biometrics/-kwik-biometric-prompt-params/biometrics-level.html","searchKeys":["biometricsLevel","val biometricsLevel: Int","com.isakaro.kwik.ui.biometrics.KwikBiometricPromptParams.biometricsLevel"]},{"name":"val borderRadius: Float = 4.0f","description":"com.isakaro.kwik.ui.tabs.KwikIndicatorProps.borderRadius","location":"kwik/com.isakaro.kwik.ui.tabs/-kwik-indicator-props/border-radius.html","searchKeys":["borderRadius","val borderRadius: Float = 4.0f","com.isakaro.kwik.ui.tabs.KwikIndicatorProps.borderRadius"]},{"name":"val cancelText: String","description":"com.isakaro.kwik.ui.biometrics.KwikBiometricPromptParams.cancelText","location":"kwik/com.isakaro.kwik.ui.biometrics/-kwik-biometric-prompt-params/cancel-text.html","searchKeys":["cancelText","val cancelText: String","com.isakaro.kwik.ui.biometrics.KwikBiometricPromptParams.cancelText"]},{"name":"val code: KwikCountry","description":"com.isakaro.kwik.ui.utils.KwikCountryInfo.code","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country-info/code.html","searchKeys":["code","val code: KwikCountry","com.isakaro.kwik.ui.utils.KwikCountryInfo.code"]},{"name":"val colPosition: Int","description":"com.isakaro.kwik.ui.grid.KwikDiv.colPosition","location":"kwik/com.isakaro.kwik.ui.grid/-kwik-div/col-position.html","searchKeys":["colPosition","val colPosition: Int","com.isakaro.kwik.ui.grid.KwikDiv.colPosition"]},{"name":"val colSpan: Int = 1","description":"com.isakaro.kwik.ui.grid.KwikDiv.colSpan","location":"kwik/com.isakaro.kwik.ui.grid/-kwik-div/col-span.html","searchKeys":["colSpan","val colSpan: Int = 1","com.isakaro.kwik.ui.grid.KwikDiv.colSpan"]},{"name":"val content: () -> Unit","description":"com.isakaro.kwik.ui.grid.KwikDiv.content","location":"kwik/com.isakaro.kwik.ui.grid/-kwik-div/content.html","searchKeys":["content","val content: () -> Unit","com.isakaro.kwik.ui.grid.KwikDiv.content"]},{"name":"val content: () -> Unit","description":"com.isakaro.kwik.ui.tabs.KwikTabItem.content","location":"kwik/com.isakaro.kwik.ui.tabs/-kwik-tab-item/content.html","searchKeys":["content","val content: () -> Unit","com.isakaro.kwik.ui.tabs.KwikTabItem.content"]},{"name":"val content: () -> Unit? = null","description":"com.isakaro.kwik.ui.timeline.KwikTimelineEntry.content","location":"kwik/com.isakaro.kwik.ui.timeline/-kwik-timeline-entry/content.html","searchKeys":["content","val content: () -> Unit? = null","com.isakaro.kwik.ui.timeline.KwikTimelineEntry.content"]},{"name":"val content: String","description":"com.isakaro.kwik.ui.accordion.KwikAccordionItem.content","location":"kwik/com.isakaro.kwik.ui.accordion/-kwik-accordion-item/content.html","searchKeys":["content","val content: String","com.isakaro.kwik.ui.accordion.KwikAccordionItem.content"]},{"name":"val cookies: List<KwikCookie>","description":"com.isakaro.kwik.ui.webview.KwikWebViewSettings.cookies","location":"kwik/com.isakaro.kwik.ui.webview/-kwik-web-view-settings/cookies.html","searchKeys":["cookies","val cookies: List<KwikCookie>","com.isakaro.kwik.ui.webview.KwikWebViewSettings.cookies"]},{"name":"val counter: Int = 0","description":"com.isakaro.kwik.ui.tabs.KwikTabItem.counter","location":"kwik/com.isakaro.kwik.ui.tabs/-kwik-tab-item/counter.html","searchKeys":["counter","val counter: Int = 0","com.isakaro.kwik.ui.tabs.KwikTabItem.counter"]},{"name":"val countryList: List<KwikCountryInfo>","description":"com.isakaro.kwik.ui.utils.countryList","location":"kwik/com.isakaro.kwik.ui.utils/country-list.html","searchKeys":["countryList","val countryList: List<KwikCountryInfo>","com.isakaro.kwik.ui.utils.countryList"]},{"name":"val debug: Boolean = false","description":"com.isakaro.kwik.ui.webview.KwikWebViewSettings.debug","location":"kwik/com.isakaro.kwik.ui.webview/-kwik-web-view-settings/debug.html","searchKeys":["debug","val debug: Boolean = false","com.isakaro.kwik.ui.webview.KwikWebViewSettings.debug"]},{"name":"val description: String","description":"com.isakaro.kwik.ui.form.PasswordRequirement.description","location":"kwik/com.isakaro.kwik.ui.form/-password-requirement/description.html","searchKeys":["description","val description: String","com.isakaro.kwik.ui.form.PasswordRequirement.description"]},{"name":"val description: String","description":"com.isakaro.kwik.ui.list.KwikListItemAction.description","location":"kwik/com.isakaro.kwik.ui.list/-kwik-list-item-action/description.html","searchKeys":["description","val description: String","com.isakaro.kwik.ui.list.KwikListItemAction.description"]},{"name":"val description: String? = null","description":"com.isakaro.kwik.ui.timeline.KwikTimelineEntry.description","location":"kwik/com.isakaro.kwik.ui.timeline/-kwik-timeline-entry/description.html","searchKeys":["description","val description: String? = null","com.isakaro.kwik.ui.timeline.KwikTimelineEntry.description"]},{"name":"val dialingCode: String","description":"com.isakaro.kwik.ui.utils.KwikCountryInfo.dialingCode","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country-info/dialing-code.html","searchKeys":["dialingCode","val dialingCode: String","com.isakaro.kwik.ui.utils.KwikCountryInfo.dialingCode"]},{"name":"val divider: Boolean = false","description":"com.isakaro.kwik.ui.dropdown.KwikDropdownItem.divider","location":"kwik/com.isakaro.kwik.ui.dropdown/-kwik-dropdown-item/divider.html","searchKeys":["divider","val divider: Boolean = false","com.isakaro.kwik.ui.dropdown.KwikDropdownItem.divider"]},{"name":"val domStorageEnabled: Boolean = true","description":"com.isakaro.kwik.ui.webview.KwikWebViewSettings.domStorageEnabled","location":"kwik/com.isakaro.kwik.ui.webview/-kwik-web-view-settings/dom-storage-enabled.html","searchKeys":["domStorageEnabled","val domStorageEnabled: Boolean = true","com.isakaro.kwik.ui.webview.KwikWebViewSettings.domStorageEnabled"]},{"name":"val domain: String","description":"com.isakaro.kwik.ui.webview.KwikCookie.domain","location":"kwik/com.isakaro.kwik.ui.webview/-kwik-cookie/domain.html","searchKeys":["domain","val domain: String","com.isakaro.kwik.ui.webview.KwikCookie.domain"]},{"name":"val duration: Long = 4000","description":"com.isakaro.kwik.ui.toast.KwikToastState.duration","location":"kwik/com.isakaro.kwik.ui.toast/-kwik-toast-state/duration.html","searchKeys":["duration","val duration: Long = 4000","com.isakaro.kwik.ui.toast.KwikToastState.duration"]},{"name":"val enabled: Boolean = true","description":"com.isakaro.kwik.ui.dropdown.KwikDropdownItem.enabled","location":"kwik/com.isakaro.kwik.ui.dropdown/-kwik-dropdown-item/enabled.html","searchKeys":["enabled","val enabled: Boolean = true","com.isakaro.kwik.ui.dropdown.KwikDropdownItem.enabled"]},{"name":"val entries: EnumEntries<ImageLoaderState>","description":"com.isakaro.kwik.ui.image.ImageLoaderState.entries","location":"kwik/com.isakaro.kwik.ui.image/-image-loader-state/entries.html","searchKeys":["entries","val entries: EnumEntries<ImageLoaderState>","com.isakaro.kwik.ui.image.ImageLoaderState.entries"]},{"name":"val entries: EnumEntries<KwikButtonLoadingStyle>","description":"com.isakaro.kwik.ui.button.KwikButtonLoadingStyle.entries","location":"kwik/com.isakaro.kwik.ui.button/-kwik-button-loading-style/entries.html","searchKeys":["entries","val entries: EnumEntries<KwikButtonLoadingStyle>","com.isakaro.kwik.ui.button.KwikButtonLoadingStyle.entries"]},{"name":"val entries: EnumEntries<KwikCountry>","description":"com.isakaro.kwik.ui.utils.KwikCountry.entries","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country/entries.html","searchKeys":["entries","val entries: EnumEntries<KwikCountry>","com.isakaro.kwik.ui.utils.KwikCountry.entries"]},{"name":"val entries: EnumEntries<KwikDatePickerMode>","description":"com.isakaro.kwik.ui.date.KwikDatePickerMode.entries","location":"kwik/com.isakaro.kwik.ui.date/-kwik-date-picker-mode/entries.html","searchKeys":["entries","val entries: EnumEntries<KwikDatePickerMode>","com.isakaro.kwik.ui.date.KwikDatePickerMode.entries"]},{"name":"val entries: EnumEntries<KwikPasswordRequirementType>","description":"com.isakaro.kwik.ui.form.KwikPasswordRequirementType.entries","location":"kwik/com.isakaro.kwik.ui.form/-kwik-password-requirement-type/entries.html","searchKeys":["entries","val entries: EnumEntries<KwikPasswordRequirementType>","com.isakaro.kwik.ui.form.KwikPasswordRequirementType.entries"]},{"name":"val entries: EnumEntries<KwikSocialPlatform>","description":"com.isakaro.kwik.ui.button.KwikSocialPlatform.entries","location":"kwik/com.isakaro.kwik.ui.button/-kwik-social-platform/entries.html","searchKeys":["entries","val entries: EnumEntries<KwikSocialPlatform>","com.isakaro.kwik.ui.button.KwikSocialPlatform.entries"]},{"name":"val entries: EnumEntries<KwikToastType>","description":"com.isakaro.kwik.ui.toast.KwikToastType.entries","location":"kwik/com.isakaro.kwik.ui.toast/-kwik-toast-type/entries.html","searchKeys":["entries","val entries: EnumEntries<KwikToastType>","com.isakaro.kwik.ui.toast.KwikToastType.entries"]},{"name":"val expires: String","description":"com.isakaro.kwik.ui.webview.KwikCookie.expires","location":"kwik/com.isakaro.kwik.ui.webview/-kwik-cookie/expires.html","searchKeys":["expires","val expires: String","com.isakaro.kwik.ui.webview.KwikCookie.expires"]},{"name":"val flag: Int","description":"com.isakaro.kwik.ui.utils.KwikCountryInfo.flag","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country-info/flag.html","searchKeys":["flag","val flag: Int","com.isakaro.kwik.ui.utils.KwikCountryInfo.flag"]},{"name":"val hasError: Boolean = false","description":"com.isakaro.kwik.ui.accordion.KwikAccordionItem.hasError","location":"kwik/com.isakaro.kwik.ui.accordion/-kwik-accordion-item/has-error.html","searchKeys":["hasError","val hasError: Boolean = false","com.isakaro.kwik.ui.accordion.KwikAccordionItem.hasError"]},{"name":"val height: Float = 4.0f","description":"com.isakaro.kwik.ui.tabs.KwikIndicatorProps.height","location":"kwik/com.isakaro.kwik.ui.tabs/-kwik-indicator-props/height.html","searchKeys":["height","val height: Float = 4.0f","com.isakaro.kwik.ui.tabs.KwikIndicatorProps.height"]},{"name":"val horizontalPadding: Float = 0.0f","description":"com.isakaro.kwik.ui.tabs.KwikIndicatorProps.horizontalPadding","location":"kwik/com.isakaro.kwik.ui.tabs/-kwik-indicator-props/horizontal-padding.html","searchKeys":["horizontalPadding","val horizontalPadding: Float = 0.0f","com.isakaro.kwik.ui.tabs.KwikIndicatorProps.horizontalPadding"]},{"name":"val icon: Any? = null","description":"com.isakaro.kwik.ui.list.KwikListItemAction.icon","location":"kwik/com.isakaro.kwik.ui.list/-kwik-list-item-action/icon.html","searchKeys":["icon","val icon: Any? = null","com.isakaro.kwik.ui.list.KwikListItemAction.icon"]},{"name":"val icon: Any? = null","description":"com.isakaro.kwik.ui.tabs.KwikTabItem.icon","location":"kwik/com.isakaro.kwik.ui.tabs/-kwik-tab-item/icon.html","searchKeys":["icon","val icon: Any? = null","com.isakaro.kwik.ui.tabs.KwikTabItem.icon"]},{"name":"val icon: Any? = null","description":"com.isakaro.kwik.ui.timeline.KwikTimelineEntry.icon","location":"kwik/com.isakaro.kwik.ui.timeline/-kwik-timeline-entry/icon.html","searchKeys":["icon","val icon: Any? = null","com.isakaro.kwik.ui.timeline.KwikTimelineEntry.icon"]},{"name":"val id: Any","description":"com.isakaro.kwik.ui.inputfields.KwikTagsInputItem.id","location":"kwik/com.isakaro.kwik.ui.inputfields/-kwik-tags-input-item/id.html","searchKeys":["id","val id: Any","com.isakaro.kwik.ui.inputfields.KwikTagsInputItem.id"]},{"name":"val id: Any","description":"com.isakaro.kwik.ui.timeline.KwikTimelineEntry.id","location":"kwik/com.isakaro.kwik.ui.timeline/-kwik-timeline-entry/id.html","searchKeys":["id","val id: Any","com.isakaro.kwik.ui.timeline.KwikTimelineEntry.id"]},{"name":"val id: UUID","description":"com.isakaro.kwik.ui.dropdown.KwikDropdownItem.id","location":"kwik/com.isakaro.kwik.ui.dropdown/-kwik-dropdown-item/id.html","searchKeys":["id","val id: UUID","com.isakaro.kwik.ui.dropdown.KwikDropdownItem.id"]},{"name":"val id: UUID","description":"com.isakaro.kwik.ui.dropdown.KwikDropdownItemActionState.Divider.id","location":"kwik/com.isakaro.kwik.ui.dropdown/-kwik-dropdown-item-action-state/-divider/id.html","searchKeys":["id","val id: UUID","com.isakaro.kwik.ui.dropdown.KwikDropdownItemActionState.Divider.id"]},{"name":"val id: UUID","description":"com.isakaro.kwik.ui.dropdown.KwikDropdownItemActionState.Space.id","location":"kwik/com.isakaro.kwik.ui.dropdown/-kwik-dropdown-item-action-state/-space/id.html","searchKeys":["id","val id: UUID","com.isakaro.kwik.ui.dropdown.KwikDropdownItemActionState.Space.id"]},{"name":"val id: UUID","description":"com.isakaro.kwik.ui.filterchip.KwikFilterChipOption.id","location":"kwik/com.isakaro.kwik.ui.filterchip/-kwik-filter-chip-option/id.html","searchKeys":["id","val id: UUID","com.isakaro.kwik.ui.filterchip.KwikFilterChipOption.id"]},{"name":"val id: UUID","description":"com.isakaro.kwik.ui.list.KwikListItemAction.id","location":"kwik/com.isakaro.kwik.ui.list/-kwik-list-item-action/id.html","searchKeys":["id","val id: UUID","com.isakaro.kwik.ui.list.KwikListItemAction.id"]},{"name":"val id: UUID","description":"com.isakaro.kwik.ui.list.KwikListItemActionState.Space.id","location":"kwik/com.isakaro.kwik.ui.list/-kwik-list-item-action-state/-space/id.html","searchKeys":["id","val id: UUID","com.isakaro.kwik.ui.list.KwikListItemActionState.Space.id"]},{"name":"val id: UUID","description":"com.isakaro.kwik.ui.permissions.KwikPermissionRequest.id","location":"kwik/com.isakaro.kwik.ui.permissions/-kwik-permission-request/id.html","searchKeys":["id","val id: UUID","com.isakaro.kwik.ui.permissions.KwikPermissionRequest.id"]},{"name":"val id: UUID","description":"com.isakaro.kwik.ui.toast.KwikToastState.id","location":"kwik/com.isakaro.kwik.ui.toast/-kwik-toast-state/id.html","searchKeys":["id","val id: UUID","com.isakaro.kwik.ui.toast.KwikToastState.id"]},{"name":"val isConnected: Boolean","description":"com.isakaro.kwik.ui.utils.KwikNetworkUtils.isConnected","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-network-utils/is-connected.html","searchKeys":["isConnected","val isConnected: Boolean","com.isakaro.kwik.ui.utils.KwikNetworkUtils.isConnected"]},{"name":"val isVisible: Boolean = false","description":"com.isakaro.kwik.ui.toast.KwikToastState.isVisible","location":"kwik/com.isakaro.kwik.ui.toast/-kwik-toast-state/is-visible.html","searchKeys":["isVisible","val isVisible: Boolean = false","com.isakaro.kwik.ui.toast.KwikToastState.isVisible"]},{"name":"val itemCount: Int","description":"com.isakaro.kwik.ui.carousel.KwikCarouselState.itemCount","location":"kwik/com.isakaro.kwik.ui.carousel/-kwik-carousel-state/item-count.html","searchKeys":["itemCount","val itemCount: Int","com.isakaro.kwik.ui.carousel.KwikCarouselState.itemCount"]},{"name":"val javaScriptCanOpenWindowsAutomatically: Boolean = true","description":"com.isakaro.kwik.ui.webview.KwikWebViewSettings.javaScriptCanOpenWindowsAutomatically","location":"kwik/com.isakaro.kwik.ui.webview/-kwik-web-view-settings/java-script-can-open-windows-automatically.html","searchKeys":["javaScriptCanOpenWindowsAutomatically","val javaScriptCanOpenWindowsAutomatically: Boolean = true","com.isakaro.kwik.ui.webview.KwikWebViewSettings.javaScriptCanOpenWindowsAutomatically"]},{"name":"val javaScriptEnabled: Boolean = true","description":"com.isakaro.kwik.ui.webview.KwikWebViewSettings.javaScriptEnabled","location":"kwik/com.isakaro.kwik.ui.webview/-kwik-web-view-settings/java-script-enabled.html","searchKeys":["javaScriptEnabled","val javaScriptEnabled: Boolean = true","com.isakaro.kwik.ui.webview.KwikWebViewSettings.javaScriptEnabled"]},{"name":"val label: String","description":"com.isakaro.kwik.ui.button.KwikToggleGroupOption.label","location":"kwik/com.isakaro.kwik.ui.button/-kwik-toggle-group-option/label.html","searchKeys":["label","val label: String","com.isakaro.kwik.ui.button.KwikToggleGroupOption.label"]},{"name":"val label: String","description":"com.isakaro.kwik.ui.filterchip.KwikFilterChipOption.label","location":"kwik/com.isakaro.kwik.ui.filterchip/-kwik-filter-chip-option/label.html","searchKeys":["label","val label: String","com.isakaro.kwik.ui.filterchip.KwikFilterChipOption.label"]},{"name":"val label: String","description":"com.isakaro.kwik.ui.inputfields.KwikTagsInputItem.label","location":"kwik/com.isakaro.kwik.ui.inputfields/-kwik-tags-input-item/label.html","searchKeys":["label","val label: String","com.isakaro.kwik.ui.inputfields.KwikTagsInputItem.label"]},{"name":"val label: String","description":"com.isakaro.kwik.ui.radio.KwikRadioItem.label","location":"kwik/com.isakaro.kwik.ui.radio/-kwik-radio-item/label.html","searchKeys":["label","val label: String","com.isakaro.kwik.ui.radio.KwikRadioItem.label"]},{"name":"val leadingIcon: () -> Unit? = null","description":"com.isakaro.kwik.ui.dropdown.KwikDropdownItem.leadingIcon","location":"kwik/com.isakaro.kwik.ui.dropdown/-kwik-dropdown-item/leading-icon.html","searchKeys":["leadingIcon","val leadingIcon: () -> Unit? = null","com.isakaro.kwik.ui.dropdown.KwikDropdownItem.leadingIcon"]},{"name":"val maxQuantity: Int = 100","description":"com.isakaro.kwik.ui.inputfields.KwikTagsInputItem.maxQuantity","location":"kwik/com.isakaro.kwik.ui.inputfields/-kwik-tags-input-item/max-quantity.html","searchKeys":["maxQuantity","val maxQuantity: Int = 100","com.isakaro.kwik.ui.inputfields.KwikTagsInputItem.maxQuantity"]},{"name":"val maxYear: Int","description":"com.isakaro.kwik.ui.date.KwikYearsData.maxYear","location":"kwik/com.isakaro.kwik.ui.date/-kwik-years-data/max-year.html","searchKeys":["maxYear","val maxYear: Int","com.isakaro.kwik.ui.date.KwikYearsData.maxYear"]},{"name":"val message: String","description":"com.isakaro.kwik.ui.toast.KwikToastState.message","location":"kwik/com.isakaro.kwik.ui.toast/-kwik-toast-state/message.html","searchKeys":["message","val message: String","com.isakaro.kwik.ui.toast.KwikToastState.message"]},{"name":"val minQuantity: Int = 1","description":"com.isakaro.kwik.ui.inputfields.KwikTagsInputItem.minQuantity","location":"kwik/com.isakaro.kwik.ui.inputfields/-kwik-tags-input-item/min-quantity.html","searchKeys":["minQuantity","val minQuantity: Int = 1","com.isakaro.kwik.ui.inputfields.KwikTagsInputItem.minQuantity"]},{"name":"val minYear: Int = 1965","description":"com.isakaro.kwik.ui.date.KwikYearsData.minYear","location":"kwik/com.isakaro.kwik.ui.date/-kwik-years-data/min-year.html","searchKeys":["minYear","val minYear: Int = 1965","com.isakaro.kwik.ui.date.KwikYearsData.minYear"]},{"name":"val name: String","description":"com.isakaro.kwik.ui.utils.KwikCountryInfo.name","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country-info/name.html","searchKeys":["name","val name: String","com.isakaro.kwik.ui.utils.KwikCountryInfo.name"]},{"name":"val name: String","description":"com.isakaro.kwik.ui.webview.KwikCookie.name","location":"kwik/com.isakaro.kwik.ui.webview/-kwik-cookie/name.html","searchKeys":["name","val name: String","com.isakaro.kwik.ui.webview.KwikCookie.name"]},{"name":"val networkState: StateFlow<KwikNetworkUtils.NetworkState>","description":"com.isakaro.kwik.ui.utils.KwikNetworkUtils.networkState","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-network-utils/network-state.html","searchKeys":["networkState","val networkState: StateFlow<KwikNetworkUtils.NetworkState>","com.isakaro.kwik.ui.utils.KwikNetworkUtils.networkState"]},{"name":"val onClick: () -> Unit","description":"com.isakaro.kwik.ui.dropdown.KwikDropdownItem.onClick","location":"kwik/com.isakaro.kwik.ui.dropdown/-kwik-dropdown-item/on-click.html","searchKeys":["onClick","val onClick: () -> Unit","com.isakaro.kwik.ui.dropdown.KwikDropdownItem.onClick"]},{"name":"val onClick: () -> Unit","description":"com.isakaro.kwik.ui.grid.KwikDiv.onClick","location":"kwik/com.isakaro.kwik.ui.grid/-kwik-div/on-click.html","searchKeys":["onClick","val onClick: () -> Unit","com.isakaro.kwik.ui.grid.KwikDiv.onClick"]},{"name":"val onClick: (KwikTimelineEntry) -> Unit","description":"com.isakaro.kwik.ui.timeline.KwikTimelineEntry.onClick","location":"kwik/com.isakaro.kwik.ui.timeline/-kwik-timeline-entry/on-click.html","searchKeys":["onClick","val onClick: (KwikTimelineEntry) -> Unit","com.isakaro.kwik.ui.timeline.KwikTimelineEntry.onClick"]},{"name":"val path: String","description":"com.isakaro.kwik.ui.webview.KwikCookie.path","location":"kwik/com.isakaro.kwik.ui.webview/-kwik-cookie/path.html","searchKeys":["path","val path: String","com.isakaro.kwik.ui.webview.KwikCookie.path"]},{"name":"val permission: String","description":"com.isakaro.kwik.ui.permissions.KwikPermissionDto.permission","location":"kwik/com.isakaro.kwik.ui.permissions/-kwik-permission-dto/permission.html","searchKeys":["permission","val permission: String","com.isakaro.kwik.ui.permissions.KwikPermissionDto.permission"]},{"name":"val quantity: Int = 1","description":"com.isakaro.kwik.ui.inputfields.KwikTagsInputItem.quantity","location":"kwik/com.isakaro.kwik.ui.inputfields/-kwik-tags-input-item/quantity.html","searchKeys":["quantity","val quantity: Int = 1","com.isakaro.kwik.ui.inputfields.KwikTagsInputItem.quantity"]},{"name":"val rationaleMessage: String","description":"com.isakaro.kwik.ui.permissions.KwikPermissionDto.rationaleMessage","location":"kwik/com.isakaro.kwik.ui.permissions/-kwik-permission-dto/rationale-message.html","searchKeys":["rationaleMessage","val rationaleMessage: String","com.isakaro.kwik.ui.permissions.KwikPermissionDto.rationaleMessage"]},{"name":"val rowPosition: Int","description":"com.isakaro.kwik.ui.grid.KwikDiv.rowPosition","location":"kwik/com.isakaro.kwik.ui.grid/-kwik-div/row-position.html","searchKeys":["rowPosition","val rowPosition: Int","com.isakaro.kwik.ui.grid.KwikDiv.rowPosition"]},{"name":"val rowSpan: Int = 1","description":"com.isakaro.kwik.ui.grid.KwikDiv.rowSpan","location":"kwik/com.isakaro.kwik.ui.grid/-kwik-div/row-span.html","searchKeys":["rowSpan","val rowSpan: Int = 1","com.isakaro.kwik.ui.grid.KwikDiv.rowSpan"]},{"name":"val state: KwikPermissionRequestState","description":"com.isakaro.kwik.ui.permissions.KwikPermissionRequest.state","location":"kwik/com.isakaro.kwik.ui.permissions/-kwik-permission-request/state.html","searchKeys":["state","val state: KwikPermissionRequestState","com.isakaro.kwik.ui.permissions.KwikPermissionRequest.state"]},{"name":"val steps: List<String>","description":"com.isakaro.kwik.ui.stepper.KwikStepperState.steps","location":"kwik/com.isakaro.kwik.ui.stepper/-kwik-stepper-state/steps.html","searchKeys":["steps","val steps: List<String>","com.isakaro.kwik.ui.stepper.KwikStepperState.steps"]},{"name":"val subtitle: String","description":"com.isakaro.kwik.ui.biometrics.KwikBiometricPromptParams.subtitle","location":"kwik/com.isakaro.kwik.ui.biometrics/-kwik-biometric-prompt-params/subtitle.html","searchKeys":["subtitle","val subtitle: String","com.isakaro.kwik.ui.biometrics.KwikBiometricPromptParams.subtitle"]},{"name":"val supportMultipleWindows: Boolean = true","description":"com.isakaro.kwik.ui.webview.KwikWebViewSettings.supportMultipleWindows","location":"kwik/com.isakaro.kwik.ui.webview/-kwik-web-view-settings/support-multiple-windows.html","searchKeys":["supportMultipleWindows","val supportMultipleWindows: Boolean = true","com.isakaro.kwik.ui.webview.KwikWebViewSettings.supportMultipleWindows"]},{"name":"val tags: List<String>","description":"com.isakaro.kwik.ui.utils.KwikCountryInfo.tags","location":"kwik/com.isakaro.kwik.ui.utils/-kwik-country-info/tags.html","searchKeys":["tags","val tags: List<String>","com.isakaro.kwik.ui.utils.KwikCountryInfo.tags"]},{"name":"val text: () -> Unit","description":"com.isakaro.kwik.ui.dropdown.KwikDropdownItem.text","location":"kwik/com.isakaro.kwik.ui.dropdown/-kwik-dropdown-item/text.html","searchKeys":["text","val text: () -> Unit","com.isakaro.kwik.ui.dropdown.KwikDropdownItem.text"]},{"name":"val tint: Color? = null","description":"com.isakaro.kwik.ui.list.KwikListItemAction.tint","location":"kwik/com.isakaro.kwik.ui.list/-kwik-list-item-action/tint.html","searchKeys":["tint","val tint: Color? = null","com.isakaro.kwik.ui.list.KwikListItemAction.tint"]},{"name":"val title: String","description":"com.isakaro.kwik.ui.accordion.KwikAccordionItem.title","location":"kwik/com.isakaro.kwik.ui.accordion/-kwik-accordion-item/title.html","searchKeys":["title","val title: String","com.isakaro.kwik.ui.accordion.KwikAccordionItem.title"]},{"name":"val title: String","description":"com.isakaro.kwik.ui.biometrics.KwikBiometricPromptParams.title","location":"kwik/com.isakaro.kwik.ui.biometrics/-kwik-biometric-prompt-params/title.html","searchKeys":["title","val title: String","com.isakaro.kwik.ui.biometrics.KwikBiometricPromptParams.title"]},{"name":"val title: String","description":"com.isakaro.kwik.ui.dropdown.KwikDropdownItemActionState.Header.title","location":"kwik/com.isakaro.kwik.ui.dropdown/-kwik-dropdown-item-action-state/-header/title.html","searchKeys":["title","val title: String","com.isakaro.kwik.ui.dropdown.KwikDropdownItemActionState.Header.title"]},{"name":"val title: String","description":"com.isakaro.kwik.ui.list.KwikListItemAction.title","location":"kwik/com.isakaro.kwik.ui.list/-kwik-list-item-action/title.html","searchKeys":["title","val title: String","com.isakaro.kwik.ui.list.KwikListItemAction.title"]},{"name":"val title: String","description":"com.isakaro.kwik.ui.list.KwikListItemActionState.Header.title","location":"kwik/com.isakaro.kwik.ui.list/-kwik-list-item-action-state/-header/title.html","searchKeys":["title","val title: String","com.isakaro.kwik.ui.list.KwikListItemActionState.Header.title"]},{"name":"val title: String? = null","description":"com.isakaro.kwik.ui.tabs.KwikTabItem.title","location":"kwik/com.isakaro.kwik.ui.tabs/-kwik-tab-item/title.html","searchKeys":["title","val title: String? = null","com.isakaro.kwik.ui.tabs.KwikTabItem.title"]},{"name":"val title: String? = null","description":"com.isakaro.kwik.ui.timeline.KwikTimelineEntry.title","location":"kwik/com.isakaro.kwik.ui.timeline/-kwik-timeline-entry/title.html","searchKeys":["title","val title: String? = null","com.isakaro.kwik.ui.timeline.KwikTimelineEntry.title"]},{"name":"val trailingIcon: () -> Unit? = null","description":"com.isakaro.kwik.ui.dropdown.KwikDropdownItem.trailingIcon","location":"kwik/com.isakaro.kwik.ui.dropdown/-kwik-dropdown-item/trailing-icon.html","searchKeys":["trailingIcon","val trailingIcon: () -> Unit? = null","com.isakaro.kwik.ui.dropdown.KwikDropdownItem.trailingIcon"]},{"name":"val type: KwikToastType","description":"com.isakaro.kwik.ui.toast.KwikToastState.type","location":"kwik/com.isakaro.kwik.ui.toast/-kwik-toast-state/type.html","searchKeys":["type","val type: KwikToastType","com.isakaro.kwik.ui.toast.KwikToastState.type"]},{"name":"val userAgent: String","description":"com.isakaro.kwik.ui.webview.KwikWebViewSettings.userAgent","location":"kwik/com.isakaro.kwik.ui.webview/-kwik-web-view-settings/user-agent.html","searchKeys":["userAgent","val userAgent: String","com.isakaro.kwik.ui.webview.KwikWebViewSettings.userAgent"]},{"name":"val value: String","description":"com.isakaro.kwik.ui.webview.KwikCookie.value","location":"kwik/com.isakaro.kwik.ui.webview/-kwik-cookie/value.html","searchKeys":["value","val value: String","com.isakaro.kwik.ui.webview.KwikCookie.value"]},{"name":"val value: T","description":"com.isakaro.kwik.ui.button.KwikToggleGroupOption.value","location":"kwik/com.isakaro.kwik.ui.button/-kwik-toggle-group-option/value.html","searchKeys":["value","val value: T","com.isakaro.kwik.ui.button.KwikToggleGroupOption.value"]},{"name":"val value: T","description":"com.isakaro.kwik.ui.filterchip.KwikFilterChipOption.value","location":"kwik/com.isakaro.kwik.ui.filterchip/-kwik-filter-chip-option/value.html","searchKeys":["value","val value: T","com.isakaro.kwik.ui.filterchip.KwikFilterChipOption.value"]},{"name":"val value: T","description":"com.isakaro.kwik.ui.radio.KwikRadioItem.value","location":"kwik/com.isakaro.kwik.ui.radio/-kwik-radio-item/value.html","searchKeys":["value","val value: T","com.isakaro.kwik.ui.radio.KwikRadioItem.value"]},{"name":"val verticalPadding: Float = 0.0f","description":"com.isakaro.kwik.ui.tabs.KwikIndicatorProps.verticalPadding","location":"kwik/com.isakaro.kwik.ui.tabs/-kwik-indicator-props/vertical-padding.html","searchKeys":["verticalPadding","val verticalPadding: Float = 0.0f","com.isakaro.kwik.ui.tabs.KwikIndicatorProps.verticalPadding"]},{"name":"val width: Float = 0.8f","description":"com.isakaro.kwik.ui.tabs.KwikIndicatorProps.width","location":"kwik/com.isakaro.kwik.ui.tabs/-kwik-indicator-props/width.html","searchKeys":["width","val width: Float = 0.8f","com.isakaro.kwik.ui.tabs.KwikIndicatorProps.width"]},{"name":"var currentIndex: Int","description":"com.isakaro.kwik.ui.carousel.KwikCarouselState.currentIndex","location":"kwik/com.isakaro.kwik.ui.carousel/-kwik-carousel-state/current-index.html","searchKeys":["currentIndex","var currentIndex: Int","com.isakaro.kwik.ui.carousel.KwikCarouselState.currentIndex"]},{"name":"var currentStep: Int","description":"com.isakaro.kwik.ui.stepper.KwikStepperState.currentStep","location":"kwik/com.isakaro.kwik.ui.stepper/-kwik-stepper-state/current-step.html","searchKeys":["currentStep","var currentStep: Int","com.isakaro.kwik.ui.stepper.KwikStepperState.currentStep"]},{"name":"var initialIndex: Int","description":"com.isakaro.kwik.ui.carousel.KwikCarouselState.initialIndex","location":"kwik/com.isakaro.kwik.ui.carousel/-kwik-carousel-state/initial-index.html","searchKeys":["initialIndex","var initialIndex: Int","com.isakaro.kwik.ui.carousel.KwikCarouselState.initialIndex"]},{"name":"var isComplete: Boolean","description":"com.isakaro.kwik.ui.stepper.KwikStepperState.isComplete","location":"kwik/com.isakaro.kwik.ui.stepper/-kwik-stepper-state/is-complete.html","searchKeys":["isComplete","var isComplete: Boolean","com.isakaro.kwik.ui.stepper.KwikStepperState.isComplete"]},{"name":"var loop: Boolean","description":"com.isakaro.kwik.ui.carousel.KwikCarouselState.loop","location":"kwik/com.isakaro.kwik.ui.carousel/-kwik-carousel-state/loop.html","searchKeys":["loop","var loop: Boolean","com.isakaro.kwik.ui.carousel.KwikCarouselState.loop"]},{"name":"var requirementMet: Boolean","description":"com.isakaro.kwik.ui.form.PasswordRequirement.requirementMet","location":"kwik/com.isakaro.kwik.ui.form/-password-requirement/requirement-met.html","searchKeys":["requirementMet","var requirementMet: Boolean","com.isakaro.kwik.ui.form.PasswordRequirement.requirementMet"]},{"name":"var visible: Boolean","description":"com.isakaro.kwik.ui.form.PasswordRequirement.visible","location":"kwik/com.isakaro.kwik.ui.form/-password-requirement/visible.html","searchKeys":["visible","var visible: Boolean","com.isakaro.kwik.ui.form.PasswordRequirement.visible"]}]